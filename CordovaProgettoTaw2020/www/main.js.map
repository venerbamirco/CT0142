{"version":3,"sources":["./src/app/componenti/homepagestudente/functions/gestioneTipologieChat.ts","./src/app/componenti/homepagenonloggato/homepagenonloggato.component.ts","./src/app/componenti/homepagenonloggato/homepagenonloggato.component.html","./src/app/componenti/homepagestudente/functions/nuovaOffertaInserzione.ts","ws (ignored)","./src/app/componenti/homepagemoderatore/functions/aggiornamentoDati.ts","./src/app/servizi/statistiche.service.ts","./src/environments/environment.ts","./src/app/servizi/persona.service.ts","./src/app/componenti/modificapassword/modificapassword.component.ts","./src/app/componenti/modificapassword/modificapassword.component.html","./src/app/componenti/homepagestudente/functions/gestioneInserzione.ts","./src/app/componenti/homepagestudente/functions/gestioneListaStudentiChattato.ts","./src/app/componenti/login/login.component.ts","./src/app/componenti/login/login.component.html","./src/app/componenti/homepagenonloggato/functions/gestioneChat.ts","./src/app/componenti/homepagestudente/functions/utility.ts","./src/app/classi/offerta.ts","./src/app/servizi/inserzione.service.ts","./src/app/componenti/homepagestudente/functions/gestioneTipologiaChatSelezionata.ts","./src/app/componenti/homepagemoderatore/functions/gestioneModeratore.ts","./src/app/classi/inserzione.ts","./src/app/componenti/homepagemoderatore/functions/gestioneLogout.ts","./src/app/componenti/homepagestudente/functions/inizializzazione.ts","./src/app/componenti/registrazione/registrazione.component.ts","./src/app/componenti/registrazione/registrazione.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/componenti/homepagemoderatore/homepagemoderatore.component.ts","./src/app/componenti/homepagemoderatore/homepagemoderatore.component.html","./src/app/componenti/homepagestudente/functions/gestioneToken.ts","./src/app/componenti/homepagestudente/functions/gestioneLogout.ts","./src/app/componenti/homepagemoderatore/functions/gestioneInserzioni.ts","./src/app/classi/user.ts","./src/app/app.module.ts","./src/app/servizi/libro.service.ts","./src/app/classi/errore.ts","./src/app/classi/messaggio.ts","./src/app/servizi/messaggio.service.ts","./src/app/componenti/homepagestudente/functions/gestioneFiltro.ts","./src/app/componenti/homepagestudente/functions/gestioneSocket.ts","./src/app/componenti/homepagestudente/functions/gestioneSelezioneInserzioni.ts","./src/app/componenti/homepagemoderatore/functions/gestioneFiltro.ts","./src/app/componenti/homepagemoderatore/functions/gestioneToken.ts","./src/app/componenti/homepagenonloggato/functions/utility.ts","./src/app/componenti/homepagemoderatore/functions/gestioneStatistiche.ts","./src/app/componenti/homepagenonloggato/functions/gestioneLoginRegistrazione.ts","./src/app/componenti/homepagenonloggato/functions/gestioneFiltroInserzioni.ts","./src/app/componenti/homepagenonloggato/functions/gestioneInserzioni.ts","./src/app/componenti/homepagestudente/homepagestudente.component.ts","./src/app/componenti/homepagestudente/homepagestudente.component.html","./src/app/componenti/homepagestudente/functions/getInserzioniPerTipologia.ts","./src/app/componenti/passworddimenticata/passworddimenticata.component.ts","./src/app/componenti/passworddimenticata/passworddimenticata.component.html","./src/app/componenti/homepagestudente/functions/gestioneInvioMessaggio.ts","./src/app/componenti/homepagestudente/functions/gestioneLayoutChat.ts","./src/app/servizi/socketio.service.ts","./src/app/app-routing.module.ts","./src/app/componenti/homepagemoderatore/functions/gestioneStudenti.ts","./src/app/classi/Libro.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Messaggio } from \"src/app/classi/messaggio\";\r\nimport { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per verificare se un utente e gia dentro alla lista\r\nexport function isUtentePresente(idUtente: number, lista: number[]): boolean {\r\n    //per ciascun utente presente nella lista\r\n    for (let i = 0; i < lista.length; ++i) {\r\n        //confronto se e gia nella lista allora vero\r\n        if (lista[i] === idUtente) {\r\n            return true;\r\n        }\r\n    }\r\n    //se non presente falso\r\n    return false;\r\n}\r\n\r\n//funzione per la lista dei messaggi rispetto ad una certa persona\r\nexport function getListaMessaggiPersona(idUtente: number): void {\r\n    //memorizzo il riferimento alla persona che sto chattando insieme\r\n    this.idPersonaChatAttuale = idUtente;\r\n    //inizializzo la lista dei messaggi\r\n    this.listaMessaggi = [];\r\n    //inizializzo la lista delle persone dentro alla chat\r\n    this.listaPersoneMessaggi = [];\r\n    //creo una variabile temporanea di indici degli utenti dentro alla chat\r\n    var listaIdUtenti: number[] = [];\r\n    //estraggo i messaggi con mittente l utente passato come parametro e destinatario l utente loggato\r\n    this.ms.getListaMessaggi(idUtente, this.utenteLoggato.getIdUser(), null).subscribe((data) => {\r\n        //scorro tutti i messaggi\r\n        for (var i = 0; i < data.messaggi.length; ++i) {\r\n            //aggiungo ciascun messaggio nella lista dei messaggi\r\n            this.listaMessaggi.push(new Messaggio(data.messaggi[i]));\r\n        }\r\n        //estraggo i messaggi con destinatario l utente passato come parametro e mittente l utente loggato\r\n        this.ms.getListaMessaggi(this.utenteLoggato.getIdUser(), idUtente, null).subscribe((data) => {\r\n            //scorro tutti i messaggi\r\n            for (let i = 0; i < data.messaggi.length; ++i) {\r\n                //aggiungo ciascun messaggio nella lista dei messaggi\r\n                this.listaMessaggi.push(new Messaggio(data.messaggi[i]));\r\n            }\r\n            //ordino i messaggi in ordine di id dato che sono autoincrement\r\n            this.listaMessaggi = this.listaMessaggi.sort(\r\n                (m1: Messaggio, m2: Messaggio): number => {\r\n                    if (m1.getIdMessaggio() >= m2.getIdMessaggio()) {\r\n                        return 1;\r\n                    }\r\n                    return -1;\r\n                }\r\n            );\r\n            //scorro tutti i messaggi inerenti alla chat\r\n            for (let i = 0; i < this.listaMessaggi.length; ++i) {\r\n                //controllo se l id del mittente non lo ho gia trovato allora lo inserisco\r\n                if (!this.isUtentePresente(this.listaMessaggi[i].getMittente(), listaIdUtenti)) {\r\n                    listaIdUtenti.push(this.listaMessaggi[i].getMittente());\r\n                }\r\n                //controllo se l id del destinatario non lo ho gia trovato allora lo inserisco\r\n                if (!this.isUtentePresente(this.listaMessaggi[i].getDestinatario(), listaIdUtenti)) {\r\n                    listaIdUtenti.push(this.listaMessaggi[i].getDestinatario());\r\n                }\r\n            }\r\n            //scorro tutti gli id delle persone dentro alla chat\r\n            for (let i = 0; i < listaIdUtenti.length; ++i) {\r\n                //estraggo ciascun utente dall id\r\n                this.us.getUtenteById(listaIdUtenti[i]).subscribe((data) => {\r\n                    //verifico che abbia trovato esattamente un utente con quell id\r\n                    if (data.utenti.length === 1) {\r\n                        //aggiungo l utente nella lista delle persone dentro a quella chat\r\n                        this.listaPersoneMessaggi.push(new Utente(data.utenti[0]));\r\n                    }\r\n                    //se gli utenti trovati non sono pari ad 1\r\n                    else {\r\n                        this.dettagliErrore.setMessage(\"Errore piu utenti con lo stesso id line 1030\");\r\n                        this.dettagliErrore.setReason(\"\");\r\n                        console.log(\"Errore piu utenti con lo stesso id \")\r\n                    }\r\n                }, (err) => {\r\n                    //errore estrazione utente dall id\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione destinatario dall id\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione destinatario dall id \" + err)\r\n                });\r\n            }\r\n            //estraggo il nome e il cognome della persona con cui l utente loggato sta chattando\r\n            this.us.getUtenteById(idUtente).subscribe((data) => {\r\n                //verifico che abbia trovato esattamente un utente\r\n                if (data.utenti.length === 1) {\r\n                    //imposto id utente\r\n                    this.idUtenteDestinazione = new Utente(data.utenti[0]).getIdUser();\r\n                    //imposto il nome e cognome\r\n                    this.destinatarioMessaggiChatSelezionata = new Utente(data.utenti[0]).getNome() + \" \" + new Utente(data.utenti[0]).getCognome();\r\n                }\r\n                //se gli utenti trovati non sono pari ad 1\r\n                else {\r\n                    this.dettagliErrore.setMessage(\"Errore piu utenti con lo stesso id line 1052\");\r\n                    this.dettagliErrore.setReason(\"\");\r\n                    console.log(\"Errore piu utenti con lo stesso id \")\r\n                }\r\n            }, (err) => {\r\n                //errore estrazione utente dall id\r\n                this.dettagliErrore.setMessage(\"Errore estrazione destinatario dall id\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore estrazione destinatario dall id \" + err)\r\n            });\r\n        }, (err) => {\r\n            //errore estrazione prima parte messaggi\r\n            this.dettagliErrore.setMessage(\"Errore prima parte messaggi\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore prima parte messaggi\" + JSON.stringify(err));\r\n        });\r\n    }, (err) => {\r\n        //errore estrazione seconda parte messaggi\r\n        this.dettagliErrore.setMessage(\"Errore seconda parte messaggi\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore seconda parte messaggi\" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per la lista dei messaggi sulla chat privata presente nell popup dell inserzione\r\nexport function getListaMessaggiInserzioneChatPrivata(): void {\r\n    //controllo che l'inserzione sia selezionata per poter accedere ai campi\r\n    if (this.inserzione) {\r\n        //inizializzo la lista dei messaggi\r\n        this.listaMessaggi = [];\r\n        //inizializzo la lista delle persone dentro alla chat\r\n        this.listaPersoneMessaggi = [];\r\n        //creo una variabile temporanea di indici degli utenti dentro alla chat\r\n        var listaIdUtenti: number[] = [];\r\n        //estraggo i messaggi con mittente l utente loggato, destinatario il creatore dell inserzione ed infine l inserzione\r\n        this.ms.getListaMessaggi(this.utenteLoggato.getIdUser(), this.inserzione.getUtente(), this.inserzione.getIdInserzione()).subscribe((data) => {\r\n            //scorro tutti i messaggi\r\n            for (var i = 0; i < data.messaggi.length; ++i) {\r\n                //aggiungo ciascun messaggio nella lista dei messaggi\r\n                this.listaMessaggi.push(new Messaggio(data.messaggi[i]));\r\n            }\r\n            //estraggo i messaggi con mittente il creatore dell inserzione, destinatario l utente loggato ed infine l inserzione\r\n            this.ms.getListaMessaggi(this.inserzione.getUtente(), this.utenteLoggato.getIdUser(), this.inserzione.getIdInserzione()).subscribe((data) => {\r\n                //scorro tutti i messaggi\r\n                for (let i = 0; i < data.messaggi.length; ++i) {\r\n                    //aggiungo ciascun messaggio nella lista dei messaggi\r\n                    this.listaMessaggi.push(new Messaggio(data.messaggi[i]));\r\n                }\r\n                //ordino i messaggi in ordine di id dato che sono autoincrement\r\n                this.listaMessaggi = this.listaMessaggi.sort(\r\n                    (m1: Messaggio, m2: Messaggio): number => {\r\n                        if (m1.getIdMessaggio() >= m2.getIdMessaggio()) {\r\n                            return 1;\r\n                        }\r\n                        return -1;\r\n                    }\r\n                );\r\n                //scorro tutti i messaggi inerenti alla chat\r\n                for (let i = 0; i < this.listaMessaggi.length; ++i) {\r\n                    //controllo se l id del mittente non lo ho gia trovato allora lo inserisco\r\n                    if (!this.isUtentePresente(this.listaMessaggi[i].getMittente(), listaIdUtenti)) {\r\n                        listaIdUtenti.push(this.listaMessaggi[i].getMittente());\r\n                    }\r\n                    //controllo se l id del destinatario non lo ho gia trovato allora lo inserisco\r\n                    if (!this.isUtentePresente(this.listaMessaggi[i].getDestinatario(), listaIdUtenti)) {\r\n                        listaIdUtenti.push(this.listaMessaggi[i].getDestinatario());\r\n                    }\r\n                }\r\n                //scorro tutti gli id delle persone dentro alla chat\r\n                for (let i = 0; i < listaIdUtenti.length; ++i) {\r\n                    //estraggo ciascun utente dall id\r\n                    this.us.getUtenteById(listaIdUtenti[i]).subscribe((data) => {\r\n                        //verifico che abbia trovato esattamente un utente con quell id\r\n                        if (data.utenti.length === 1) {\r\n                            //aggiungo l utente nella lista delle persone dentro a quella chat\r\n                            this.listaPersoneMessaggi.push(new Utente(data.utenti[0]));\r\n                        }\r\n                        //se gli utenti trovati non sono pari ad 1\r\n                        else {\r\n                            this.dettagliErrore.setMessage(\"Errore piu utenti con lo stesso id\");\r\n                            this.dettagliErrore.setReason(\"\");\r\n                            console.log(\"Errore piu utenti con lo stesso id \")\r\n                        }\r\n                    }, (err) => {\r\n                        //errore estrazione utente dall id\r\n                        this.dettagliErrore.setMessage(\"Errore estrazione destinatario dall id\");\r\n                        this.dettagliErrore.setReason(JSON.stringify(err));\r\n                        console.log(\"Errore estrazione destinatario dall id \" + err)\r\n                    });\r\n                }\r\n                //estraggo il nome e il cognome della persona con cui l utente loggato sta chattando\r\n                this.us.getUtenteById(this.inserzione.getUtente()).subscribe((data) => {\r\n                    //verifico che abbia trovato esattamente un utente\r\n                    if (data.utenti.length === 1) {\r\n                        //imposto id utente\r\n                        this.idUtenteDestinazione = new Utente(data.utenti[0]).getIdUser();\r\n                        //imposto il nome e cognome\r\n                        this.destinatarioMessaggiChatSelezionata = new Utente(data.utenti[0]).getNome() + \" \" + new Utente(data.utenti[0]).getCognome();\r\n                    }\r\n                    //se gli utenti trovati non sono pari ad 1\r\n                    else {\r\n                        this.dettagliErrore.setMessage(\"Errore piu utenti con lo stesso id line 1153\");\r\n                        this.dettagliErrore.setReason(\"\");\r\n                        console.log(\"Errore piu utenti con lo stesso id \")\r\n                    }\r\n                }, (err) => {\r\n                    //errore estrazione utente dall id\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione destinatario dall id\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione destinatario dall id \" + err)\r\n                });\r\n            }, (err) => {\r\n                //errore estrazione prima parte messaggi\r\n                this.dettagliErrore.setMessage(\"Errore prima parte messaggi\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore prima parte messaggi\" + JSON.stringify(err));\r\n            });\r\n        }, (err) => {\r\n            //errore estrazione seconda parte messaggi\r\n            this.dettagliErrore.setMessage(\"Errore seconda parte messaggi\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore seconda parte messaggi\" + JSON.stringify(err));\r\n        });\r\n    }\r\n}\r\n\r\n//funzione per la lista dei messaggi sulla chat pubblica presente nell popup dell inserzione\r\nexport function getListaMessaggiInserzioneChatPubblica(): void {\r\n    //inizializzo la lista dei messaggi\r\n    this.listaMessaggi = [];\r\n    //inizializzo la lista delle persone dentro alla chat\r\n    this.listaPersoneMessaggi = [];\r\n    //creo una variabile temporanea di indici degli utenti dentro alla chat\r\n    var listaIdUtenti: number[] = [];\r\n    //controllo che l'inserzione sia selezionata per poter accedere ai campi\r\n    if (this.inserzione) {\r\n        //estraggo i messaggi riferiti solo all inserzione e allo 0 come utente perche pubblico\r\n        this.ms.getListaMessaggi(null, 0, this.inserzione.getIdInserzione()).subscribe((data) => {\r\n            //scorro tutti i messaggi\r\n            for (var i = 0; i < data.messaggi.length; ++i) {\r\n                //aggiungo ciascun messaggio nella lista dei messaggi\r\n                this.listaMessaggi.push(new Messaggio(data.messaggi[i]));\r\n            }\r\n            //ordino i messaggi in ordine di id dato che sono autoincrement\r\n            this.listaMessaggi = this.listaMessaggi.sort(\r\n                (m1: Messaggio, m2: Messaggio): number => {\r\n                    if (m1.getIdMessaggio() >= m2.getIdMessaggio()) {\r\n                        return 1;\r\n                    }\r\n                    return -1;\r\n                }\r\n            );\r\n            //scorro tutti i messaggi inerenti alla chat\r\n            for (let i = 0; i < this.listaMessaggi.length; ++i) {\r\n                //controllo se l id del mittente non lo ho gia trovato allora lo inserisco\r\n                if (!this.isUtentePresente(this.listaMessaggi[i].getMittente(), listaIdUtenti)) {\r\n                    listaIdUtenti.push(this.listaMessaggi[i].getMittente());\r\n                }\r\n            }\r\n            //scorro tutti gli id delle persone dentro alla chat\r\n            for (let i = 0; i < listaIdUtenti.length; ++i) {\r\n                //estraggo ciascun utente dall id\r\n                this.us.getUtenteById(listaIdUtenti[i]).subscribe((data) => {\r\n                    //verifico che abbia trovato esattamente un utente con quell id\r\n                    if (data.utenti.length === 1) {\r\n                        //aggiungo l utente nella lista delle persone dentro a quella chat\r\n                        this.listaPersoneMessaggi.push(new Utente(data.utenti[0]));\r\n                    }\r\n                    //se gli utenti trovati non sono pari ad 1\r\n                    else {\r\n                        this.dettagliErrore.setMessage(\"Errore piu utenti con lo stesso id line 1222\");\r\n                        this.dettagliErrore.setReason(\"\");\r\n                        console.log(\"Errore piu utenti con lo stesso id \")\r\n                    }\r\n                }, (err) => {\r\n                    //errore estrazione utente dall id\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione destinatario dall id\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione destinatario dall id \" + err)\r\n                });\r\n            }\r\n            //imposto id utente pubblico\r\n            this.idUtenteDestinazione = 0;\r\n            this.destinatarioMessaggiChatSelezionata = \"pubblico\";\r\n        }, (err) => {\r\n            //errore estrazione seconda parte messaggi\r\n            this.dettagliErrore.setMessage(\"Errore seconda parte messaggi\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore seconda parte messaggi\" + JSON.stringify(err));\r\n        });\r\n    }\r\n    //se non e valida errore\r\n    else {\r\n        //errore inserzione selezionata non valida\r\n        this.dettagliErrore.setMessage(\"Errore estrazione messaggi da inserzione non selezionata\");\r\n        this.dettagliErrore.setReason(\"\");\r\n        console.log(\"Errore estrazione messaggi da inserzione non selezionata\");\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Errore } from 'src/app/classi/errore';\nimport { Inserzione } from 'src/app/classi/inserzione';\nimport { Libro } from 'src/app/classi/Libro';\nimport { Messaggio } from 'src/app/classi/messaggio';\nimport { Utente } from 'src/app/classi/user';\n\nimport { InserzioneService } from 'src/app/servizi/inserzione.service';\nimport { LibroService } from 'src/app/servizi/libro.service';\nimport { MessaggioService } from 'src/app/servizi/messaggio.service';\nimport { PersonaService } from 'src/app/servizi/persona.service';\n\nimport * as gestioneFiltroInserzioni from \"./functions/gestioneFiltroInserzioni\";\nimport * as gestioneInserzioni from \"./functions/gestioneInserzioni\";\nimport * as gestioneChat from \"./functions/gestioneChat\";\nimport * as gestioneLoginRegistrazione from \"./functions/gestioneLoginRegistrazione\";\nimport * as utility from \"./functions/utility\";\n\n@Component({\n  selector: 'app-homepagenonloggato',\n  templateUrl: './homepagenonloggato.component.html',\n  styleUrls: ['./homepagenonloggato.component.css']\n})\nexport class HomepagenonloggatoComponent implements OnInit {\n\n  //variabile per filtrare i dati delle inserzioni\n  filtraggioInserzioni = { \"nomeLibro\": \"\", \"corsoDiStudi\": \"\", \"universita\": \"\", \"areaGeografica\": \"\", \"venditore\": \"\", \"prezzoAttualeMinimo\": \"\", \"prezzoAttualeMassimo\": \"\" };\n\n  //variabile per accedere allo schema inserzione \n  inserzione: Inserzione = new Inserzione();\n\n  //variabile per accedere allo schema del libro\n  libro: Libro = new Libro();\n\n  //variabile per accedere allo schema dell utente\n  utente: Utente = new Utente();\n\n  //variabile per accedere alla lista di inserzioni in vendita\n  inserzioniInVendita: Inserzione[] = new Array();\n\n  //variabile per accedere alla lista di libri in vendita\n  libriInVendita: Libro[] = new Array();\n\n  //variabile per memorizzare id persona che l utente sta chattando insieme\n  idPersonaChatAttuale: number;\n\n  //variabile per memorizzare il messaggio appena arrivato tramite il socket\n  messaggioAppenaArrivato: string = \"\";\n\n  //variabile per memorizzare l utente del nuovo messaggio\n  utenteMessaggioAppenaArrvato: string = \"\";\n\n  //variabile per memorizzare la lista di studenti che l utente loggato ha chattato insieme\n  studentiConChat: Utente[] = new Array();\n\n  //variabile per memorizzare i messaggi\n  listaMessaggi: Messaggio[] = new Array();\n\n  //variabile per memorizzare il nome e cognome del destinatario della chat selezionata\n  destinatarioMessaggiChatSelezionata: string = \"\";\n\n  //varibaile per accedere all id del destinatario del messaggio\n  idUtenteDestinazione: number = 0;\n\n  //variabile per memorizzare la lista di persone quando estraggo tutti i messaggi rispetto ad una certa categoria privata pubblica persona ecc\n  listaPersoneMessaggi: Utente[] = new Array();\n\n  //variabile per memorizzare il messaggio d riferimento prima di inviarlo\n  messaggioRiferimento: Messaggio = new Messaggio();\n\n  //variabile per memorizzare il messaggio da inviare\n  messaggioDaInviare: Messaggio = new Messaggio();\n\n  //variabile per la gestione degli errori\n  dettagliErrore: Errore = new Errore();\n\n  constructor(private ms: MessaggioService, private us: PersonaService, private is: InserzioneService, private ls: LibroService, private router: Router) { }\n\n  //----------------------------------------------GESTIONE INIZIALIZZAZIONE----------------------------------------\n\n  ngOnInit(): void {\n    //azzero le variabili\n    this.dettagliErrore.setMessage(\"\");\n    this.dettagliErrore.setReason(\"\");\n    //recupero le inserzioni in vendita\n    this.recuperaDatiAggiornati();\n  }\n\n  //----------------------------------------------GESTIONE FILTRO----------------------------------------\n\n  //funzione per vedere se il filtro e attivato o disattivato\n  public verificaFiltro = gestioneFiltroInserzioni.verificaFiltro;\n\n  //funzione per annullare il filtro\n  public annullaFiltro = gestioneFiltroInserzioni.annullaFiltro;\n\n  //funzione per aggiornare i dati\n  public recuperaDatiAggiornati = gestioneFiltroInserzioni.recuperaDatiAggiornati;\n\n  //funzione per filtrare le inserzioni in vendita\n  public filtraInserzioni = gestioneFiltroInserzioni.filtraInserzioni;\n\n  //----------------------------------------------GESTIONE LISTA INSERZIONI----------------------------------------\n\n  //funzione per ottenere tutte le inserzioni in vendita e quindi non scadute\n  public getListaInserzioniInVendita = gestioneInserzioni.getListaInserzioniInVendita;\n\n  //----------------------------------------------GESTIONE SELEZIONARE INSERZIONE----------------------------------------\n\n  //funzione per settare l inserzione in vendita che l utente loggato ha premuto per visualizzare i dettagli\n  public setInserzioneInVenditaSelezionata = gestioneInserzioni.setInserzioneInVenditaSelezionata;\n\n  //------------------------------------------------GESTIONE CHAT----------------------------------------------\n\n  //funzione per ottenere il messaggio di riferimento rispetto ad un messaggio dato in input\n  public getContenutoMessaggioRiferimento = gestioneChat.getContenutoMessaggioRiferimento;\n\n  //funzione per ottenere l utente appartenente alla lista di quelli appartenenti alla chat tramite id\n  public getPersonaNellaChat = gestioneChat.getPersonaNellaChat;\n\n  //funzione per la lista dei messaggi sulla chat pubblica presente nell popup dell inserzione\n  public getListaMessaggiInserzioneChatPubblica = gestioneChat.getListaMessaggiInserzioneChatPubblica;\n\n  //------------------------------------------------GESTIONE UTILITY----------------------------------------------\n\n  //funzione per verificare se un utente e gia dentro alla lista\n  public isUtentePresente = utility.isUtentePresente;\n\n  //--------------------------------------------GESTIONE LOGINE REGISTRAZIONE-------------------------------------\n\n  //funzione per il reindirizzamento nella pagina del login\n  public effettuaLogin = gestioneLoginRegistrazione.effettuaLogin;\n\n  //funzione per il reindirizzamento nella pagina della registrazione\n  public effettuaRegistrazione = gestioneLoginRegistrazione.effettuaRegistrazione;\n\n}\n","<div class=\"container\">\n    <div class=\"row row-cols-1 row-cols-md-3\">\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Lista inserzioni in vendita\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\" *ngFor=\"let l of libriInVendita\">\n                        <span *ngFor=\"let i of inserzioniInVendita\">\n                            <span *ngIf=\"i.libro==l.idLibro\">\n                                <span class=\"align-middle text-secondary\">Libro: {{l.nome}}</span><button type=\"button\" class=\"btn btn-secondary btn-sm float-right\" (click)=\"setInserzioneInVenditaSelezionata(i.getIdInserzione())\"\n                            data-dismiss=\"modal\" aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#visualizzazioneinserzioneinvendita\">Dettagli</button>\n                        </span>\n                        </span>\n\n                    </li>\n                    <li class=\"list-group-item\">\n                        <button *ngIf=\"verificaFiltro()\" type=\"button\" class=\"btn btn-block btn-secondary btn-sm float-right\" (click)=\"filtraInserzioni()\" data-toggle=\"modal\" data-target=\"#filtrareinserzioni\">Filtra</button>\n                        <button *ngIf=\"!verificaFiltro()\" type=\"button\" class=\"btn btn-block btn-danger btn-sm float-right\" (click)=\"annullaFiltro()\">Annulla\n                            filtro</button>\n                    </li>\n                </ul>\n\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Aggiornamento dati\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Vuoi aggiornare i dati?\n                    <br><br><button type=\"button\" (click)=\"recuperaDatiAggiornati()\" class=\"btn btn-block btn-secondary btn-sm\">Aggiorna dati</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Login\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Vuoi effettuare il login?\n                    <br><br><button type=\"button\" (click)=\"effettuaLogin()\" class=\"btn btn-block btn-secondary btn-sm\">Loggati</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Registrazione\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Vuoi creare un nuovo account?\n                    <br><br><button type=\"button\" (click)=\"effettuaRegistrazione()\" class=\"btn btn-block btn-secondary btn-sm\">Registrati</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Gestione errori\n                </div>\n                <div class=\"card-body\">\n                    <div *ngIf=\"dettagliErrore.getMessage()\" id=\"alertnuovoerrore\" class=\"alert alert-secondary alert-dismissible fade show mt-3 ml-3 mr-3\" role=\"alert\">\n                        <strong>Messaggio: </strong>{{dettagliErrore.getMessage()}}<br>\n                        <strong>Reason: </strong>{{dettagliErrore.getReason()}}\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dettagliErrore.setMessage('');dettagliErrore.setReason('')\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Implementazione futura\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Funzionalita extra\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br>\n\n<!--modal per filtrare le inserzioni-->\n<div class=\"modal fade\" id=\"filtrareinserzioni\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Filtraggio inserzione</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <form action=\"#\" method=\"GET\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Nome libro\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"libro\" type=\"text\" #inputNomeLibro=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.nomeLibro\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"corsodistudi\" type=\"text\" #inputCorsoDiStudi=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.corsoDiStudi\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"universita\" type=\"text\" #inputUniversita=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.universita\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Area gerografica\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"areaGeografica\" type=\"text\" #inputAreaGeografica=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.areaGeografica\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Venditore\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"venditore\" type=\"text\" #inputVenditore=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.venditore\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale minimo\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"prezzoMinimo\" type=\"number\" #inputPrezzoMinimo=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.prezzoAttualeMinimo\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale massimo\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"prezzoMassimo\" type=\"number\" #inputPrezzoMassimo=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.prezzoAttualeMassimo\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Annulla</button>\n                    <button type=\"submit\" class=\"btn btn-success\" (click)=\"filtraInserzioni();\" (submit)=\"filtraInserzioni();\" data-dismiss=\"modal\" aria-label=\"Close\">Filtra</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n\n<!--modal per la visualizzazione di una singola inserzione in vendita e quindi non visibili tutti i parametri al cliente-->\n<div class=\"modal fade\" id=\"visualizzazioneinserzioneinvendita\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Visualizzazione inserzione in vendita</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div *ngIf=\"inserzione\" class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Utente\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"utente\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{utente.getUsername()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Libro\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"libro\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getNome()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"corsodistudi\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getCorsoDiStudi()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"universita\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getUniversita()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Autore\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"autore\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAutore()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Anno di pubblicazione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"annodipubblicazione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAnnoPubblicazione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Edizione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"edizione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getEdizione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Isbn\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"isbn\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getIsbn()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data inizio\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input *ngIf=\"inserzione.dataInizio!=undefined\" name=\"datainizio\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataInizio}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data fine\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input *ngIf=\"inserzione.dataFine!=undefined\" name=\"datafine\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataFine}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoattuale\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.getPrezzoAttuale()}}\" disabled>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Esci</button>\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#vistachat\" (click)=\"getListaMessaggiInserzioneChatPubblica()\">Chat\n                    pubblica</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--modal per la vista delle chat-->\n<div class=\"modal fade\" id=\"vistachat\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Chat con {{destinatarioMessaggiChatSelezionata}}</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\" *ngFor=\"let lm of listaMessaggi\">\n                    <div class=\"col-1\"></div>\n                    <div class=\"col-7 mt-3 alert float-left alert-secondary rounded-lg border border-secondary\" role=\"alert\">\n                        <div *ngIf=\"getContenutoMessaggioRiferimento(lm)\" style=\"width: 100%;\" class=\"mt-3 alert float-left alert-light rounded-lg border border-secondary\" role=\"alert\">\n                            {{getContenutoMessaggioRiferimento(lm).getContenuto()}}\n                        </div>\n                        <br *ngIf=\"getContenutoMessaggioRiferimento(lm)\">\n                        <div *ngIf=\"getPersonaNellaChat(lm.getMittente())\">\n                            [{{lm.getDataFormatoStringa()}} {{lm.getOraFormatoStringa()}} {{getPersonaNellaChat(lm.getMittente()).getNome()}}]: {{lm.getContenuto()}}\n                        </div>\n                    </div>\n                    <div class=\"col-4 mt-3 alert float-left rounded-lg\" role=\"alert\">\n                        <div>\n                            <img style=\"vertical-align: middle;\" src=\"https://icons555.com/images/icons-black/image_icon_arrow_79_pic_512x512.png\" width=\"30\" height=\"40\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","//funzione per fare una nuova offerta all inserzione selezionata\r\nexport function nuovaOffertaSelezionata(): void {\r\n    //aggiungo anche l id dell utente loggato alla nuova offerta\r\n    this.nuovaOfferta.setIdUtente(this.utenteLoggato.getIdUser());\r\n    //aggiungo anche l id dell inserzione selezionata\r\n    this.nuovaOfferta.setIdInserzione(this.inserzione.getIdInserzione());\r\n    //faccio la nuova offerta\r\n    this.is.nuovaOfferta(this.nuovaOfferta).subscribe((data) => {\r\n        //recupero tutti i dati\r\n        this.recuperaDatiAggiornati();\r\n    }, (err) => {\r\n        //errore fare offerta nuova\r\n        this.dettagliErrore.setMessage(\"Errore fare offerta nuova\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore fare offerta nuova \" + JSON.stringify(err));\r\n    });\r\n}","/* (ignored) */","import { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per aggiornare tutti i dati\r\nexport function aggiornaDati(): void {\r\n    //azzero i dati gia esistenti\r\n    this.statistiche = [];\r\n    this.libri = [];\r\n    this.inserzioni = [];\r\n    this.utenti = [];\r\n    this.moderatore = new Utente();\r\n    this.dettagliErrore.setMessage(\"\");\r\n    this.dettagliErrore.setReason(\"\");\r\n    //annullo il filtro per le inserzioni\r\n    this.annullaFiltro();\r\n    //ottengo la lista di tutte le inserzioni\r\n    this.getListaInserzioni();\r\n    //ottengo la lista di studenti\r\n    this.getListaStudenti();\r\n    //ottengo le statistiche\r\n    this.getStatistiche();\r\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\n//classi\nimport { PersonaService } from './persona.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatisticheService {\n\n  //variabile per memorizzare l url del server\n  private url: string = \"http://localhost:8080\";\n\n  constructor(private http: HttpClient, private us: PersonaService) { }\n\n  //funzione per estrarre le statistiche\n  public getStatistiche(): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    console.log(this.us.getToken());\n    return this.http.get(this.url + \"/statistiche\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\n//classi\nimport { Utente } from \"../classi/user\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PersonaService {\n\n  //variabile per memorizzare l id dell utente loggato\n  private idUtente: number = 0;\n\n  //variabile per memorizzare lo username dell utente loggato\n  private username: string = \"\";\n\n  //variabile per memorizzare il token di accesso dell utente\n  private token: string = \"\";\n\n  //variabile per memorizzare l url del server\n  private url: string = \"http://localhost:8080\";\n\n  constructor(private http: HttpClient) { }\n\n  //metodo per sistemare tutti i parametri dal token\n  setPrametriToken(token: string): void {\n    var dati = JSON.parse(token);\n    this.idUtente = dati.idUser;\n    this.username = dati.username;\n  }\n\n  //metodo getter per estrarre il token di accesso\n  getToken(): string {\n    return this.token;\n  }\n\n  //metodo getter per estrarre lo username dell utente loggato\n  getUsername(): string {\n    return this.username;\n  }\n\n  //metodo getter per estrarre l url di connessione\n  getUrl(): string {\n    return this.url;\n  }\n\n  //meetodo getter per avere l id dell utente loggato\n  getIdUtente(): number {\n    return this.idUtente;\n  }\n\n  //funzione per eliminare gli studenti\n  public eliminaStudente(idStudente: number): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams().append(\"idUtente\", idStudente.toString())\n    };\n    return this.http.delete(this.url + \"/studenti\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per estrarre la lista di studenti\n  public getListaStudenti(): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.get(this.url + \"/studenti\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per inserire un nuovo moderatore\n  public inserisciModeratore(moderatore: Utente): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.put(this.url + \"/moderatori\", moderatore, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per ottenere l utente dall id per vedere i dettagli nel popup dell inserzione\n  public getUtenteByUsername(username: string): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams().append(\"username\", username)\n    };\n    return this.http.get(this.url + \"/studenti\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per ottenere l utente dallo username\n  public getUtenteById(idUtente: number): Observable<any> {\n    console.log(\"id utente: \" + JSON.stringify(idUtente));\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams().append(\"idUser\", idUtente.toString())\n    };\n    return this.http.get(this.url + \"/studenti\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione che fa la richiesta http per effettuare il login\n  public login(u: Utente): Observable<any> {\n    //creo header per chiamata http\n    const options = {\n      headers: new HttpHeaders({\n        authorization: \"Basic \" + btoa(u.username + \":\" + u.password),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    //faccio richiesta http metodo get per effettuare il login\n    return this.http.get(this.url + \"/login\", options).pipe(\n      tap((data) => {\n        //quando ricevo la risposta salvo il token di accesso\n        this.token = data.token;\n        //mi salvo l id dell utente loggato\n        this.idUtente = data.utente.idUser;\n        //mi salvo lo username dell utente loggato\n        this.username = data.utente.username;\n        //se voglio ricordare l accesso mi salvo il token pero lo lascio sempre cosi anche quando refresho la pagina\n        //if (u.remember) {\n        localStorage.setItem(\"progetto_token\", this.token);\n        //}\n      }));\n  }\n\n  //funzione che resetta la password dell utente cercato via mail\n  public resettaPassword(persona: Utente): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.post(this.url + \"/studenti\", persona, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione che cambia la password\n  public cambiaPasswordStudente(persona: Utente): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.token,\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.patch(this.url + \"/studenti\", persona, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione che cambia la password\n  public cambiaPasswordModeratore(persona: Utente): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.token,\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.patch(this.url + \"/moderatori\", persona, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione che fa la richiesta http per effettuare la registrazione\n  public registrazione(persona: Utente): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.put(this.url + \"/studenti\", persona, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione che fa la richiesta http per effettuare il rinnovo del token però non implementata ma solo impostata\n  public rinnovoToken(): Observable<any> {\n    const tk = localStorage.getItem(\"progetto_token\");\n    if (!tk || tk.length < 1) {\n      return throwError({ error: { errormessage: \"Errore trovare token nel localStorage\" } });\n    }\n    const options = {\n      headers: new HttpHeaders({\n        Authorization: \"Bearer \" + tk,\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\",\n      })\n    };\n    return this.http.get(this.url + \"/renew\", options).pipe(\n      tap((data) => {\n        this.token = data.token;\n        localStorage.setItem(\"progetto_token\", this.token);\n      }));\n  }\n\n  //funzione per ottenere il token\n  public setToken(): void {\n    this.token = localStorage.getItem(\"progetto_token\");\n  }\n\n  //funzione per effettuare il logout\n  public logout(): void {\n    this.token = \"\";\n    localStorage.setItem(\"progetto_token\", this.token);\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { PersonaService } from \"../../servizi/persona.service\";\n\nimport { Utente } from \"../../classi/user\";\n\n@Component({\n  selector: 'app-modificapassword',\n  templateUrl: './modificapassword.component.html',\n  styleUrls: ['./modificapassword.component.css']\n})\nexport class ModificapasswordComponent implements OnInit {\n\n  //variabile per accedere allo schema utente per estrarre i dati dal login\n  u: Utente = new Utente();\n\n  //messaggi che possono comparire durante l uso del form di login\n  messaggioErrore = undefined;\n  messaggioConferma = undefined;\n  messaggio = undefined;\n\n  constructor(private us: PersonaService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  //funzione per cambiare la password temporanea\n  public cambiaPassword(): void {\n    //creo un utente temporaneo tramite la decodifica del token\n    var uTemp: Utente = new Utente(JSON.parse(atob(this.us.getToken().split('.')[1])));\n    //controllo se l utente e uno studente\n    if (uTemp.isStudente()) {\n      this.us.cambiaPasswordStudente(this.u).subscribe((d) => {\n        this.router.navigate([\"/login\"]);\n      }, (err) => {\n        //errore cambiamento password studente\n        this.messaggioErrore = JSON.stringify(err.error.message);\n        console.log(\"Errore cambiamento password studente \" + JSON.stringify(err));\n      });\n    }\n    //controllo se l utente e un moderatore\n    else if (uTemp.isModeratore()) {\n      this.us.cambiaPasswordModeratore(this.u).subscribe((d) => {\n        this.router.navigate([\"/login\"]);\n      }, (err) => {\n        //errore cambiamento password moderatore\n        this.messaggioErrore = JSON.stringify(err.error.message);\n        console.log(\"Errore cambiamento password moderatore \" + JSON.stringify(err));\n      });\n    }\n    else {\n      //errore nessuna tipologia di utenti corrispondente\n      this.messaggioErrore = \"errore nessuna tipologia di utenti corrispondente\";\n      console.log(\"errore nessuna tipologia di utenti corrispondente\");\n    }\n  }\n\n}\n","<div class=\"container mt-3\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h2>\n                <p class=\"card-title paragrafo-centrato text-secondary\">Modifica password</p>\n            </h2>\n            <br>\n            <form>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"password\" name=\"password\" #inputPassword=\"ngModel\" [(ngModel)]=\"u.password\" class=\"form-control sfondo-grigio\" placeholder=\"Password\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputPassword.valid||inputPassword.pristine\" class=\"alert alert-danger\">\n                    Password non valida\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"confermaPassword\" name=\"confermaPassword\" #inputConfermaPassword=\"ngModel\" [(ngModel)]=\"u.confermaPassword\" class=\"form-control sfondo-grigio\" placeholder=\"Conferma password\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputConfermaPassword.valid||inputConfermaPassword.pristine\" class=\"alert alert-danger\">\n                    Conferma password non valida\n                </div>\n                <div *ngIf=\"messaggioErrore\" class=\"alert alert-danger\" role=\"alert\">\n                    {{messaggioErrore}}\n                </div>\n                <div *ngIf=\"messaggioConferma\" class=\"alert alert-success\" role=\"alert\">\n                    {{messaggioConferma}}\n                </div>\n                <div *ngIf=\"messaggio\" class=\"alert alert-primary\" role=\"alert\">\n                    {{messaggio}}\n                </div>\n                <button type=\"submit\" class=\"btn btn-lg btn-block sfondo-grigio-chiaro\" [disabled]=\"!inputPassword.valid||!inputConfermaPassword.valid\" (click)=\"cambiaPassword();\" (submit)=\"cambiaPassword();\">Cambia password</button>\n            </form><br>\n            <div class=\"paragrafo-centrato testo-grigio\">\n                Hai gia un account? <a routerLink=\"/login\">Accedi</a><br> Non hai ancora un account? <a routerLink=\"/registrazione\">Registrati</a><br>\n            </div>\n        </div>\n    </div>\n</div>","import { Inserzione } from \"src/app/classi/inserzione\";\r\nimport { Libro } from \"src/app/classi/Libro\";\r\n\r\n//funzione per inizializzare inserzione e libro in quanto ne devo inserire una nuova e devo azzerare i campi\r\nexport function inizializzaNuovaInserzione(): void {\r\n    this.inserzione = new Inserzione();\r\n    this.libro = new Libro();\r\n}\r\n\r\n//funzione per inserire una nuova inserzione\r\nexport function inserisciInserzione(): void {\r\n    //inserisco il prezzo attuale\r\n    this.inserzione.setPrezzoAttuale(this.inserzione.getPrezzoIniziale());\r\n    //inserisco il libro\r\n    this.ls.inserisciLibro(this.libro).subscribe((data) => {\r\n        //estraggo tutti i libri per vedere  a che indice sono arrivato per poterlo assegnare all inserzione\r\n        this.ls.getUltimoLibroInserito().subscribe((data) => {\r\n            //mi converto la risposta in json in un array per sfruttare .length\r\n            let libro = data.libri[data.libri.length - 1].idLibro;\r\n            //inserisco l id dell utente loggato nell inserzione da inserire\r\n            this.inserzione.setUtente(this.utenteLoggato.getIdUser());\r\n            //imposto l id del libro sull inserzione\r\n            this.inserzione.setLibro(libro);\r\n            //imposto l id dell utente attuale che corrisponde all inizio all id dell utente loggato\r\n            this.inserzione.setUtentePrezzoAttuale(this.utenteLoggato.getIdUser());\r\n            //imposto l id del vincitore che corrisponde all inizio all id dell utente loggato\r\n            this.inserzione.setVincitore(this.utenteLoggato.getIdUser());\r\n            //inserisco l inserzione\r\n            this.is.inserisciInserzione(this.inserzione).subscribe((data) => {\r\n                //recupero tutti i dati\r\n                this.recuperaDatiAggiornati();\r\n                //torno nella home dello studente\r\n                this.router.navigate([\"/homepagestudente\"]);\r\n            }, (err) => {\r\n                //errore inserimento inserzione\r\n                this.dettagliErrore.setMessage(\"Errore inserimento inserzione\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore inserimento inserzione \" + JSON.stringify(err));\r\n            });\r\n        }, (err) => {\r\n            //errore estrazione ultimo libro inserito\r\n            this.dettagliErrore.setMessage(\"Errore estrazione ultimo libro inserito\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore estrazione ultimo libro inserito \" + JSON.stringify(err));\r\n        });\r\n    }, (err) => {\r\n        //errore inserimento libro\r\n        this.dettagliErrore.setMessage(\"Errore inserimento libro\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore inserimento libro \" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per eliminare un inserzione\r\nexport function eliminaInserzione(): void {\r\n    //elimino il libro collegato all'inserzione\r\n    this.ls.eliminaLibro([this.inserzione.getLibro()]).subscribe(() => {\r\n        //elimino l inserzione\r\n        this.is.eliminaInserzione([this.inserzione.getIdInserzione()]).subscribe((data) => {\r\n            //aggiorno i dati\r\n            this.recuperaDatiAggiornati();\r\n        }, (err) => {\r\n            //errore eliminazione inserzione\r\n            this.dettagliErrore.setMessage(\"Errore eliminazione inserzione\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore eliminazione inserzione \" + JSON.stringify(err));\r\n        });\r\n    }, (err) => {\r\n        //errore eliminazione libro\r\n        this.dettagliErrore.setMessage(\"Errore eliminazione libro\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore eliminazione libro \" + JSON.stringify(err));\r\n    });\r\n}","import { Messaggio } from \"src/app/classi/messaggio\";\r\nimport { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per selezionare gli utenti che l utente loggato ha chattato ordinato per date decrescenti\r\nexport function getListaUtentiChat(): void {\r\n    //inizializzo la lista\r\n    this.studentiConChat = [];\r\n    //variabile temporanea per indici degli studenti con chat\r\n    var indiciStudentiChat: number[] = [];\r\n    //variabile temporanea per la lista dei messaggi\r\n    var listaMessaggiTemp: Messaggio[] = new Array();\r\n    //estraggo i messaggi con mittente utente loggato senza differenziare per id inserzione\r\n    this.ms.getListaMessaggi(this.utenteLoggato.getIdUser(), null, null).subscribe((data) => {\r\n        //scorro tutti i messaggi\r\n        for (var i = 0; i < data.messaggi.length; ++i) {\r\n            //aggiungo ciascun messaggio nella lista dei messaggi temporanea\r\n            listaMessaggiTemp.push(new Messaggio(data.messaggi[i]));\r\n        }\r\n        //estraggo i messaggi con destinatario utente loggato senza differenziare per id inserzione\r\n        this.ms.getListaMessaggi(null, this.utenteLoggato.getIdUser(), null).subscribe((data) => {\r\n            //scorro tutti i messaggi\r\n            for (let i = 0; i < data.messaggi.length; ++i) {\r\n                //aggiungo ciascun messaggio nella lista dei messaggi temporanea\r\n                listaMessaggiTemp.push(new Messaggio(data.messaggi[i]));\r\n            }\r\n            //ordino i messaggi pero in ordine decrescente cosi inserisco gli utenti nell ordine degli ultimi messaggi\r\n            listaMessaggiTemp = listaMessaggiTemp.sort(\r\n                (m1: Messaggio, m2: Messaggio): number => {\r\n                    if (m1.data > m2.data) {\r\n                        return -1;\r\n                    }\r\n                    return 1;\r\n                }\r\n            );\r\n            //per tutti i messaggi trovati\r\n            for (let i = 0; i < listaMessaggiTemp.length; ++i) {\r\n                //se l utente loggato corrisponde al mittente\r\n                if (this.utenteLoggato.getIdUser() === listaMessaggiTemp[i].getMittente()) {\r\n                    //se l utente del messaggio attuale non è nella lista degli studenti con chat\r\n                    if (!this.isUtentePresente(listaMessaggiTemp[i].getDestinatario(), indiciStudentiChat)) {\r\n                        //inserisco il suo id nella lista\r\n                        indiciStudentiChat.push(listaMessaggiTemp[i].getDestinatario());\r\n                    }\r\n                }\r\n                //se invece l utente loggato corrisponde al destinatario\r\n                else if (this.utenteLoggato.getIdUser() === listaMessaggiTemp[i].getDestinatario()) {\r\n                    //se l utente del messaggio attuale non è nella lista degli studenti con chat\r\n                    if (!this.isUtentePresente(listaMessaggiTemp[i].getMittente(), indiciStudentiChat)) {\r\n                        //inserisco il suo id nella lista\r\n                        indiciStudentiChat.push(listaMessaggiTemp[i].getMittente());\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < indiciStudentiChat.length; ++i) {\r\n                //controllo che non sia l id pubblic\r\n                if (indiciStudentiChat[i] !== 0) {\r\n                    //trovo i dati dell utente dall id\r\n                    this.us.getUtenteById(indiciStudentiChat[i]).subscribe((data) => {\r\n                        //verifico che abbia trovato esattamente un utente\r\n                        if (data.utenti.length === 1) {\r\n                            //inserisco l utente nella lista degli utenti con cui l utnte loggato ha chattato\r\n                            this.studentiConChat.push(new Utente(data.utenti[0]))\r\n                        }\r\n                        //se gli utenti trovati non sono pari ad 1\r\n                        else {\r\n                            this.dettagliErrore.setMessage(\"Errore piu utenti con lo stesso id line 862\");\r\n                            this.dettagliErrore.setReason(\"\");\r\n                            console.log(\"Errore piu utenti con lo stesso id \")\r\n                        }\r\n                    }, (err) => {\r\n                        //errore estrazione utente dall id\r\n                        this.dettagliErrore.setMessage(\"Errore estrazione destinatario dall id\");\r\n                        this.dettagliErrore.setReason(JSON.stringify(err));\r\n                        console.log(\"Errore estrazione destinatario dall id \" + err)\r\n                    });\r\n                }\r\n            }\r\n        }, (err) => {\r\n            //errore estrazione prima parte messaggi\r\n            this.dettagliErrore.setMessage(\"Errore prima parte messaggi\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore prima parte messaggi\" + JSON.stringify(err));\r\n        });\r\n    }, (err) => {\r\n        //errore estrazione seconda parte messaggi\r\n        this.dettagliErrore.setMessage(\"Errore seconda parte messaggi\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore seconda parte messaggi\" + JSON.stringify(err));\r\n    });\r\n}","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { PersonaService } from \"../../servizi/persona.service\";\n\nimport { Utente } from \"../../classi/user\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\n\nexport class LoginComponent implements OnInit {\n\n  //variabile per accedere allo schema utente per estrarre i dati dal login\n  u: Utente = new Utente();\n\n  //messaggi che possono comparire durante l uso del form di login\n  messaggioErrore = undefined;\n  messaggioConferma = undefined;\n  messaggio = undefined;\n\n  constructor(private us: PersonaService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  //funzione per richiamare la funzione login del servizio\n  public login(): void {\n    this.us.login(this.u).subscribe((data) => {\n      this.messaggioErrore = undefined;\n      this.messaggioConferma = \"Login effettuato\";\n      this.messaggio = undefined;\n      //guardo il flag della password temporanea per vedere se devo prima modificarla \n      if (data.temp) {\n        //mi sposto nella pagina per modificare la password temporanea\n        this.router.navigate([\"/modificapassword\"]);\n      }\n      //se la password non e temporanea\n      else {\n        //verifico il ruolo che ha l utente attuale\n        if (JSON.parse(JSON.stringify(data)).utente.ruolo[0] === \"Moderatore\") {\n          //vado nella homepage del moderatore\n          this.router.navigate([\"/homepagemoderatore\"]);\n        }\n        else if (JSON.parse(JSON.stringify(data)).utente.ruolo[0] === \"Studente\") {\n          //vado nella homepage dello studente\n          this.router.navigate([\"/homepagestudente\"]);\n        }\n        //tipologia utente errata\n        else {\n          this.messaggioErrore = \"Tipologia utente errata\";\n        }\n\n      }\n      //this.router.navigate([\"/\"]);\n    }, (err) => {\n      //errore login utente\n      this.messaggioErrore = \"Username e/o password errati: \" + JSON.stringify(err.error.reasons.message);\n      this.messaggioConferma = undefined;\n      this.messaggio = undefined;\n    });\n  }\n\n}\n","<div class=\"container mt-3\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h2>\n                <p class=\"card-title paragrafo-centrato text-secondary\">Accedi</p>\n            </h2>\n            <br>\n            <form>\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"username\" name=\"username\" #inputUsername=\"ngModel\" [(ngModel)]=\"u.username\" class=\"form-control sfondo-grigio\" placeholder=\"Username\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputUsername.valid||inputUsername.pristine\" class=\"alert alert-danger\">\n                    Username non valido\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"password\" name=\"password\" #inputPassword=\"ngModel\" [(ngModel)]=\"u.password\" class=\"form-control sfondo-grigio\" placeholder=\"Password\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputPassword.valid||inputPassword.pristine\" class=\"alert alert-danger\">\n                    Password non valida\n                </div>\n                <div *ngIf=\"messaggioErrore\" class=\"alert alert-danger\" role=\"alert\">\n                    {{messaggioErrore}}\n                </div>\n                <div *ngIf=\"messaggioConferma\" class=\"alert alert-success\" role=\"alert\">\n                    {{messaggioConferma}}\n                </div>\n                <div *ngIf=\"messaggio\" class=\"alert alert-primary\" role=\"alert\">\n                    {{messaggio}}\n                </div>\n                <button type=\"submit\" class=\"btn btn-lg btn-block sfondo-grigio-chiaro\" [disabled]=\"!inputUsername.valid||!inputPassword.valid\" (click)=\"login();\" (submit)=\"login();\">Accedi</button>\n            </form><br>\n            <div class=\"paragrafo-centrato testo-grigio\">\n                Non hai ancora un account? <a routerLink=\"/registrazione\">Registrati</a><br>\n                <a routerLink=\"/passworddimenticata\">Hai dimenticato la password?</a><br> Vuoi procedere senza loggarti?\n                <a routerLink=\"/homepagenonloggato\">Guarda le inserzioni</a>\n            </div>\n        </div>\n    </div>\n</div>","import { Messaggio } from \"src/app/classi/messaggio\";\r\nimport { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per ottenere il messaggio di riferimento rispetto ad un messaggio dato in input\r\nexport function getContenutoMessaggioRiferimento(messaggio: Messaggio): Messaggio {\r\n    //controllo di avere un messaggio valido in input\r\n    if (messaggio) {\r\n        //scorro i messaggi in quanto il messaggio di riferimento fa parte della stessa tipologia di messaggi che avevo estratto precedentemente\r\n        for (let i = 0; i < this.listaMessaggi.length; ++i) {\r\n            //se l id di riferimento corrisponde\r\n            if (messaggio.getMessaggioRiferimento() === this.listaMessaggi[i].getIdMessaggio()) {\r\n                return this.listaMessaggi[i];\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n//funzione per ottenere l utente appartenente alla lista di quelli appartenenti alla chat tramite id\r\nexport function getPersonaNellaChat(idUtente: number): Utente {\r\n    //scorro tutte le persone nella chat selezionata\r\n    for (let i = 0; i < this.listaPersoneMessaggi.length; ++i) {\r\n        //verifico che l id della persona coincida con quello in input\r\n        if (this.listaPersoneMessaggi[i].getIdUser() === idUtente) {\r\n            return this.listaPersoneMessaggi[i];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n//funzione per la lista dei messaggi sulla chat pubblica presente nell popup dell inserzione\r\nexport function getListaMessaggiInserzioneChatPubblica(): void {\r\n    //inizializzo la lista dei messaggi\r\n    this.listaMessaggi = [];\r\n    //inizializzo la lista delle persone dentro alla chat\r\n    this.listaPersoneMessaggi = [];\r\n    //creo una variabile temporanea di indici degli utenti dentro alla chat\r\n    var listaIdUtenti: number[] = [];\r\n    //controllo che l'inserzione sia selezionata per poter accedere ai campi\r\n    if (this.inserzione) {\r\n        //estraggo i messaggi riferiti solo all inserzione e allo 0 come utente perche pubblico\r\n        this.ms.getListaMessaggi(null, 0, this.inserzione.getIdInserzione()).subscribe((data) => {\r\n            //scorro tutti i messaggi\r\n            for (var i = 0; i < data.messaggi.length; ++i) {\r\n                //aggiungo ciascun messaggio nella lista dei messaggi\r\n                this.listaMessaggi.push(new Messaggio(data.messaggi[i]));\r\n            }\r\n            //ordino i messaggi in ordine di id dato che sono autoincrement\r\n            this.listaMessaggi = this.listaMessaggi.sort(\r\n                (m1: Messaggio, m2: Messaggio): number => {\r\n                    if (m1.getIdMessaggio() >= m2.getIdMessaggio()) {\r\n                        return 1;\r\n                    }\r\n                    return -1;\r\n                }\r\n            );\r\n            //scorro tutti i messaggi inerenti alla chat\r\n            for (let i = 0; i < this.listaMessaggi.length; ++i) {\r\n                //controllo se l id del mittente non lo ho gia trovato allora lo inserisco\r\n                if (!this.isUtentePresente(this.listaMessaggi[i].getMittente(), listaIdUtenti)) {\r\n                    listaIdUtenti.push(this.listaMessaggi[i].getMittente());\r\n                }\r\n            }\r\n            //scorro tutti gli id delle persone dentro alla chat\r\n            for (let i = 0; i < listaIdUtenti.length; ++i) {\r\n                //estraggo ciascun utente dall id\r\n                this.us.getUtenteById(listaIdUtenti[i]).subscribe((data) => {\r\n                    //verifico che abbia trovato esattamente un utente con quell id\r\n                    if (data.utenti.length === 1) {\r\n                        //aggiungo l utente nella lista delle persone dentro a quella chat\r\n                        this.listaPersoneMessaggi.push(new Utente(data.utenti[0]));\r\n                    }\r\n                    //se gli utenti trovati non sono pari ad 1\r\n                    else {\r\n                        this.dettagliErrore.setMessage(\"Errore nessun utente con quell id\");\r\n                        this.dettagliErrore.setReason(\"\");\r\n                        console.log(\"Errore piu utenti con lo stesso id \");\r\n                    }\r\n                }, (err) => {\r\n                    //errore estrazione utente dall id\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione destinatario dall id\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione destinatario dall id \" + err)\r\n                });\r\n            }\r\n            //imposto id utente pubblico\r\n            this.idUtenteDestinazione = 0;\r\n            this.destinatarioMessaggiChatSelezionata = \"pubblico\";\r\n        }, (err) => {\r\n            //errore estrazione seconda parte messaggi\r\n            this.dettagliErrore.setMessage(\"Errore seconda parte messaggi\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore seconda parte messaggi\" + JSON.stringify(err));\r\n        });\r\n    }\r\n    //se non e valida errore\r\n    else {\r\n        //errore inserzione selezionata non valida\r\n        this.dettagliErrore.setMessage(\"Errore estrazione messaggi da inserzione non selezionata\");\r\n        this.dettagliErrore.setReason(\"\");\r\n        console.log(\"Errore estrazione messaggi da inserzione non selezionata\");\r\n    }\r\n}","import { Libro } from \"src/app/classi/Libro\";\r\nimport { Messaggio } from \"src/app/classi/messaggio\";\r\n\r\n//funzione per ottenre il messaggio dall id\r\nexport function getMessaggioById(idMessaggio: number): Messaggio {\r\n    //scorro i messaggi in quanto il messaggio di riferimento fa parte della stessa tipologia di messaggi che avevo estratto precedentemente\r\n    for (let i = 0; i < this.listaMessaggi.length; ++i) {\r\n        //se l id di riferimento corrisponde\r\n        if (idMessaggio === this.listaMessaggi[i].getIdMessaggio()) {\r\n            return this.listaMessaggi[i];\r\n        }\r\n    }\r\n    //se invece non ce \r\n    return null;\r\n}\r\n\r\n//funzione per ottenere la lista dei libri associati alle varie inserzioni\r\nexport function getLibriAssociatiInserzioni(): void {\r\n    //per ciascuna inserzione creata\r\n    for (let i = 0; i < this.inserzioniCreate.length; ++i) {\r\n        //ottengo il libro a lui riferito\r\n        this.ls.getLibroById(this.inserzioniCreate[i].getLibro()).subscribe((data) => {\r\n            this.libriCreati.push(new Libro(data.libri[0]));\r\n        }, (err) => {\r\n            //errore estrazione libro dell inserzione \r\n            this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n        });\r\n    }\r\n}\r\n\r\n//funzione per vedere se una data e gia scaduta\r\nexport function isScaduta(): boolean {\r\n    return this.inserzione.isScaduta();\r\n}\r\n\r\n//funzione per vedere se la lista di utenti è vuota\r\nexport function isVuota(lista: any[]): boolean {\r\n    //se la lunghezza è maggiore di zero falso\r\n    if (lista.length > 0) {\r\n        return false;\r\n    }\r\n    //altrimenti vero\r\n    return true;\r\n}","//classe per la gestione dell offerta\r\nexport class Offerta {\r\n    idInserzione?: number;\r\n    idUtente?: number;\r\n    nuovaOfferta?: number;\r\n\r\n    //inizializzzazione offerta\r\n    constructor(offerta?: Offerta) {\r\n        if (offerta) {\r\n            if (offerta.idInserzione) this.setIdInserzione(offerta.idInserzione);\r\n            if (offerta.idUtente) this.setIdUtente(offerta.idUtente);\r\n            if (offerta.nuovaOfferta) this.setNuovaOfferta(offerta.nuovaOfferta);\r\n        }\r\n    }\r\n\r\n    getIdInserzione(): number {\r\n        return this.idInserzione;\r\n    }\r\n\r\n    getIdUtente(): number {\r\n        return this.idUtente;\r\n    }\r\n\r\n    getNuovaOfferta(): number {\r\n        return this.nuovaOfferta;\r\n    }\r\n\r\n    setIdInserzione(idInserzione: number): void {\r\n        this.idInserzione = idInserzione;\r\n    }\r\n\r\n    setIdUtente(idUtente: number): void {\r\n        this.idUtente = idUtente;\r\n    }\r\n\r\n    setNuovaOfferta(nuovaOfferta: number): void {\r\n        this.nuovaOfferta = nuovaOfferta;\r\n    }\r\n\r\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\nimport { PersonaService } from \"../servizi/persona.service\";\n\n//classi\nimport { Utente } from \"../classi/user\";\nimport { Inserzione } from '../classi/inserzione';\nimport { Libro } from '../classi/Libro';\nimport { URLSearchParams } from 'url';\nimport { Offerta } from '../classi/offerta';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class InserzioneService {\n\n  //variabile per memorizzare l url del server\n  private url: string = \"http://localhost:8080\";\n\n  constructor(private http: HttpClient, private us: PersonaService) { }\n\n  //funzione che inserisce un inserzione\n  public inserisciInserzione(inserzioneDaInserire: Inserzione): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.put(this.url + \"/inserzioni\", inserzioneDaInserire, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per estrarre la lista di inserzioni create dall utente loggato\n  public getListaInserzioniPartecipate(listaIdInserzioni: number[]): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams().append(\"idInserzione\", listaIdInserzioni.toString())\n    };\n    return this.http.get(this.url + \"/inserzioni\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per estrarre la lista di inserzioni create dall utente loggato\n  public getListaInserzioniCreateProposte(): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams().append(\"username\", this.us.getUsername())\n    };\n    return this.http.get(this.url + \"/inserzioni\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per estrarre la lista di inserzioni in vendita\n  public getListaInserzioniInVendita(): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.get(this.url + \"/inserzioni\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per fare una nuova offerta all inserzione in vendita\n  public nuovaOfferta(nuovaOfferta: Offerta): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.post(this.url + \"/inserzioni\", { idInserzione: nuovaOfferta.getIdInserzione(), idUser: this.us.getIdUtente(), nuovaOfferta: nuovaOfferta.getNuovaOfferta() }, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per estrarre la lista di tutte le inserzioni\n  public getListaInserzioni(): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.get(this.url + \"/inserzioni\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per eliminare delle inserzioni\n  public eliminaInserzione(idInserzioni: number[]): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams().append(\"idInserzione\", idInserzioni.toString())\n    };\n    return this.http.delete(this.url + \"/inserzioni\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per modificare l inserzione\n  public modificaInserzione(inserzione: Inserzione): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.patch(this.url + \"/inserzioni\", inserzione, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per avere le inserzioni filtrate\n  public filtraInserzioni(filtraggio: any): Observable<any> {\n    var params = new HttpParams();\n    //aggiungo i campi alla richiesta solo se necessari\n    if (filtraggio.nomeLibro1 !== \"\") params = params.append(\"nomeLibro\", filtraggio.nomeLibro)\n    if (filtraggio.corsoDiStudi !== \"\") params = params.append(\"corsoDiStudi\", filtraggio.corsoDiStudi)\n    if (filtraggio.universita !== \"\") params = params.append(\"universita\", filtraggio.universita)\n    if (filtraggio.areaGeografica !== \"\") params = params.append(\"areaGeografica\", filtraggio.areaGeografica)\n    if (filtraggio.venditore !== \"\") params = params.append(\"username\", filtraggio.venditore)\n    if (filtraggio.prezzoAttualeMinimo !== \"\") params = params.append(\"prezzoAttualeMinimo\", filtraggio.prezzoAttualeMinimo)\n    if (filtraggio.prezzoAttualeMassimo !== \"\") params = params.append(\"prezzoAttualeMassimo\", filtraggio.prezzoAttualeMassimo)\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params: params\n    };\n    return this.http.get(this.url + \"/inserzioni\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n}\n","//funzione per azzerare i flag delle chat\r\nexport function azzeramentoFlagChat(): void {\r\n    this.chatSingolaPersona = false;\r\n    this.chatPrivataInserzione = false;\r\n    this.chatPubblicaInserzione = false;\r\n}\r\n\r\n//funzione per usare la chat singola persona\r\nexport function setChatSingolaPersona(): void {\r\n    this.chatSingolaPersona = true;\r\n    this.chatPrivataInserzione = false;\r\n    this.chatPubblicaInserzione = false;\r\n}\r\n\r\n//funzione per usare la chat privata dell inserzione\r\nexport function setChatPrivataInserzione(): void {\r\n    this.chatSingolaPersona = false;\r\n    this.chatPrivataInserzione = true;\r\n    this.chatPubblicaInserzione = false;\r\n}\r\n\r\n//funzione per usare la chat pubblica dell inserzione\r\nexport function setChatPubblicaInserzione(): void {\r\n    this.chatSingolaPersona = false;\r\n    this.chatPrivataInserzione = false;\r\n    this.chatPubblicaInserzione = true;\r\n}","//funzione per inserire il nuovo moderatore\r\nexport function inserisciModeratore(): void {\r\n    //inserisco il moderatore\r\n    this.us.inserisciModeratore(this.moderatore).subscribe((data) => {\r\n        //aggiorno i dati\r\n        this.aggiornaDati();\r\n    }, (err) => {\r\n        //errore inserimento moderatore\r\n        this.dettagliErrore.setMessage(\"Errore inserimento moderatore\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore inserimento moderatore \" + JSON.stringify(err));\r\n    });\r\n}","//classe per la gestione dell inserzione\r\nexport class Inserzione {\r\n    idInserzione?: number;\r\n    utente?: number;\r\n    libro?: number;\r\n    dataInizio?: string;\r\n    dataFine?: string;\r\n    prezzoIniziale?: number;\r\n    prezzoAttuale?: number;\r\n    prezzoRiserva?: number;\r\n    utentePrezzoAttuale?: number;\r\n    vincitore?: number;\r\n\r\n    //inizializzzazione inserzione\r\n    constructor(inserzione?: Inserzione) {\r\n        if (inserzione) {\r\n            if (inserzione.idInserzione) this.setIdInserzione(inserzione.idInserzione);\r\n            if (inserzione.utente) this.setUtente(inserzione.utente);\r\n            if (inserzione.libro) this.setLibro(inserzione.libro);\r\n            if (inserzione.dataInizio) this.setDataInizio(inserzione.dataInizio);\r\n            if (inserzione.dataFine) this.setDataFine(inserzione.dataFine);\r\n            if (inserzione.prezzoIniziale) this.setPrezzoIniziale(inserzione.prezzoIniziale);\r\n            if (inserzione.prezzoAttuale) this.setPrezzoAttuale(inserzione.prezzoAttuale);\r\n            if (inserzione.prezzoRiserva) this.setPrezzoRiserva(inserzione.prezzoRiserva);\r\n            if (inserzione.utentePrezzoAttuale) this.setUtentePrezzoAttuale(inserzione.utentePrezzoAttuale);\r\n            if (inserzione.vincitore) this.setVincitore(inserzione.vincitore);\r\n        }\r\n    }\r\n\r\n    //metodo setter per impostare l id dell inserzione\r\n    setIdInserzione(idInserzione: number): void {\r\n        this.idInserzione = idInserzione;\r\n    }\r\n\r\n    //metodo setter per impostare l id dell utente\r\n    setUtente(utente: number): void {\r\n        this.utente = utente;\r\n    }\r\n\r\n    //metodo setter per impostare l id dell utente che ha fatto l offerta\r\n    setUtentePrezzoAttuale(utente: number): void {\r\n        this.utentePrezzoAttuale = utente;\r\n    }\r\n\r\n    //metodo setter per impostare il vincitore\r\n    setVincitore(utente: number): void {\r\n        this.vincitore = utente;\r\n    }\r\n\r\n    //metodo setter per impostare l id del libro associato all inserzione\r\n    setLibro(libro: number): void {\r\n        this.libro = libro;\r\n    }\r\n\r\n    //metodo setter per impostare la data di inizio\r\n    setDataInizio(dataInizio: string): void {\r\n        this.dataInizio = dataInizio;\r\n    }\r\n\r\n    //metodo setter per impostare la data di fine\r\n    setDataFine(dataFine: string): void {\r\n        this.dataFine = dataFine;\r\n    }\r\n\r\n    //metodo setter per impostare il prezzo iniziale\r\n    setPrezzoIniziale(prezzoIniziale: number): void {\r\n        this.prezzoIniziale = prezzoIniziale;\r\n    }\r\n\r\n    //metodo setter per impostare il prezzo attuale\r\n    setPrezzoAttuale(prezzoAttuale: number): void {\r\n        this.prezzoAttuale = prezzoAttuale;\r\n    }\r\n\r\n    //metodo setter per impostare il prezzo riserva\r\n    setPrezzoRiserva(prezzoRiserva: number): void {\r\n        this.prezzoRiserva = prezzoRiserva;\r\n    }\r\n\r\n    //metodo getter per estrarre l id dell utente\r\n    getUtente(): number {\r\n        return this.utente;\r\n    }\r\n\r\n    //metodo getter per estrarre l id dell utente che ha fatto l offerta\r\n    getUtentePrezzoAttuale(): number {\r\n        return this.utentePrezzoAttuale;\r\n    }\r\n\r\n    //metodo getter per estrarre il vincitore\r\n    getVincitore(): number {\r\n        return this.vincitore;\r\n    }\r\n\r\n    //metodo getter per estrarre l id del libro associato all inserzione\r\n    getLibro(): number {\r\n        return this.libro;\r\n    }\r\n\r\n    //metodo getter per estrarre la data di inizio\r\n    getDataInizio(): Date {\r\n        return new Date(this.dataInizio);\r\n    }\r\n\r\n    //metodo getter per estrarre la data di fine\r\n    getDataFine(): Date {\r\n        return new Date(this.dataFine);\r\n    }\r\n\r\n    //metodo getter per estrarre il prezzo iniziale\r\n    getPrezzoIniziale(): number {\r\n        return this.prezzoIniziale;\r\n    }\r\n\r\n    //metodo getter per estrarre il prezzo attuale\r\n    getPrezzoAttuale(): number {\r\n        return this.prezzoAttuale;\r\n    }\r\n\r\n    //metodo getter per estrarre il prezzo riserva\r\n    getPrezzoRiserva(): number {\r\n        return this.prezzoRiserva;\r\n    }\r\n\r\n    //metodo getter per avere l id dell inserzione\r\n    getIdInserzione(): number {\r\n        return this.idInserzione;\r\n    }\r\n\r\n    //metodo per vedere se l inserzione e scaduta\r\n    isScaduta(): boolean {\r\n        //guardo se sono nello stesso anno\r\n        if (new Date(this.dataFine).getFullYear() === new Date().getFullYear()) {\r\n            //guardo se sono nello stesso mese\r\n            if (new Date(this.dataFine).getMonth() === new Date().getMonth()) {\r\n                //guardo se sono nello stesso giorno\r\n                if (new Date(this.dataFine).getDate() === new Date().getDate()) {\r\n                    //scade oggi ma ce ancora tempo\r\n                    return false;\r\n                }\r\n                //se mancano ancora dei giorni allo scadere\r\n                else if (new Date(this.dataFine).getDate() > new Date().getDate()) {\r\n                    return false;\r\n                }\r\n            }\r\n            //se mancano ancora dei mesi allo scadere\r\n            else if (new Date(this.dataFine).getMonth() > new Date().getMonth()) {\r\n                return false;\r\n            }\r\n        }\r\n        //se mancano ancora degli anni allo scadere\r\n        else if (new Date(this.dataFine).getFullYear() > new Date().getFullYear()) {\r\n            return false;\r\n        }\r\n        //se arrivo qua vuol dire che e scaduta\r\n        return true;\r\n    }\r\n\r\n    //funzione per vedere se l inserzione e stata vinta dall utente loggato\r\n    isVinta(utente: number): boolean {\r\n        //guardo se l inserzione e scaduta altrimenti si possono fare ancora offerte\r\n        if (this.isScaduta()) {\r\n            //guardo che non l abbia creata lo stesso utente che ha fatto l offerta\r\n            if (this.utente !== this.utentePrezzoAttuale) {\r\n                //guardo se l utente che ha fatto l ultima offerta sia quello loggato\r\n                if (this.utentePrezzoAttuale === utente) {\r\n                    //guardo se viene superato il prezzo di riserva\r\n                    if (this.prezzoAttuale > this.prezzoRiserva) {\r\n                        //allora e stata vinta\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //altrimenti non e stata vinta\r\n        return false;\r\n    }\r\n\r\n    //funzione per vedere se l inserzione e stata venduta\r\n    IsVenduta(proprietario: number): boolean {\r\n        //guardo se l inserzione e scaduta altrimenti si possono fare ancora offerte\r\n        if (this.isScaduta()) {\r\n            //guardo che non l abbia creata lo stesso utente che ha fatto l offerta\r\n            if (this.utente !== this.utentePrezzoAttuale) {\r\n                //guardo se l utente che la ha creata sia quello loggato\r\n                if (this.utente === proprietario) {\r\n                    //guardo se viene superato il prezzo di riserva\r\n                    if (this.prezzoAttuale > this.prezzoRiserva) {\r\n                        //allora e stata vinta\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //altrimenti non e stata vinta\r\n        return false;\r\n    }\r\n\r\n    //funzione per vedere se l inserzione e stata vinta senza sapere da chi\r\n    isVintaGenerico(): boolean {\r\n        //guardo se l inserzione e scaduta altrimenti si possono fare ancora offerte\r\n        if (this.isScaduta()) {\r\n            //guardo che non l abbia creata lo stesso utente che ha fatto l ultima offerta\r\n            if (this.utente !== this.utentePrezzoAttuale) {\r\n                //guardo se viene superato il prezzo di riserva\r\n                if (this.prezzoAttuale > this.prezzoRiserva) {\r\n                    //allora e stata vinta\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        //altrimenti non e stata vinta\r\n        return false;\r\n    }\r\n\r\n}","//funzione per effettuare il logout\r\nexport function logout(): void {\r\n    this.us.logout();\r\n    this.router.navigate(['/']);\r\n}","import { Inserzione } from \"src/app/classi/inserzione\";\r\nimport { Libro } from \"src/app/classi/Libro\";\r\nimport { Offerta } from \"src/app/classi/offerta\";\r\nimport { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per init \r\nexport function initDati(): void {\r\n    //ottengo i dati dell utente loggato\r\n    this.us.getUtenteById(this.us.getIdUtente()).subscribe((data) => {\r\n        //configurazione dati utente loggato\r\n        this.utenteLoggato = new Utente(data.utenti[0]);\r\n        //configurazione socket\r\n        this.configurazioneSocket();\r\n        //ottengo i dati aggiornati\r\n        this.recuperaDatiAggiornati();\r\n    }, (err) => {\r\n        //errore estrazione dati dell utente loggato\r\n        this.dettagliErrore.setMessage(\"Errore estrazione dati utente loggato\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore estrazione dati utente loggato \" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per aggiornare i dati\r\nexport function recuperaDatiAggiornati(): void {\r\n    //azzeramento variabili\r\n    this.azzeramentoVariabili();\r\n    //azzero il filtro e recupero le inserzioni in vendita\r\n    this.annullaFiltro();\r\n    //recupero le inserzioni create proposte e vinte\r\n    this.getListaInserzioniCreateProposte();\r\n    //recupero le inserzioni che l utente loggato ha partecipato\r\n    this.getListaInserzioniPartecipate();\r\n    //recupero la lista di inserzioni che l utente ha venduto\r\n    this.getListaInserzioniVendute();\r\n    //recupero la lista di persone con chat dalla lista dei messaggi\r\n    this.getListaUtentiChat();\r\n}\r\n\r\n//funzione per inizializzazione variabili\r\nexport function azzeramentoVariabili(): void {\r\n    this.nuovaOfferta = new Offerta();\r\n    this.inserzione = new Inserzione();\r\n    this.libro = new Libro();\r\n    this.utente = new Utente();\r\n    this.messaggioRiferimento.setIdMessaggio(0);\r\n    this.messaggioRiferimento.setContenuto(\"\");\r\n    this.messaggioRiferimento.setIdInserzione(0);\r\n    this.chatSingolaPersona = false;\r\n    this.chatPrivataInserzione = false;\r\n    this.chatPubblicaInserzione = false;\r\n    this.dettagliErrore.setMessage(\"\");\r\n    this.dettagliErrore.setReason(\"\");\r\n}","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { PersonaService } from \"../../servizi/persona.service\";\n\nimport { Utente } from \"../../classi/user\";\n\n@Component( {\n  selector: \"app-registrazione\",\n  templateUrl: \"./registrazione.component.html\",\n  styleUrls: [ \"./registrazione.component.css\" ]\n} )\nexport class RegistrazioneComponent implements OnInit {\n\n  //variabile per prelevare i dati dal form sfruttando oggetto utente\n  user: Utente = new Utente();\n\n  //eventuali messaggi da stampare\n  messaggioErrore = undefined;\n  messaggioConferma = undefined;\n  messaggio = undefined;\n\n  constructor ( private us: PersonaService, private router: Router ) { }\n\n  ngOnInit (): void {\n  }\n\n  //funzione per verificare che i dati del form di registrazione siano corretti\n  private controlliRegistrazione (): boolean {\n    //verifico che la password e conferma password coincidano\n    if ( this.user.password === this.user.confermaPassword ) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  //funzione per effettuare la registrazione tramite la chiamata del servizio\n  public registrazione (): void {\n    //imposto i parametri mancanti come le aste partecipate settate ad array vuoto perche devo ancora fare nessuna inserzione partecipata\n    this.user.setAstePartecipate( [] );\n    if ( !this.controlliRegistrazione() ) {\n      this.messaggioErrore = \"Password e conferma password diversi\";\n      this.messaggioConferma = undefined;\n      this.messaggio = undefined;\n      return;\n    }\n    this.us.registrazione( this.user ).subscribe( ( d ) => {\n      this.messaggioErrore = undefined;\n      this.messaggioConferma = \"Registrazione effettuata\";\n      this.messaggio = undefined;\n      //this.router.navigate( [ \"/login\" ] );\n    }, ( err ) => {\n      this.messaggioErrore = err.error.errormessage || err.error.message;\n    } );\n  }\n\n}\n","<div class=\"container mt-3\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h2>\n                <p class=\"card-title paragrafo-centrato text-secondary\">Registrazione</p>\n            </h2>\n            <br>\n            <form>\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"nome\" name=\"nome\" #inputNome=\"ngModel\" [(ngModel)]=\"user.nome\" class=\"form-control sfondo-grigio\" placeholder=\"Nome\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputNome.valid||inputNome.pristine\" class=\"alert alert-danger\">\n                    Nome non valido\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"cognome\" name=\"cognome\" #inputCognome=\"ngModel\" [(ngModel)]=\"user.cognome\" class=\"form-control sfondo-grigio\" placeholder=\"Cognome\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputCognome.valid||inputCognome.pristine\" class=\"alert alert-danger\">\n                    Cognome non valido\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"username\" name=\"username\" #inputUsername=\"ngModel\" [(ngModel)]=\"user.username\" class=\"form-control sfondo-grigio\" placeholder=\"Username\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputUsername.valid||inputUsername.pristine\" class=\"alert alert-danger\">\n                    Username non valido\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"areaGeografica\" name=\"areaGeografica\" #inputAreaGeografica=\"ngModel\" [(ngModel)]=\"user.areaGeografica\" class=\"form-control sfondo-grigio\" placeholder=\"Area geografica\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputAreaGeografica.valid||inputAreaGeografica.pristine\" class=\"alert alert-danger\">\n                    Area geografica non valida\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"email\" name=\"email\" #inputEmail=\"ngModel\" [(ngModel)]=\"user.email\" class=\"form-control sfondo-grigio\" placeholder=\"Email\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputEmail.valid||inputEmail.pristine\" class=\"alert alert-danger\">\n                    Email non valida\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"password\" name=\"password\" #inputPassword=\"ngModel\" [(ngModel)]=\"user.password\" class=\"form-control sfondo-grigio\" placeholder=\"Password\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputPassword.valid||inputPassword.pristine\" class=\"alert alert-danger\">\n                    Password non valida\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"confermaPassword\" name=\"confermaPassword\" #inputConfermaPassword=\"ngModel\" [(ngModel)]=\"user.confermaPassword\" class=\"form-control sfondo-grigio\" placeholder=\"Conferma password\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputConfermaPassword.valid||inputConfermaPassword.pristine\" class=\"alert alert-danger\">\n                    Conferma password non valida\n                </div>\n                <div *ngIf=\"messaggioErrore\" class=\"alert alert-danger\" role=\"alert\">\n                    {{messaggioErrore}}\n                </div>\n                <div *ngIf=\"messaggioConferma\" class=\"alert alert-success\" role=\"alert\">\n                    {{messaggioConferma}}\n                </div>\n                <div *ngIf=\"messaggio\" class=\"alert alert-primary\" role=\"alert\">\n                    {{messaggio}}\n                </div>\n                <button type=\"submit\" class=\"btn btn-lg btn-block sfondo-grigio-chiaro\" [disabled]=\"!inputNome.valid||!inputCognome.valid||!inputUsername.valid||!inputEmail.valid||!inputPassword.valid||!inputConfermaPassword.valid||!inputAreaGeografica.valid\" (click)=\"registrazione();\"\n                    (submit)=\"registrazione();\">Registrati</button>\n            </form><br>\n            <div class=\"paragrafo-centrato testo-grigio\">\n                Hai gia un account? <a routerLink=\"/login\">Accedi</a><br>\n                <a routerLink=\"/passworddimenticata\">Hai dimenticato la password?</a><br> Vuoi procedere senza loggarti?\n                <a routerLink=\"/homepagenonloggato\">Guarda le inserzioni</a>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientTaw2020';\n}\n","<div class=\"container\" >\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { Utente } from \"../../classi/user\";\nimport { Inserzione } from \"../../classi/inserzione\";\nimport { Libro } from '../../classi/Libro';\nimport { Errore } from \"src/app/classi/errore\";\n\nimport { LibroService } from 'src/app/servizi/libro.service';\nimport { StatisticheService } from \"src/app/servizi/statistiche.service\";\nimport { PersonaService } from \"../../servizi/persona.service\";\nimport { InserzioneService } from \"../../servizi/inserzione.service\";\n\nimport * as aggiornamentoDati from \"./functions/aggiornamentoDati\";\nimport * as gestioneFiltro from \"./functions/gestioneFiltro\";\nimport * as gestioneInserzioni from \"./functions/gestioneInserzioni\";\nimport * as gestioneLogout from \"./functions/gestioneLogout\";\nimport * as gestioneModeratore from \"./functions/gestioneModeratore\";\nimport * as gestioneStatistiche from \"./functions/gestioneStatistiche\";\nimport * as gestioneStudenti from \"./functions/gestioneStudenti\";\nimport * as gestioneToken from \"./functions/gestioneToken\";\nimport * as inizializzazione from \"./functions/inizializzazione\";\n\n\n@Component({\n  selector: 'app-homepagemoderatore',\n  templateUrl: './homepagemoderatore.component.html',\n  styleUrls: ['./homepagemoderatore.component.css']\n})\nexport class HomepagemoderatoreComponent implements OnInit {\n\n  //variabile per filtrare i dati delle inserzioni\n  filtraggioInserzioni = { \"nomeLibro\": \"\", \"corsoDiStudi\": \"\", \"universita\": \"\", \"areaGeografica\": \"\", \"venditore\": \"\", \"prezzoAttualeMinimo\": \"\", \"prezzoAttualeMassimo\": \"\" };\n\n  //variabile per accedere allo schema inserzione \n  inserzione: Inserzione = new Inserzione();\n\n  //variabile per accedere allo schema del libro\n  libro: Libro = new Libro();\n\n  //variabile per accedere allo schema dell utente che ha creato l inserzione\n  utenteInserzioneCreata: Utente = new Utente();\n\n  //variabile per accedere allo schema dell utente che ha fatto l ultima proposta all inserzione\n  utenteInserzioneUltimaOfferta: Utente = new Utente();\n\n  //variabile per memorizzare il nuovo moderatore\n  moderatore: Utente = new Utente();\n\n  //variabile per accedere alla lista di tutti gli studenti\n  utenti: Utente[] = new Array();\n\n  //variabile per accedere alla lista di tutte le inserzioni\n  inserzioni: Inserzione[] = new Array();\n\n  //variabile per accedere alla lista di libri associati a tutte le inserzioni\n  libri: Libro[] = new Array();\n\n  //varibaile per memorizzare le statistiche e quindi array di 3 posizioni\n  statistiche: number[] = new Array();\n\n  //messaggi che possono comparire durante l uso del form di login\n  messaggioErrore = undefined;\n  messaggioConferma = undefined;\n  messaggio = undefined;\n\n  //variabile per la gestione degli errori\n  dettagliErrore: Errore = new Errore();\n\n  constructor(private us: PersonaService, private is: InserzioneService, private ls: LibroService, private ss: StatisticheService, private router: Router) { }\n\n  //-----------------------------------------INIZIALIZZAZIONE------------------------------------\n\n  ngOnInit(): void {\n    //recupero i dati dell utente dal token altrimenti bisgona rifare il login\n    this.recuperaDatiUtenteToken();\n  }\n\n  //-----------------------------------------RECUPERO TOKEN ACCESSO------------------------------------\n\n  //funzione per recuperare i dati dell utente memorizzato sul token, altrimenti login\n  public recuperaDatiUtenteToken = gestioneToken.recuperaDatiUtenteToken;\n\n  //-----------------------------------------AGGIORNAMENTO DATI------------------------------------\n\n  //funzione per aggiornare tutti i dati\n  public aggiornaDati = aggiornamentoDati.aggiornaDati;\n\n  //-----------------------------------------GESTIONE FILTRO------------------------------------\n\n  //funzione per vedere se il filtro e attivato o disattivato\n  public verificaFiltro = gestioneFiltro.verificaFiltro;\n\n  //funzione per annullare il filtro\n  public annullaFiltro = gestioneFiltro.annullaFiltro;\n\n  //funzione per filtrare le inserzioni in vendita\n  public filtraInserzioni = gestioneFiltro.filtraInserzioni;\n\n  //-----------------------------------------GESTIONE INSERZIONI------------------------------------\n\n  //funzione per ottenere tutte le inserzioni dato che sono un moderatore\n  public getListaInserzioni = gestioneInserzioni.getListaInserzioni;\n\n  //funzione per settare l inserzione che il moderatore ha selezionato dall elenco\n  public setInserzioneSelezionata = gestioneInserzioni.setInserzioneSelezionata;\n\n  //funzione per eliminare un inserzione\n  public eliminaInserzione = gestioneInserzioni.eliminaInserzione;\n\n  //funzione per modificare i dati dell inserzione\n  public modificaInserzione = gestioneInserzioni.modificaInserzione;\n\n  //-----------------------------------------GESTIONE STUDENTI------------------------------------\n\n  //funzione per estrarre la lista di utenti\n  public getListaStudenti = gestioneStudenti.getListaStudenti;\n\n  //funzione per eliminare uno studente\n  public eliminaStudente = gestioneStudenti.eliminaStudente;\n\n  //-----------------------------------------GESTIONE MODERATORE------------------------------------\n\n  //funzione per inserire il nuovo moderatore\n  public inserisciModeratore = gestioneModeratore.inserisciModeratore;\n\n  //-----------------------------------------GESTIONE STATISTICHE------------------------------------\n\n  //funzione per estrarre le statistiche\n  public getStatistiche = gestioneStatistiche.getStatistiche;\n\n  //-----------------------------------------GESTIONE LOGOUT------------------------------------\n\n  //funzione per effettuare il logout\n  public logout = gestioneLogout.logout;\n\n}\n","<div class=\"container\">\n    <div class=\"row row-cols-1 row-cols-md-3\">\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Gestione inserzioni\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\" *ngFor=\"let l of libri\">\n                        <span *ngFor=\"let i of inserzioni\">\n                            <span *ngIf=\"i.libro==l.idLibro\">\n                                <span class=\"align-middle text-secondary\">Libro: {{l.nome}}</span>\n                        <button type=\"button\" class=\"btn btn-secondary btn-sm float-right\" (click)=\"setInserzioneSelezionata(i.idInserzione)\" data-dismiss=\"modal\" aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#modificainserzione\">Modifica\n                                </button>\n                        </span>\n                        </span>\n                    </li>\n                    <li class=\"list-group-item\">\n                        <button *ngIf=\"verificaFiltro()\" type=\"button\" class=\"btn btn-block btn-secondary btn-sm float-right\" (click)=\"filtraInserzioni()\" data-toggle=\"modal\" data-target=\"#filtrareinserzioni\">Filtra</button>\n                        <button *ngIf=\"!verificaFiltro()\" type=\"button\" class=\"btn btn-block btn-danger btn-sm float-right\" (click)=\"aggiornaDati()\">Annulla\n                            filtro</button>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Aggiungi moderatore\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Vuoi inserire un nuovo moderatore? Premi il bottone e inserisci i suoi dati. Ricordagli che la prima password è temporanea\n                    <br><br><button type=\"button\" class=\"btn btn-block btn-secondary btn-sm\" data-dismiss=\"modal\" aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#inserimentomoderatore\">Inserisci\n                        moderatore</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Cancellazione studenti\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\" *ngFor=\"let u of utenti\">\n                        <span class=\"align-middle text-secondary\">{{u.nome}} {{u.cognome}} {{u.username}}</span><button type=\"button\" class=\"btn btn-secondary btn-sm float-right\" (click)=\"eliminaStudente(u.idUser);\">Elimina</button>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Gestione statistiche\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\">\n                        <span class=\"align-middle text-secondary\">Inserzioni attive</span><button type=\"button\" class=\"btn btn-sm float-right\" disabled>&nbsp;&nbsp;&nbsp;&nbsp;{{statistiche[0]}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n                    </li>\n                    <li class=\"list-group-item\">\n                        <span class=\"align-middle text-secondary\">Inserzioni vinte</span><button type=\"button\" class=\"btn btn-sm float-right\" disabled>&nbsp;&nbsp;&nbsp;&nbsp;{{statistiche[2]}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n                    </li>\n                    <li class=\"list-group-item\">\n                        <span class=\"align-middle text-secondary\">Inserzioni non vinte</span><button type=\"button\" class=\"btn btn-sm float-right\" disabled>&nbsp;&nbsp;&nbsp;&nbsp;{{statistiche[1]}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Aggiornamento dati\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Vuoi aggiornare i dati?\n                    <br><br><button type=\"button\" class=\"btn btn-block btn-secondary btn-sm\" (click)=\"aggiornaDati();\">Aggiorna dati</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Logout\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Sei sicuro di voler far il logout? Sarai obbligato a reinserire le credenziali\n                    <br><br><button type=\"button\" class=\"btn btn-block btn-secondary btn-sm\" (click)=\"logout();\">Effettua logout</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Gestione errori\n                </div>\n                <div class=\"card-body\">\n                    <div *ngIf=\"dettagliErrore.getMessage()\" id=\"alertnuovoerrore\" class=\"alert alert-secondary alert-dismissible fade show mt-3 ml-3 mr-3\" role=\"alert\">\n                        <strong>Messaggio: </strong>{{dettagliErrore.getMessage()}}<br>\n                        <strong>Reason: </strong>{{dettagliErrore.getReason()}}\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dettagliErrore.setMessage('');dettagliErrore.setReason('')\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Implementazione futura\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Funzionalita extra\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Implementazione futura\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Funzionalita extra\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br>\n\n<!--modal per la modifica di una singola inserzione-->\n<div class=\"modal fade\" id=\"modificainserzione\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Modifica inserzione</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Utente\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"utentecreatoofferta\" type=\"text\" #inputLibro=\"ngModel\" [(ngModel)]=\"utenteInserzioneCreata.username\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Libro\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"libro\" type=\"text\" #inputLibro=\"ngModel\" [(ngModel)]=\"libro.nome\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"corsodistudi\" type=\"text\" #inputCorsoDiStudi=\"ngModel\" [(ngModel)]=\"libro.corsoDiStudi\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"universita\" type=\"text\" #inputUniversita=\"ngModel\" [(ngModel)]=\"libro.universita\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Autore\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"autore\" type=\"text\" #inputAutore=\"ngModel\" [(ngModel)]=\"libro.autore\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Anno di pubblicazione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"annodipubblicazione\" type=\"number\" #inputAnnoDiPubblicazione=\"ngModel\" [(ngModel)]=\"libro.annoPubblicazione\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Edizione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"edizione\" type=\"number\" #inputEdizione=\"ngModel\" [(ngModel)]=\"libro.edizione\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Isbn\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"isbn\" type=\"text\" #inputIsbn=\"ngModel\" [(ngModel)]=\"libro.isbn\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data inizio\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datainizio\" type=\"date\" #inputDataInizio=\"ngModel\" [(ngModel)]=\"inserzione.dataInizio\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data fine\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datafine\" type=\"date\" #inputDataFine=\"ngModel\" [(ngModel)]=\"inserzione.dataFine\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo iniziale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoiniziale\" type=\"number\" #inputPrezzoIniziale=\"ngModel\" [(ngModel)]=\"inserzione.prezzoIniziale\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoattuale\" type=\"number\" #inputPrezzoAttuale=\"ngModel\" [(ngModel)]=\"inserzione.prezzoAttuale\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo riserva\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoriserva\" type=\"number\" #inputPrezzoRiserva=\"ngModel\" [(ngModel)]=\"inserzione.prezzoRiserva\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Utente prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"utenteultimaofferta\" type=\"text\" #inputLibro=\"ngModel\" [(ngModel)]=\"utenteInserzioneUltimaOfferta.username\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-warning\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"eliminaInserzione()\">Elimina</button>\n                <button type=\"submit\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Annulla</button>\n                <button type=\"submit\" class=\"btn btn-success\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"modificaInserzione()\">Modifica</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--modal per filtrare le inserzioni-->\n<div class=\"modal fade\" id=\"filtrareinserzioni\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Filtraggio inserzione</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <form action=\"#\" method=\"GET\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Nome libro\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"libro\" type=\"text\" #inputNomeLibro=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.nomeLibro\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"corsodistudi\" type=\"text\" #inputCorsoDiStudi=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.corsoDiStudi\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"universita\" type=\"text\" #inputUniversita=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.universita\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Area gerografica\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"areaGeografica\" type=\"text\" #inputAreaGeografica=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.areaGeografica\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Venditore\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"venditore\" type=\"text\" #inputVenditore=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.venditore\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale minimo\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"prezzoMinimo\" type=\"number\" #inputPrezzoMinimo=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.prezzoAttualeMinimo\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale massimo\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"prezzoMassimo\" type=\"number\" #inputPrezzoMassimo=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.prezzoAttualeMassimo\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Annulla</button>\n                    <button type=\"submit\" class=\"btn btn-success\" (click)=\"filtraInserzioni();\" (submit)=\"filtraInserzioni();\" data-dismiss=\"modal\" aria-label=\"Close\">Filtra</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!--modal per inserire un nuovo moderatore-->\n<div class=\"modal fade\" id=\"inserimentomoderatore\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Inserimento nuovo moderatore</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Nome\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"nome\" type=\"text\" #inputNome=\"ngModel\" [(ngModel)]=\"moderatore.nome\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Cognome\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"cognome\" type=\"text\" #inputCognome=\"ngModel\" [(ngModel)]=\"moderatore.cognome\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Username\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"username\" type=\"text\" #inputUsername=\"ngModel\" [(ngModel)]=\"moderatore.username\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Email\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"email\" type=\"text\" #inputEmail=\"ngModel\" [(ngModel)]=\"moderatore.email\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Area geografica\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"areaGeografica\" type=\"text\" #inputVenditore=\"ngModel\" [(ngModel)]=\"moderatore.areaGeografica\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Annulla</button>\n                <button type=\"submit\" class=\"btn btn-success\" (click)=\"inserisciModeratore();\" (submit)=\"inserisciModeratore();\" data-dismiss=\"modal\" aria-label=\"Close\">Inserisci</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per recuperare i dati dell utente memorizzato sul token, altrimenti login\r\nexport function recuperaDatiUtenteToken(): void {\r\n    //recupero dallo storage il token\r\n    this.us.setToken();\r\n    //recupero il token e controllo che se e vuoto effettuo il redirect\r\n    if (this.us.getToken() === \"\") {\r\n        this.router.navigate([\"/login\"]);\r\n    }\r\n    //altrimenti se non e vuoto\r\n    else {\r\n        //decodifico il token in stringa\r\n        var tokenstring: string = atob(this.us.getToken().split('.')[1]);\r\n        //creo un utente temporaneo con i dati del token\r\n        let utenteTemp = new Utente(JSON.parse(tokenstring));\r\n        //verifico che l utente loggato sia effettivamente uno studente\r\n        if (utenteTemp.isStudente()) {\r\n            //assegno i dati del token\r\n            this.us.setPrametriToken(tokenstring);\r\n            //recupero i dati iniziali dell applicativo\r\n            this.initDati();\r\n        }\r\n        //se non e un moderatore\r\n        else {\r\n            this.us.logout();\r\n            this.router.navigate([\"/login\"]);\r\n        }\r\n    }\r\n}","//funzione per effettuare il logout e reindirizzati alla pagina di login\r\nexport function logout(): void {\r\n    this.us.logout();\r\n    this.router.navigate(['/']);\r\n}","import { Inserzione } from \"src/app/classi/inserzione\";\r\nimport { Libro } from \"src/app/classi/Libro\";\r\nimport { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per ottenere tutte le inserzioni dato che sono un moderatore\r\nexport function getListaInserzioni(): void {\r\n    //resetto la lista delle varie inserzioni\r\n    this.inserzioni = [];\r\n    //resetto la lista dei vari libri\r\n    this.libri = [];\r\n    //ottengo la lista delle inserzioni\r\n    this.is.getListaInserzioni().subscribe((data) => {\r\n        //per ciascuna inserzione, la inserisco nella mia lista dato che un moderatore le deve poter vedere e modificare tutte\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //inserisco l inserzione nella lista\r\n            this.inserzioni.push(new Inserzione(data.inserzioni[i]));\r\n            //inserisco il libro che e sull inserzione appena letta nella lista dei libri\r\n            this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                this.libri.push(new Libro(data1.libri[0]));\r\n            });\r\n        }\r\n    }, (err) => {\r\n        //errore estrazione di tutte le inserzioni \r\n        this.dettagliErrore.setMessage(\"Errore estrazione inserzioni\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore estrazione inserzioni \" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per settare l inserzione che il moderatore ha selezionato dall elenco\r\nexport function setInserzioneSelezionata(idInserzione: number): void {\r\n    //dato che l id dell inserzione sono incrementali pero non per forza partono da 1 in quanto pescano sempre l id successivo anche se ci sono state eliminazioni, devo per forza scorrere e selezionare quella giusta\r\n    for (var i = 0; i < this.inserzioni.length; ++i) {\r\n        //verifico che l id corrisponda a quella che il moderatore ha selezionato per aprire il popup\r\n        if (this.inserzioni[i].idInserzione === idInserzione) {\r\n            this.inserzione = new Inserzione(this.inserzioni[i])\r\n            //aggiorno le due date evitando formati diversi che mi danno eventuali errori\r\n            this.inserzione.setDataInizio(String(new Date(this.inserzione.dataInizio).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getDate()).padStart(2, \"0\"));\r\n            this.inserzione.setDataFine(String(new Date(this.inserzione.dataFine).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getDate()).padStart(2, \"0\"));\r\n            //quando ho trovato l inserzione selezionata corretta devo estrarre i dati del libro a cui si riferisce\r\n            this.ls.getLibroById(this.inserzione.getLibro()).subscribe((data) => {\r\n                //mi salvo i dati del libro\r\n                this.libro = new Libro(data.libri[0]);\r\n                //devo estrarmi anche i dati dell utente che la ha creata\r\n                this.us.getUtenteById(this.inserzione.getUtente()).subscribe((data) => {\r\n                    //mi salvo i dati dell utente che la ha creata\r\n                    this.utenteInserzioneCreata = new Utente(data.utenti[0]);\r\n                    //devo estrarre anche i dati dell utente che ha fatto l ultima offerta\r\n                    this.us.getUtenteById(this.inserzione.getUtentePrezzoAttuale()).subscribe((data) => {\r\n                        //mi salvo i dati dell utente che ha fatto l ultima proposta\r\n                        this.utenteInserzioneUltimaOfferta = new Utente(data.utenti[0]);\r\n                    });\r\n                }, (err) => {\r\n                    //errore estrazione dell utente che ha creato l inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione utente creazione inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione utente creazione inserzione \" + JSON.stringify(err));\r\n                });\r\n            }, (err) => {\r\n                //errore estrazione libro dell inserzione\r\n                this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//funzione per eliminare un inserzione\r\nexport function eliminaInserzione(): void {\r\n    //elimino il libro collegato all'inserzione\r\n    this.ls.eliminaLibro([this.inserzione.getLibro()]).subscribe(() => {\r\n        //elimino l inserzione\r\n        this.is.eliminaInserzione([this.inserzione.getIdInserzione()]).subscribe((data) => {\r\n            //aggiorno i dati\r\n            this.aggiornaDati();\r\n        }, (err) => {\r\n            //errore eliminazione inserzione\r\n            this.dettagliErrore.setMessage(\"Errore eliminazione inserzione\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore eliminazione inserzione \" + JSON.stringify(err));\r\n        });\r\n    }, (err) => {\r\n        //errore eliminazione libro\r\n        this.dettagliErrore.setMessage(\"Errore eliminazione libro\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore eliminazione libro \" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per modificare i dati dell inserzione\r\nexport function modificaInserzione(): void {\r\n    //aggiorno le due date evitando formati diversi che mi danno eventuali errori\r\n    this.inserzione.setDataInizio(String(new Date(this.inserzione.dataInizio).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getDate()).padStart(2, \"0\"));\r\n    this.inserzione.setDataFine(String(new Date(this.inserzione.dataFine).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getDate()).padStart(2, \"0\"));\r\n    //estraggo i dati dell utente che ha creato l inserzione dallo username per vedere che ce ne sia uno valido\r\n    this.us.getUtenteByUsername(this.utenteInserzioneCreata.getUsername()).subscribe((data) => {\r\n        //verifico di aver trovato un utente solo con quello username altrimenti errore\r\n        if (data.utenti.length === 1) {\r\n            //aggiorno l inserzione con l id dell utente nuovo che la ha creata\r\n            this.inserzione.setUtente(data.utenti[0].idUser);\r\n            //estraggo i dati dell utente che ha fatto l ultima offerta all inserzione dallo username per vedere che ce ne sia uno valido\r\n            this.us.getUtenteByUsername(this.utenteInserzioneUltimaOfferta.getUsername()).subscribe((data) => {\r\n                //verifico di aver trovato un utente solo con quello username altrimenti errore\r\n                if (data.utenti.length === 1) {\r\n                    //aggiorno l id dell utente che ha fatto l ultima offerta\r\n                    this.inserzione.setUtentePrezzoAttuale(data.utenti[0].idUser);\r\n                    //modifico i dati dell inserzione\r\n                    this.is.modificaInserzione(this.inserzione).subscribe((data) => {\r\n                        console.log(JSON.stringify(data));\r\n                        //modifico i dati del libro\r\n                        this.ls.modificaLibro(this.libro).subscribe((data) => {\r\n                            //aggiorno i dati\r\n                            this.aggiornaDati();\r\n                        }, (err) => {\r\n                            //errore modifica libro\r\n                            this.dettagliErrore.setMessage(\"Errore modifica libro\");\r\n                            this.dettagliErrore.setReason(JSON.stringify(err));\r\n                            console.log(\"Errore modifica libro \" + JSON.stringify(err));\r\n                        });;\r\n                    }, (err) => {\r\n                        //errore modifica dati inserzione\r\n                        this.dettagliErrore.setMessage(\"Errore modifica dati inserzione\");\r\n                        this.dettagliErrore.setReason(JSON.stringify(err));\r\n                        console.log(\"Errore modifica dati inserzione \" + JSON.stringify(err));\r\n                    });\r\n                }\r\n                //se non ce nessun utente o ci sono piu utenti con quello username errore\r\n                else {\r\n                    //errore estrazione di tutte le inserzioni \r\n                    this.dettagliErrore.setMessage(\"Errore modifica dati inserzione: nessun utente con quello username\");\r\n                    this.dettagliErrore.setReason(\"\");\r\n                    console.log(\"Nessun utente con quello username\");\r\n                }\r\n            });\r\n        }\r\n        //se non ce nessun utente o ci sono piu utenti con quello username errore\r\n        else {\r\n            //errore estrazione di tutte le inserzioni \r\n            this.dettagliErrore.setMessage(\"Errore modifica dati inserzione: nessun utente con quello username\");\r\n            this.dettagliErrore.setReason(\"\");\r\n            console.log(\"Nessun utente con quello username\");\r\n        }\r\n    });\r\n}","//classe per la gestione dell utente\nexport class Utente {\n    idUser?: number;\n    ruolo?: string[];\n    nome?: string;\n    cognome?: string;\n    username?: string;\n    email?: string;\n    areaGeografica?: string;\n    astePartecipate?: number[];\n    password?: string;\n    confermaPassword?: string;\n    remember?: boolean;\n\n    //inizializzzazione utente\n    constructor(utente?: Utente) {\n        this.ruolo = [];\n        this.astePartecipate = [];\n        if (utente) {\n            if (utente.idUser) this.setIdUser(utente.idUser);\n            if (utente.nome) this.setNome(utente.nome);\n            if (utente.cognome) this.setCognome(utente.cognome);\n            if (utente.ruolo) this.setRuolo(utente.ruolo);\n            if (utente.username) this.setUsername(utente.username);\n            if (utente.email) this.setEmail(utente.email);\n            if (utente.areaGeografica) this.setAreaGeografica(utente.areaGeografica);\n            if (utente.astePartecipate) this.setAstePartecipate(utente.astePartecipate);\n            if (utente.remember) this.setRemember(utente.remember);\n        }\n    }\n\n    //funzione per vedere se l utente e uno studente\n    isStudente(): boolean {\n        var flag: number = 0;\n        this.ruolo.forEach((ruoloSingolo) => {\n            console.log(\"studente \" + JSON.stringify(ruoloSingolo));\n            if (ruoloSingolo === \"Studente\") {\n                flag = 1;\n            }\n        });\n        if (flag === 1) return true;\n        else return false;\n    }\n\n    //funzione per vedere se l utente e un moderatore\n    isModeratore(): boolean {\n        var flag: number = 0;\n        this.ruolo.forEach((ruoloSingolo) => {\n            console.log(\"studente \" + JSON.stringify(ruoloSingolo));\n            if (ruoloSingolo === \"Moderatore\") {\n                flag = 1;\n            }\n        });\n        if (flag === 1) return true;\n        else return false;\n    }\n\n    //metodo setter per impostare il nome\n    setNome(nome: string): void {\n        this.nome = nome;\n    }\n\n    //metodo setter per impostare il cognome\n    setCognome(cognome: string): void {\n        this.cognome = cognome;\n    }\n\n    //metodo setter per impostare lo username\n    setUsername(username: string): void {\n        this.username = username;\n    }\n\n    //metodo setter per impostare l email\n    setEmail(email: string): void {\n        this.email = email;\n    }\n\n    //metodo setter per impostare l area geografica\n    setAreaGeografica(areaGeografica: string): void {\n        this.areaGeografica = areaGeografica;\n    }\n\n    //metodo setter per impostare le aste partecipate\n    setAstePartecipate(astePartecipate: number[]): void {\n        this.astePartecipate.forEach((asta) => {\n            if (!this.astePartecipate.includes(asta)) {\n                this.astePartecipate.push(asta);\n            }\n        });\n    }\n\n    //metodo setter per impostare le aste partecipate\n    setRuolo(ruoli: string[]): void {\n        ruoli.forEach((ruolo) => {\n            if (!this.ruolo.includes(ruolo)) {\n                this.ruolo.push(ruolo);\n            }\n        });\n    }\n\n    //metodo setter per impostare il flag di remember\n    setRemember(remember: boolean): void {\n        this.remember = remember;\n    }\n\n    public getIdUser(): number {\n        return this.idUser;\n    }\n\n    public setIdUser(idUser): void {\n        this.idUser = idUser;\n    }\n\n    public getRuolo(): string[] {\n        return this.ruolo;\n    }\n\n    public getNome(): string {\n        return this.nome;\n    }\n\n    public getCognome(): string {\n        return this.cognome;\n    }\n\n    public getUsername(): string {\n        return this.username;\n    }\n\n    public getEmail(): string {\n        return this.email;\n    }\n\n    public getAreaGeografica(): string {\n        return this.areaGeografica;\n    }\n\n    public getAstePartecipate(): number[] {\n        return this.astePartecipate;\n    }\n\n    public getRemember(): boolean {\n        return this.remember;\n    }\n\n}","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from \"./app-routing.module\";\n\nimport { AppComponent } from \"./app.component\";\nimport { LoginComponent } from \"./componenti/login/login.component\";\nimport { RegistrazioneComponent } from \"./componenti/registrazione/registrazione.component\";\nimport { PassworddimenticataComponent } from \"./componenti/passworddimenticata/passworddimenticata.component\";\nimport { ModificapasswordComponent } from './componenti/modificapassword/modificapassword.component';\nimport { HomepagemoderatoreComponent } from './componenti/homepagemoderatore/homepagemoderatore.component';\nimport { HomepagestudenteComponent } from './componenti/homepagestudente/homepagestudente.component';\nimport { HomepagenonloggatoComponent } from './componenti/homepagenonloggato/homepagenonloggato.component';\n\nimport { PersonaService } from \"./servizi/persona.service\";\nimport { LibroService } from \"./servizi/libro.service\";\nimport { MessaggioService } from \"./servizi/messaggio.service\";\nimport { InserzioneService } from \"./servizi/inserzione.service\";\nimport { SocketioService } from \"./servizi/socketio.service\";\nimport { StatisticheService } from \"./servizi/statistiche.service\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegistrazioneComponent,\n    PassworddimenticataComponent,\n    ModificapasswordComponent,\n    HomepagemoderatoreComponent,\n    HomepagestudenteComponent,\n    HomepagenonloggatoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: PersonaService, useClass: PersonaService },\n    { provide: LibroService, useClass: LibroService },\n    { provide: MessaggioService, useClass: MessaggioService },\n    { provide: InserzioneService, useClass: InserzioneService },\n    { provide: SocketioService, useClass: SocketioService },\n    { provide: StatisticheService, useClass: StatisticheService }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { PersonaService } from './persona.service';\nimport { Libro } from '../classi/Libro';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibroService {\n\n  //variabile per memorizzare l url del server\n  private url: string = \"http://localhost:8080\";\n\n  constructor(private http: HttpClient, private us: PersonaService) { }\n\n  //funzione per ottenere l id del libro piu alto e quindi l ultimo aggiunto\n  public getUltimoLibroInserito(): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.get(this.url + \"/libri\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per modificare i dati del libro\n  public modificaLibro(libro: Libro): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.patch(this.url + \"/libri\", libro, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per ottenere il libro dall id per vedere i dettagli nel popup dell inserzione\n  public getLibroById(idLibro: number): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams().append(\"idLibro\", idLibro.toString())\n    };\n    return this.http.get(this.url + \"/libri\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per eliminare il libro collegato ad un inserzione\n  public eliminaLibro(idLibro: number[]): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params: new HttpParams().append(\"idLibro\", idLibro.toString())\n    };\n    return this.http.delete(this.url + \"/libri\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione che inserisce un libro\n  public inserisciLibro(libroDaInserire: Libro): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.put(this.url + \"/libri\", libroDaInserire, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n}\n","export class Errore {\r\n    statusCode?: number;\r\n    endpoint?: string;\r\n    method?: string;\r\n    error?: boolean;\r\n    message?: string;\r\n    reason?: string;\r\n\r\n    //inizializzzazione errore\r\n    constructor(errore?: Errore) {\r\n        if (errore) {\r\n            if (errore.statusCode) this.setStatusCode(errore.statusCode);\r\n            if (errore.endpoint) this.setEndpoint(errore.endpoint);\r\n            if (errore.method) this.setMethod(errore.method);\r\n            if (errore.error) this.setError(errore.error);\r\n            if (errore.message) this.setMessage(errore.message);\r\n            if (errore.reason) this.setReason(errore.reason);\r\n        }\r\n    }\r\n\r\n    //metodo setter per impostare statusCode\r\n    public setStatusCode(statusCode: number): void {\r\n        this.statusCode = statusCode;\r\n    }\r\n\r\n    //metodo setter per impostare endpoint\r\n    public setEndpoint(endpoint: string): void {\r\n        this.endpoint = endpoint;\r\n    }\r\n\r\n    //metodo setter per impostare method\r\n    public setMethod(method: string): void {\r\n        this.method = method;\r\n    }\r\n\r\n    //metodo setter per impostare error\r\n    public setError(error: boolean): void {\r\n        this.error = error;\r\n    }\r\n\r\n    //metodo setter per impostare message\r\n    public setMessage(message: string): void {\r\n        this.message = message;\r\n    }\r\n\r\n    //metodo getter per return message\r\n    public getMessage(): string {\r\n        return this.message;\r\n    }\r\n\r\n    //metodo setter per impostare reason\r\n    public setReason(reason: string): void {\r\n        this.reason = reason;\r\n    }\r\n\r\n    //metodo getter per return reason\r\n    public getReason(): string {\r\n        if (this.reason) {\r\n            console.log(this.reason);\r\n            var json: any = JSON.parse(this.reason);\r\n            console.log(json);\r\n            return JSON.stringify(json.error.message);\r\n        }\r\n        else return \"\";\r\n\r\n    }\r\n}\r\n","//classe per la gestione del messaggio\r\nexport class Messaggio {\r\n    idMessaggio?: number;\r\n    idInserzione: number;\r\n    messaggioRiferimento?: number;\r\n    oggetto?: string;\r\n    contenuto?: string;\r\n    data?: Date;\r\n    mittente: number;\r\n    //destinatario =0 se pubblico e quindi non rivolto a nessuna persona specifica\r\n    destinatario: number;\r\n\r\n    constructor(messaggio?: Messaggio) {\r\n        if (messaggio) {\r\n            if (messaggio.idMessaggio) this.setIdMessaggio(messaggio.idMessaggio);\r\n            if (messaggio.messaggioRiferimento) this.setMessaggioRiferimento(messaggio.messaggioRiferimento);\r\n            if (messaggio.oggetto) this.setOggetto(messaggio.oggetto);\r\n            if (messaggio.contenuto) this.setContenuto(messaggio.contenuto);\r\n            if (messaggio.data) this.setData(messaggio.data);\r\n            this.setIdInserzione(messaggio.idInserzione);\r\n            this.setMittente(messaggio.mittente);\r\n            this.setDestinatario(messaggio.destinatario);\r\n        }\r\n    }\r\n\r\n    public getIdMessaggio(): number {\r\n        return this.idMessaggio;\r\n    }\r\n\r\n    public setIdMessaggio(idMessaggio: number): void {\r\n        this.idMessaggio = idMessaggio;\r\n    }\r\n\r\n    public getIdInserzione(): number {\r\n        return this.idInserzione;\r\n    }\r\n\r\n    public setIdInserzione(idInserzione: number): void {\r\n        this.idInserzione = idInserzione;\r\n    }\r\n\r\n    public getMessaggioRiferimento(): number {\r\n        return this.messaggioRiferimento;\r\n    }\r\n\r\n    public setMessaggioRiferimento(messaggioRiferimento: number): void {\r\n        this.messaggioRiferimento = messaggioRiferimento;\r\n    }\r\n\r\n    public getOggetto(): string {\r\n        return this.oggetto;\r\n    }\r\n\r\n    public setOggetto(oggetto: string): void {\r\n        this.oggetto = oggetto;\r\n    }\r\n\r\n    public getContenuto(): string {\r\n        return this.contenuto;\r\n    }\r\n\r\n    public setContenuto(contenuto: string): void {\r\n        this.contenuto = contenuto;\r\n    }\r\n\r\n    public getData(): Date {\r\n        return this.data;\r\n    }\r\n\r\n    public getDataFormatoStringa(): String {\r\n        return new Date(this.data).toLocaleDateString(\"en-GB\");\r\n    }\r\n\r\n    public getOraFormatoStringa(): String {\r\n        return new Date(this.data).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: false })\r\n    }\r\n\r\n    public setData(data: Date): void {\r\n        this.data = data;\r\n    }\r\n\r\n    public getMittente(): number {\r\n        return this.mittente;\r\n    }\r\n\r\n    public setMittente(mittente: number): void {\r\n        this.mittente = mittente;\r\n    }\r\n\r\n    public getDestinatario(): number {\r\n        return this.destinatario;\r\n    }\r\n\r\n    public setDestinatario(destinatario: number): void {\r\n        this.destinatario = destinatario;\r\n    }\r\n\r\n}","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\nimport { PersonaService } from \"../servizi/persona.service\";\n\n//classi\nimport { Utente } from \"../classi/user\";\nimport { Inserzione } from '../classi/inserzione';\nimport { Libro } from '../classi/Libro';\nimport { URLSearchParams } from 'url';\nimport { Offerta } from '../classi/offerta';\nimport { Messaggio } from \"../classi/messaggio\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessaggioService {\n\n  //variabile per memorizzare l url del server\n  private url: string = \"http://localhost:8080\";\n\n  constructor(private http: HttpClient, private us: PersonaService) { }\n\n  //funzione per estrarre la lista di messaggi dato un mittente e un destinatario\n  public getListaMessaggi(mittente: number, destinatario: number, inserzione: number): Observable<any> {\n    //creo la lista dei parametri da passare nella richiesta http\n    var params = new HttpParams();\n    //aggiungo i parametri dinamicamente solo se richiesti\n    if (mittente) params = params.append(\"mittente\", mittente.toString());\n    if (destinatario != null) params = params.append(\"destinatario\", destinatario.toString());\n    if (inserzione) params = params.append(\"idInserzione\", inserzione.toString());\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params\n    };\n    return this.http.get(this.url + \"/messaggi\", options).pipe(\n      tap((data) => {\n\n      })\n    );\n  }\n\n  //funzione per eliminare dei messaggi sfruttando diversi parametri\n  public eliminaMessaggi(idMessaggio: number[], idInserzione: number[], idUtente: number[]): Observable<any> {\n    //creo la lista dei parametri da passare nella richiesta http\n    var params = new HttpParams();\n    //aggiungo i parametri dinamicamente solo se richiesti\n    if (idMessaggio) params = params.append(\"idMessaggio\", idMessaggio.toString());\n    if (idInserzione) params = params.append(\"idInserzione\", idInserzione.toString());\n    if (idUtente) params = params.append(\"idUtente\", idUtente.toString());\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      }),\n      params\n    };\n    return this.http.delete(this.url + \"/messaggi\", options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n  //funzione per inviare un messaggio\n  public inviaMessaggio(messaggio: Messaggio): Observable<any> {\n    const options = {\n      headers: new HttpHeaders({\n        \"authorization\": \"Bearer \" + this.us.getToken(),\n        \"cache-control\": \"no-cache\",\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.put(this.url + \"/messaggi\", messaggio, options).pipe(\n      tap((data) => {\n      })\n    );\n  }\n\n}\n","import { Inserzione } from \"src/app/classi/inserzione\";\r\n\r\n//funzione per vedere se il filtro e attivato o disattivato\r\nexport function verificaFiltro(): boolean {\r\n    //se l oggetto e vuoto restituisco vero\r\n    if (this.filtraggioInserzioni.nomeLibro === \"\" && this.filtraggioInserzioni.corsoDiStudi === \"\" && this.filtraggioInserzioni.areaGeografica === \"\" && this.filtraggioInserzioni.universita === \"\" && this.filtraggioInserzioni.venditore === \"\" && this.filtraggioInserzioni.prezzoAttualeMinimo === \"\" && this.filtraggioInserzioni.prezzoAttualeMassimo === \"\") {\r\n        return true;\r\n    }\r\n    //se l oggetto non e vuoto restituisco falso\r\n    return false;\r\n}\r\n\r\n//funzione per annullare il filtro\r\nexport function annullaFiltro(): void {\r\n    //azzero l oggetto per il filtraggio\r\n    this.filtraggioInserzioni.nomeLibro = \"\";\r\n    this.filtraggioInserzioni.corsoDiStudi = \"\";\r\n    this.filtraggioInserzioni.universita = \"\";\r\n    this.filtraggioInserzioni.areaGeografica = \"\";\r\n    this.filtraggioInserzioni.venditore = \"\";\r\n    this.filtraggioInserzioni.prezzoAttualeMinimo = \"\";\r\n    this.filtraggioInserzioni.prezzoAttualeMassimo = \"\";\r\n    //recupero la lista di inserzioni in vendita\r\n    this.getListaInserzioniInVendita();\r\n}\r\n\r\n//funzione per filtrare le inserzioni in vendita\r\nexport function filtraInserzioni(): void {\r\n    //resetto la lista delle varie inserzioni\r\n    this.inserzioniInVendita = [];\r\n    //resetto la lista dei vari libri\r\n    this.libriInVendita = [];\r\n    //richiamo il service per ottenere la lista di inserzioni filtrate\r\n    this.is.filtraInserzioni(this.filtraggioInserzioni).subscribe((data) => {\r\n        //mi resistuisce tutte le inserzioni perche faccio tramite controllo lato client se e stata vinta oppure se e in vendita rispettando certi termini\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //se l inserzione attuale non e stata creata dall utente attuale\r\n            if (data.inserzioni[i].utente !== this.utenteLoggato.getIdUser()) {\r\n                //verifico inoltre che l utente non abbia gia fatto una proposta perche altrimenti viene fuori nella sezione proposte\r\n                if (data.inserzioni[i].utentePrezzoAttuale !== this.utenteLoggato.getIdUser()) {\r\n                    //se non e ancora scaduta\r\n                    if (!((new Inserzione(data.inserzioni[i])).isScaduta())) {\r\n                        //inserisco l inserzione nella lista giusta\r\n                        this.inserzioniInVendita.push(new Inserzione(data.inserzioni[i]));\r\n                        //inserisco il libro in vendita nella lista relativa\r\n                        this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                            this.libriInVendita.push(data1.libri[0]);\r\n                        }, (err) => {\r\n                            //errore estrazione libro dell inserzione in filtraggio\r\n                            this.dettagliErrore.setMessage(\"Errore estrazione libro del filtraggio inserzioni\");\r\n                            this.dettagliErrore.setReason(JSON.stringify(err));\r\n                            console.log(\"Errore estrazione libro del filtraggio inserzioni \" + JSON.stringify(err));\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, (err) => {\r\n        //errore filtraggio inserzioni\r\n        this.dettagliErrore.setMessage(\"Errore filtraggio inserzioni\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore filtraggio inserzioni \" + JSON.stringify(err));\r\n    });\r\n}","import { Messaggio } from \"src/app/classi/messaggio\";\r\nimport { Utente } from \"src/app/classi/user\";\r\n\r\n//configurazione socket\r\nexport function configurazioneSocket(): void {\r\n    //dopo la connessione metto in attesa di ricezione di nuovi messaggi\r\n    this.ss.connect().subscribe((m: Messaggio) => {\r\n        //salvo il messaggio appena arrivato\r\n        this.messaggioAppenaArrivato = new Messaggio(m).getContenuto();\r\n        //memorizzo temporaneamente il messaggio per analizzarlo\r\n        var messTemp = new Messaggio(m);\r\n        //casi che non serve cambiare liste messaggi\r\n        if ((messTemp.getDestinatario() !== 0 || (messTemp.getDestinatario() === 0 && this.inserzione && this.inserzione.getIdInserzione() !== messTemp.getIdInserzione())) && messTemp.getDestinatario() !== this.utenteLoggato.getIdUser() && messTemp.getMittente() !== this.utenteLoggato.getIdUser()) {\r\n        }\r\n        //altrimenti puo interessarmi o con una notifica o con un aggiornamento delle liste dei messaggi\r\n        else {\r\n            //aggiorno la lista delle persone nelle chat\r\n            this.getListaUtentiChat();\r\n            //solo la notifica se non ho aperto nessuna tipologia di chat\r\n            if (!this.chatSingolaPersona && !this.chatPrivataInserzione && !this.chatPubblicaInserzione && messTemp.getDestinatario() === this.utenteLoggato.getIdUser()) {\r\n                //ottengo i dati dell utente che ha mandato il messaggio all utente loggato\r\n                this.us.getUtenteById(new Messaggio(m).getMittente()).subscribe((data) => {\r\n                    this.utenteMessaggioAppenaArrvato = new Utente(data.utenti[0]).getNome() + \" \" + new Utente(data.utenti[0]).getCognome();\r\n                }, (err) => {\r\n                    //errore estrazione dati dell utente loggato\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione dati mittente messaggio\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione dati mittente messaggio \" + JSON.stringify(err));\r\n                });\r\n            }\r\n            //se sono dentro ad ua particolare chat\r\n            else {\r\n                //se sono nella chat con una singola persona\r\n                if (this.chatSingolaPersona) {\r\n                    this.getListaMessaggiPersona(this.idPersonaChatAttuale);\r\n                }\r\n                //se sono sulla chat privata di una inserzione\r\n                else if (this.chatPrivataInserzione) {\r\n                    this.getListaMessaggiInserzioneChatPrivata();\r\n                }\r\n                //se sono sulla chat pubblica di una inserzione\r\n                else if (this.chatPubblicaInserzione) {\r\n                    this.getListaMessaggiInserzioneChatPubblica();\r\n                }\r\n            }\r\n        }\r\n    });\r\n}","import { Inserzione } from \"src/app/classi/inserzione\";\r\nimport { Libro } from \"src/app/classi/Libro\";\r\nimport { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per settare l inserzione vinta che l utente ha selezionato dall elenco\r\nexport function setInserzioneVintaSelezionata(idInserzione: number): void {\r\n    //dato che l id dell inserzione sono incrementali pero non per forza partono da 1 in quanto pescano sempre l id successivo anche se ci sono state eliminazioni, devo per forza scorrere e selezionare quella giusta\r\n    for (let i = 0; i < this.inserzioniVinte.length; ++i) {\r\n        //verifico che l id corrisponda a quella che l utente ha selezionato per aprire il popup\r\n        if (this.inserzioniVinte[i].idInserzione === idInserzione) {\r\n            this.inserzione = new Inserzione(this.inserzioniVinte[i]);\r\n            //aggiorno le due date evitando formati diversi che mi danno eventuali errori\r\n            this.inserzione.setDataInizio(String(new Date(this.inserzione.dataInizio).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getDate()).padStart(2, \"0\"));\r\n            this.inserzione.setDataFine(String(new Date(this.inserzione.dataFine).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getDate()).padStart(2, \"0\"));\r\n            //quando ho trovato l inserzione selezionata corretta devo estrarre i dati del libro a cui si riferisce\r\n            this.ls.getLibroById(this.inserzione.getLibro()).subscribe((data) => {\r\n                //mi salvo i dati del libro\r\n                this.libro = new Libro(data.libri[0]);\r\n                //devo estrarmi anche i dati dell utente che la ha creata\r\n                this.us.getUtenteById(this.inserzione.getUtente()).subscribe((data) => {\r\n                    //mi salvo i dati dell utente che la ha creata\r\n                    this.utente = new Utente(data.utenti[0]);\r\n                }, (err) => {\r\n                    //errore estrazione utente che ha creato l inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione utente che ha creato l inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione utente che ha creato l inserzione \" + JSON.stringify(err));\r\n                });\r\n            }, (err) => {\r\n                //errore estrazione libro dell inserzione\r\n                this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//funzione per settare l inserzione partecipata dall elenco\r\nexport function setInserzionePartecipataSelezionata(idInserzione: number): void {\r\n    //dato che l id dell inserzione sono incrementali pero non per forza partono da 1 in quanto pescano sempre l id successivo anche se ci sono state eliminazioni, devo per forza scorrere e selezionare quella giusta\r\n    for (let i = 0; i < this.inserzioniPartecipate.length; ++i) {\r\n        //verifico che l id corrisponda a quella che l utente ha selezionato per aprire il popup\r\n        if (this.inserzioniPartecipate[i].idInserzione === idInserzione) {\r\n            this.inserzione = new Inserzione(this.inserzioniPartecipate[i]);\r\n            //aggiorno le due date evitando formati diversi che mi danno eventuali errori\r\n            this.inserzione.setDataInizio(String(new Date(this.inserzione.dataInizio).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getDate()).padStart(2, \"0\"));\r\n            this.inserzione.setDataFine(String(new Date(this.inserzione.dataFine).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getDate()).padStart(2, \"0\"));\r\n            //quando ho trovato l inserzione selezionata corretta devo estrarre i dati del libro a cui si riferisce\r\n            this.ls.getLibroById(this.inserzione.getLibro()).subscribe((data) => {\r\n                //mi salvo i dati del libro\r\n                this.libro = new Libro(data.libri[0]);\r\n                //devo estrarmi anche i dati dell utente che la ha creata\r\n                this.us.getUtenteById(this.inserzione.getUtente()).subscribe((data) => {\r\n                    //mi salvo i dati dell utente che la ha creata\r\n                    this.utente = new Utente(data.utenti[0]);\r\n                }, (err) => {\r\n                    //errore estrazione utente che ha creato l inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione utente che ha creato l' inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione utente che ha creato l' inserzione \" + JSON.stringify(err));\r\n                });\r\n            }, (err) => {\r\n                //errore estrazione libro dell inserzione\r\n                this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//funzione per settare l inserzione creata che l utente ha selezionato dall elenco\r\nexport function setInserzioneCreataSelezionata(idInserzione: number): void {\r\n    //dato che l id dell inserzione sono incrementali pero non per forza partono da 1 in quanto pescano sempre l id successivo anche se ci sono state eliminazioni, devo per forza scorrere e selezionare quella giusta\r\n    for (let i = 0; i < this.inserzioniCreate.length; ++i) {\r\n        //verifico che l id corrisponda a quella che l utente ha selezionato per aprire il popup\r\n        if (this.inserzioniCreate[i].idInserzione === idInserzione) {\r\n            this.inserzione = new Inserzione(this.inserzioniCreate[i]);\r\n            //aggiorno le due date evitando formati diversi che mi danno eventuali errori\r\n            this.inserzione.setDataInizio(String(new Date(this.inserzione.dataInizio).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getDate()).padStart(2, \"0\"));\r\n            this.inserzione.setDataFine(String(new Date(this.inserzione.dataFine).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getDate()).padStart(2, \"0\"));\r\n            //quando ho trovato l inserzione selezionata corretta devo estrarre i dati del libro a cui si riferisce\r\n            this.ls.getLibroById(this.inserzione.getLibro()).subscribe((data) => {\r\n                //mi salvo i dati del libro\r\n                this.libro = new Libro(data.libri[0]);\r\n                //devo estrarmi anche i dati dell utente che ha fatto l ultima offerta\r\n                this.us.getUtenteById(this.inserzione.getUtentePrezzoAttuale()).subscribe((data) => {\r\n                    //mi salvo i dati dell utente che la ha creata\r\n                    this.utente = new Utente(data.utenti[0]);\r\n                }, (err) => {\r\n                    //errore estrazione utente che ha fatto l ultima offerta\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione utente ultima offerta \");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione utente ultima offerta \" + JSON.stringify(err));\r\n                });\r\n            }, (err) => {\r\n                //errore estrazione libro dell inserzione\r\n                this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//funzione per settare l inserzione in vendita che l utente loggato ha premuto per visualizzare i dettagli\r\nexport function setInserzioneInVenditaSelezionata(idInserzione: number): void {\r\n    //dato che l id dell inserzione sono incrementali pero non per forza partono da 1 in quanto pescano sempre l id successivo anche se ci sono state eliminazioni, devo per forza scorrere e selezionare quella giusta\r\n    for (let i = 0; i < this.inserzioniInVendita.length; ++i) {\r\n        //verifico che l id corrisponda a quella che l utente ha selezionato per aprire il popup\r\n        if (this.inserzioniInVendita[i].idInserzione === idInserzione) {\r\n            this.inserzione = new Inserzione(this.inserzioniInVendita[i]);\r\n            //aggiorno le due date evitando formati diversi che mi danno eventuali errori\r\n            this.inserzione.setDataInizio(String(new Date(this.inserzione.dataInizio).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getDate()).padStart(2, \"0\"));\r\n            this.inserzione.setDataFine(String(new Date(this.inserzione.dataFine).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getDate()).padStart(2, \"0\"));\r\n            //quando ho trovato l inserzione selezionata corretta devo estrarre i dati del libro a cui si riferisce\r\n            this.ls.getLibroById(this.inserzione.getLibro()).subscribe((data) => {\r\n                //mi salvo i dati del libro\r\n                this.libro = new Libro(data.libri[0]);\r\n                //devo estrarmi anche i dati dell utente che la ha creata\r\n                this.us.getUtenteById(this.inserzione.getUtente()).subscribe((data) => {\r\n                    //mi salvo i dati dell utente che la ha creata\r\n                    this.utente = new Utente(data.utenti[0]);\r\n                }, (err) => {\r\n                    //errore estrazione utente che ha creato l inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione utente che ha creato l' inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione utente che ha creato l' inserzione \" + JSON.stringify(err));\r\n                });\r\n            }, (err) => {\r\n                //errore estrazione libro dell inserzione\r\n                this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//funzione per settare l inserzione venduta che l utente loggato ha premuto per visualizzare i dettagli\r\nexport function setInserzioneVendutaSelezionata(idInserzione: number): void {\r\n    //dato che l id dell inserzione sono incrementali pero non per forza partono da 1 in quanto pescano sempre l id successivo anche se ci sono state eliminazioni, devo per forza scorrere e selezionare quella giusta\r\n    for (let i = 0; i < this.inserzioniVendute.length; ++i) {\r\n        //verifico che l id corrisponda a quella che l utente ha selezionato per aprire il popup\r\n        if (this.inserzioniVendute[i].idInserzione === idInserzione) {\r\n            this.inserzione = new Inserzione(this.inserzioniVendute[i]);\r\n            //aggiorno le due date evitando formati diversi che mi danno eventuali errori\r\n            this.inserzione.setDataInizio(String(new Date(this.inserzione.dataInizio).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getDate()).padStart(2, \"0\"));\r\n            this.inserzione.setDataFine(String(new Date(this.inserzione.dataFine).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getDate()).padStart(2, \"0\"));\r\n            //quando ho trovato l inserzione selezionata corretta devo estrarre i dati del libro a cui si riferisce\r\n            this.ls.getLibroById(this.inserzione.getLibro()).subscribe((data) => {\r\n                //mi salvo i dati del libro\r\n                this.libro = new Libro(data.libri[0]);\r\n                //devo estrarmi anche i dati dell utente che la ha creata\r\n                this.us.getUtenteById(this.inserzione.getUtente()).subscribe((data) => {\r\n                    //mi salvo i dati dell utente che la ha creata\r\n                    this.utente = new Utente(data.utenti[0]);\r\n                }, (err) => {\r\n                    //errore estrazione utente che ha creato l inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione utente che ha creato l' inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione utente che ha creato l' inserzione \" + JSON.stringify(err));\r\n                });\r\n            }, (err) => {\r\n                //errore estrazione libro dell inserzione\r\n                this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n            });\r\n        }\r\n    }\r\n}","import { Inserzione } from \"src/app/classi/inserzione\";\r\n\r\n//funzione per vedere se il filtro e attivato o disattivato\r\nexport function verificaFiltro(): boolean {\r\n    //se l oggetto e vuoto restituisco vero\r\n    if (this.filtraggioInserzioni.nomeLibro === \"\" && this.filtraggioInserzioni.corsoDiStudi === \"\" && this.filtraggioInserzioni.areaGeografica === \"\" && this.filtraggioInserzioni.universita === \"\" && this.filtraggioInserzioni.venditore === \"\" && this.filtraggioInserzioni.prezzoAttualeMinimo === \"\" && this.filtraggioInserzioni.prezzoAttualeMassimo === \"\") {\r\n        return true;\r\n    }\r\n    //se l oggetto non e vuoto restituisco falso\r\n    return false;\r\n}\r\n\r\n//funzione per annullare il filtro\r\nexport function annullaFiltro(): void {\r\n    //azzero l oggetto per il filtraggio\r\n    this.filtraggioInserzioni.nomeLibro = \"\";\r\n    this.filtraggioInserzioni.corsoDiStudi = \"\";\r\n    this.filtraggioInserzioni.universita = \"\";\r\n    this.filtraggioInserzioni.areaGeografica = \"\";\r\n    this.filtraggioInserzioni.venditore = \"\";\r\n    this.filtraggioInserzioni.prezzoAttualeMinimo = \"\";\r\n    this.filtraggioInserzioni.prezzoAttualeMassimo = \"\";\r\n}\r\n\r\n//funzione per filtrare le inserzioni in vendita\r\nexport function filtraInserzioni(): void {\r\n    //resetto la lista delle varie inserzioni\r\n    this.inserzioni = [];\r\n    //resetto la lista dei vari libri\r\n    this.libri = [];\r\n    //richiamo il service per ottenere la lista di inserzioni filtrate\r\n    this.is.filtraInserzioni(this.filtraggioInserzioni).subscribe((data) => {\r\n        //mi resistuisce tutte le inserzioni perche faccio tramite controllo lato client se e stata vinta oppure se e in vendita rispettando certi termini\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //inserisco l inserzione nella lista giusta\r\n            this.inserzioni.push(new Inserzione(data.inserzioni[i]));\r\n            //inserisco il libro in vendita nella lista relativa\r\n            this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                this.libri.push(data1.libri[0]);\r\n            }, (err) => {\r\n                //errore estrazione libro dall id\r\n                this.dettagliErrore.setMessage(\"Errore estrazione libro dall id\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore estrazione libro dall id \" + JSON.stringify(err));\r\n            });\r\n        }\r\n    }, (err) => {\r\n        //errore filtraggio inserzioni\r\n        this.dettagliErrore.setMessage(\"Errore filtraggio inserzioni\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore filtraggio inserzioni \" + JSON.stringify(err));\r\n    });\r\n}","import { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per recuperare i dati dell utente memorizzato sul token, altrimenti login\r\nexport function recuperaDatiUtenteToken(): void {\r\n    //recupero dallo storage il token\r\n    this.us.setToken();\r\n    //recupero il token e controllo che se e vuoto effettuo il redirect\r\n    if (this.us.getToken() === \"\") {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n    //altrimenti se non e vuoto\r\n    else {\r\n      //decodifico il token in stringa\r\n      var tokenstring: string = atob(this.us.getToken().split('.')[1]);\r\n      //creo un utente temporaneo con i dati del token\r\n      let utenteTemp = new Utente(JSON.parse(tokenstring));\r\n      //verifico che l utente loggato sia effettivamente un moderatore\r\n      if (utenteTemp.isModeratore()) {\r\n        //assegno i dati del token\r\n        this.us.setPrametriToken(tokenstring);\r\n        //recupero tutti i dati\r\n        this.aggiornaDati();\r\n      }\r\n      //se non e un moderatore\r\n      else {\r\n        this.us.logout();\r\n        this.router.navigate([\"/login\"]);\r\n      }\r\n    }\r\n  }","//funzione per verificare se un utente e gia dentro alla lista\r\nexport function isUtentePresente(idUtente: number, lista: number[]): boolean {\r\n    //per ciascun utente presente nella lista\r\n    for (let i = 0; i < lista.length; ++i) {\r\n        //confronto se e gia nella lista allora vero\r\n        if (lista[i] === idUtente) {\r\n            return true;\r\n        }\r\n    }\r\n    //se non presente falso\r\n    return false;\r\n}","//funzione per estrarre le statistiche\r\nexport function getStatistiche(): void {\r\n    //estraggo le statistiche\r\n    this.ss.getStatistiche().subscribe((data) => {\r\n        //memorizzo il numero di aste attive\r\n        this.statistiche.push(data.inserzioniAttive.length);\r\n        //memorizzo il numero di aste senza il raggiungimento del prezzo di riserva\r\n        this.statistiche.push(data.inserzioniNonRaggiungimentoRiserva.length);\r\n        //memorizzo il numero di aste con il raggiungimento del prezzo di riserva\r\n        this.statistiche.push(data.inserzioniRaggiungimentoRiserva.length);\r\n    }, (err) => {\r\n        //errore estrazione statistiche\r\n        this.dettagliErrore.setMessage(\"Errore estrazione statistiche\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore estrazione statistiche \" + JSON.stringify(err));\r\n    });\r\n}","//funzione per il reindirizzamento nella pagina del login\r\nexport function effettuaLogin(): void {\r\n    //vado nella pagina del login\r\n    this.router.navigate([\"/login\"]);\r\n}\r\n\r\n//funzione per il reindirizzamento nella pagina della registrazione\r\nexport function effettuaRegistrazione(): void {\r\n    //vado nella pagina del login\r\n    this.router.navigate([\"/registrazione\"]);\r\n}","import { Inserzione } from \"src/app/classi/inserzione\";\r\n\r\n//funzione per vedere se il filtro e attivato o disattivato\r\nexport function verificaFiltro(): boolean {\r\n    //se l oggetto e vuoto restituisco vero\r\n    if (this.filtraggioInserzioni.nomeLibro === \"\" && this.filtraggioInserzioni.corsoDiStudi === \"\" && this.filtraggioInserzioni.areaGeografica === \"\" && this.filtraggioInserzioni.universita === \"\" && this.filtraggioInserzioni.venditore === \"\" && this.filtraggioInserzioni.prezzoAttualeMinimo === \"\" && this.filtraggioInserzioni.prezzoAttualeMassimo === \"\") {\r\n        return true;\r\n    }\r\n    //se l oggetto non e vuoto restituisco falso\r\n    return false;\r\n}\r\n\r\n//funzione per annullare il filtro\r\nexport function annullaFiltro(): void {\r\n    //azzero l oggetto per il filtraggio\r\n    this.filtraggioInserzioni.nomeLibro = \"\";\r\n    this.filtraggioInserzioni.corsoDiStudi = \"\";\r\n    this.filtraggioInserzioni.universita = \"\";\r\n    this.filtraggioInserzioni.areaGeografica = \"\";\r\n    this.filtraggioInserzioni.venditore = \"\";\r\n    this.filtraggioInserzioni.prezzoAttualeMinimo = \"\";\r\n    this.filtraggioInserzioni.prezzoAttualeMassimo = \"\";\r\n    //estraggo la lista di tutte le inserzioni in vendita\r\n    this.getListaInserzioniInVendita();\r\n}\r\n\r\n//funzione per aggiornare i dati\r\nexport function recuperaDatiAggiornati(): void {\r\n    //azzero eventali variabili\r\n    this.dettagliErrore.setMessage(\"\");\r\n    this.dettagliErrore.setReason(\"\");\r\n    //ottengo la lista delle inserzioni in vendita\r\n    this.getListaInserzioniInVendita();\r\n}\r\n\r\n//funzione per filtrare le inserzioni in vendita\r\nexport function filtraInserzioni(): void {\r\n    //resetto la lista delle varie inserzioni\r\n    this.inserzioniInVendita = [];\r\n    //resetto la lista dei vari libri\r\n    this.libriInVendita = [];\r\n    //richiamo il service per ottenere la lista di inserzioni filtrate\r\n    this.is.filtraInserzioni(this.filtraggioInserzioni).subscribe((data) => {\r\n        //mi resistuisce tutte le inserzioni perche faccio tramite controllo lato client se e stata vinta oppure se e in vendita rispettando certi termini\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //verifico che l inserzione non sia gia scaduta\r\n            if (!((new Inserzione(data.inserzioni[i])).isScaduta())) {\r\n                //inserisco l inserzione nella lista giusta\r\n                this.inserzioniInVendita.push(new Inserzione(data.inserzioni[i]));\r\n                //inserisco il libro in vendita nella lista relativa\r\n                this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                    this.libriInVendita.push(data1.libri[0]);\r\n                }, (err) => {\r\n                    //errore estrazione libro dell inserzione in filtraggio\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione libro del filtraggio inserzioni\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione libro del filtraggio inserzioni \" + JSON.stringify(err));\r\n                });\r\n            }\r\n        }\r\n    }, (err) => {\r\n        //errore filtraggio inserzioni in vendita\r\n        this.dettagliErrore.setMessage(\"Errore filtraggio inserzioni in vendita\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore filtraggio inserzioni in vendita \" + JSON.stringify(err));\r\n    });\r\n}","import { Inserzione } from \"src/app/classi/inserzione\";\r\nimport { Libro } from \"src/app/classi/Libro\";\r\nimport { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per settare l inserzione in vendita che l utente loggato ha premuto per visualizzare i dettagli\r\nexport function setInserzioneInVenditaSelezionata(idInserzione: number): void {\r\n    //dato che l id dell inserzione sono incrementali pero non per forza partono da 1 in quanto pescano sempre l id successivo anche se ci sono state eliminazioni, devo per forza scorrere e selezionare quella giusta\r\n    for (let i = 0; i < this.inserzioniInVendita.length; ++i) {\r\n        //verifico che l id corrisponda a quella che l utente ha selezionato per aprire il popup\r\n        if (this.inserzioniInVendita[i].idInserzione === idInserzione) {\r\n            this.inserzione = new Inserzione(this.inserzioniInVendita[i]);\r\n            //aggiorno le due date evitando formati diversi che mi danno eventuali errori\r\n            this.inserzione.setDataInizio(String(new Date(this.inserzione.dataInizio).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataInizio).getDate()).padStart(2, \"0\"));\r\n            this.inserzione.setDataFine(String(new Date(this.inserzione.dataFine).getFullYear()).padStart(4, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getMonth() + 1).padStart(2, \"0\") + \"-\" + String(new Date(this.inserzione.dataFine).getDate()).padStart(2, \"0\"));\r\n            //quando ho trovato l inserzione selezionata corretta devo estrarre i dati del libro a cui si riferisce\r\n            this.ls.getLibroById(this.inserzione.getLibro()).subscribe((data) => {\r\n                //mi salvo i dati del libro\r\n                this.libro = new Libro(data.libri[0]);\r\n                //devo estrarmi anche i dati dell utente che la ha creata\r\n                this.us.getUtenteById(this.inserzione.getUtente()).subscribe((data) => {\r\n                    //mi salvo i dati dell utente che la ha creata\r\n                    this.utente = new Utente(data.utenti[0]);\r\n                }, (err) => {\r\n                    //errore estrazione utente che ha creato l inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione utente che ha creato l' inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione utente che ha creato l' inserzione \" + JSON.stringify(err));\r\n                });\r\n            }, (err) => {\r\n                //errore estrazione libro dell inserzione\r\n                this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//funzione per ottenere tutte le inserzioni in vendita e quindi non scadute\r\nexport function getListaInserzioniInVendita(): void {\r\n    //resetto la lista delle varie inserzioni\r\n    this.inserzioniInVendita = [];\r\n    //resetto la lista dei vari libri\r\n    this.libriInVendita = [];\r\n    //ottengo la lista delle inserzioni in vendita\r\n    this.is.getListaInserzioniInVendita().subscribe((data) => {\r\n        //mi resistuisce tutte le inserzioni perche faccio tramite controllo lato client se e stata vinta oppure se e in vendita rispettando certi termini\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //se non e ancora scaduta\r\n            if (!((new Inserzione(data.inserzioni[i])).isScaduta())) {\r\n                //inserisco l inserzione nella lista giusta\r\n                this.inserzioniInVendita.push(new Inserzione(data.inserzioni[i]));\r\n                //inserisco il libro in vendita nella lista relativa\r\n                this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                    this.libriInVendita.push(data1.libri[0]);\r\n                }, (err) => {\r\n                    //errore estrazione libro dell inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n                });\r\n            }\r\n        }\r\n    }, (err) => {\r\n        //errore estrazione inserzioni in vendita\r\n        this.dettagliErrore.setMessage(\"Errore estrazione inserzioni in vendita\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore estrazione inserzioni in vendita \" + JSON.stringify(err));\r\n    });\r\n}","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { Offerta } from \"../../classi/offerta\";\nimport { Utente } from \"../../classi/user\";\nimport { Inserzione } from \"../../classi/inserzione\";\nimport { Libro } from '../../classi/Libro';\nimport { Errore } from \"src/app/classi/errore\";\n\nimport { LibroService } from 'src/app/servizi/libro.service';\nimport { Messaggio } from 'src/app/classi/messaggio';\nimport { MessaggioService } from 'src/app/servizi/messaggio.service';\nimport { SocketioService } from \"src/app/servizi/socketio.service\";\nimport { PersonaService } from \"../../servizi/persona.service\";\nimport { InserzioneService } from \"../../servizi/inserzione.service\";\n\nimport * as gestioneFiltro from \"./functions/gestioneFiltro\";\nimport * as gestioneInvioMessaggio from \"./functions/gestioneInvioMessaggio\";\nimport * as gestioneLayoutChat from \"./functions/gestioneLayoutChat\";\nimport * as gestioneListaStudentiChattato from \"./functions/gestioneListaStudentiChattato\";\nimport * as gestioneLogout from \"./functions/gestioneLogout\";\nimport * as gestioneSelezioneInserzioni from \"./functions/gestioneSelezioneInserzioni\";\nimport * as gestioneSocket from \"./functions/gestioneSocket\";\nimport * as gestioneTipologiaChatSelezionata from \"./functions/gestioneTipologiaChatSelezionata\";\nimport * as gestioneTipologieChat from \"./functions/gestioneTipologieChat\";\nimport * as gestioneToken from \"./functions/gestioneToken\";\nimport * as inizializzazione from \"./functions/inizializzazione\";\nimport * as gestioneInserzione from \"./functions/gestioneInserzione\";\nimport * as nuovaOffertaInserzione from \"./functions/nuovaOffertaInserzione\";\nimport * as utility from \"./functions/utility\";\nimport * as getInserzioniPerTipologia from \"./functions/getInserzioniPerTipologia\";\n\n@Component({\n  selector: \"app-homepagestudente\",\n  templateUrl: \"./homepagestudente.component.html\",\n  styleUrls: [\"./homepagestudente.component.css\"]\n})\nexport class HomepagestudenteComponent implements OnInit {\n\n  //variabile per filtrare i dati delle inserzioni\n  filtraggioInserzioni = { \"nomeLibro\": \"\", \"corsoDiStudi\": \"\", \"universita\": \"\", \"areaGeografica\": \"\", \"venditore\": \"\", \"prezzoAttualeMinimo\": \"\", \"prezzoAttualeMassimo\": \"\" };\n\n  //variabile per memorizzare la nuova offerta\n  nuovaOfferta: Offerta = new Offerta();\n\n  //variabile per accedere allo schema inserzione \n  inserzione: Inserzione = new Inserzione();\n\n  //variabile per accedere allo schema del libro\n  libro: Libro = new Libro();\n\n  //variabile per accedere allo schema dell utente\n  utente: Utente = new Utente();\n\n  //variabile per accedere allo schema dell utente loggato\n  utenteLoggato: Utente = new Utente();\n\n  //variabile per accedere alla lista di inserzioni create\n  inserzioniCreate: Inserzione[] = new Array();\n\n  //variabile per accedere alla lista di libri creati\n  libriCreati: Libro[] = new Array();\n\n  //variabile per accedere alla lista di inserzioni dove l utente attuale ha fatto una proposta che corrisponde a quella attuale\n  inserzioniOfferteFatte: Inserzione[] = new Array();\n\n  //variabile per accedere alla lista di libri nelle inserzioni dove ho fatto le offerte\n  libriOfferte: Libro[] = new Array();\n\n  //variabile per accedere alla lista di inserzioni che l utente ha vinto\n  inserzioniVinte: Inserzione[] = new Array();\n\n  //variabile per accedere alla lista di libri nelle inserzioni che ho vinto\n  libriVinti: Libro[] = new Array();\n\n  //variabile per accedere alla lista di inserzioni in vendita e quindi che non risultano essere nelle due liste precedenti\n  inserzioniInVendita: Inserzione[] = new Array();\n\n  //variabile per accedere alla lista di libri nelle inserzioni in vendita\n  libriInVendita: Libro[] = new Array();\n\n  //variabile per accedere alla lista delle inserzioni partecipate\n  inserzioniPartecipate: Inserzione[] = new Array();\n\n  //variabile per accedere alla lista di libri delle inserzioni partecipate\n  libriPartecipate: Libro[] = new Array();\n\n  //variabile per accedere alla lista delle inserzioni vendute\n  inserzioniVendute: Inserzione[] = new Array();\n\n  //variabile per accedere alla lista di libri delle inserzioni vendute\n  libriVenduti: Libro[] = new Array();\n\n  //variabile per memorizzare la lista di studenti che l utente loggato ha chattato insieme\n  studentiConChat: Utente[] = new Array();\n\n  //variabile per memorizzare i messaggi\n  listaMessaggi: Messaggio[] = new Array();\n\n  //variabile per memorizzare il nome e cognome del destinatario della chat selezionata\n  destinatarioMessaggiChatSelezionata: string = \"\";\n\n  //varibaile per accedere all id del destinatario del messaggio\n  idUtenteDestinazione: number = 0;\n\n  //variabile per memorizzare la lista di persone quando estraggo tutti i messaggi rispetto ad una certa categoria privata pubblica persona ecc\n  listaPersoneMessaggi: Utente[] = new Array();\n\n  //variabile per memorizzare il messaggio d riferimento prima di inviarlo\n  messaggioRiferimento: Messaggio = new Messaggio();\n\n  //variabile per memorizzare il messaggio da inviare\n  messaggioDaInviare: Messaggio = new Messaggio();\n\n  //flag per sapere quale tipo di chat l utente loggato ha selezionato\n  chatSingolaPersona: boolean;\n  chatPrivataInserzione: boolean;\n  chatPubblicaInserzione: boolean;\n\n  //messaggi che possono comparire durante l uso del form di login\n  messaggioErrore = undefined;\n  messaggioConferma = undefined;\n  messaggio = undefined;\n\n  //variabile per memorizzare id persona che l utente sta chattando insieme\n  idPersonaChatAttuale: number;\n\n  //variabile per memorizzare il messaggio appena arrivato tramite il socket\n  messaggioAppenaArrivato: string = \"\";\n\n  //variabile per memorizzare l utente del nuovo messaggio\n  utenteMessaggioAppenaArrvato: string = \"\";\n\n  //variabile per la gestione degli errori\n  dettagliErrore: Errore = new Errore();\n\n  constructor(private ss: SocketioService, private us: PersonaService, private is: InserzioneService, private ls: LibroService, private ms: MessaggioService, private router: Router) { }\n\n  //-------------------------------------------------------------------------------------\n\n  ngOnInit(): void {\n    //recupero i dati dell utente dal token altrimenti bisgona rifare il login\n    this.recuperaDatiUtenteToken();\n  }\n\n  //-----------------------------------------GESTIONE TOKEN--------------------------------------------\n\n  //funzione per recuperare i dati dell utente memorizzato sul token, altrimenti login\n  public recuperaDatiUtenteToken = gestioneToken.recuperaDatiUtenteToken;\n\n  //-----------------------------------------INIZIALIZZAZIONE--------------------------------------------\n\n  //funzione per init \n  public initDati = inizializzazione.initDati;\n\n  //funzione per aggiornare i dati\n  public recuperaDatiAggiornati = inizializzazione.recuperaDatiAggiornati;\n\n  //funzione per inizializzazione variabili\n  public azzeramentoVariabili = inizializzazione.azzeramentoVariabili;\n\n  //-----------------------------------------GESTIONE SOCKET---------------------------------------\n\n  //configurazione socket\n  public configurazioneSocket = gestioneSocket.configurazioneSocket;\n\n  //-----------------------------------------GESTIONE FILTRO--------------------------------------------\n\n  //funzione per vedere se il filtro e attivato o disattivato\n  public verificaFiltro = gestioneFiltro.verificaFiltro;\n\n  //funzione per annullare il filtro\n  public annullaFiltro = gestioneFiltro.annullaFiltro;\n\n  //funzione per filtrare le inserzioni in vendita\n  public filtraInserzioni = gestioneFiltro.filtraInserzioni;\n\n  /*-----------------------------------------OTTENERE LISTA INSERZIONI DIVISE PER TIPOLOGIA--------------------------------------------*/\n\n  //funzione per ottenere tutte le inserzioni create e quelle dove ce una proposta e quelle vinte\n  public getListaInserzioniCreateProposte = getInserzioniPerTipologia.getListaInserzioniCreateProposte;\n\n  //funzione per ottenere tutte le inserzioni che l utente loggato ha partecipato\n  public getListaInserzioniPartecipate = getInserzioniPerTipologia.getListaInserzioniPartecipate;\n\n  //funzione per ottenere tutte le inserzioni in vendita e quindi non scadute\n  public getListaInserzioniInVendita = getInserzioniPerTipologia.getListaInserzioniInVendita;\n\n  //funzione per ottenere tutte le inserzioni vendute\n  public getListaInserzioniVendute = getInserzioniPerTipologia.getListaInserzioniVendute;\n\n  //-------------------------------SELEZIONARE INSERZIONE PER CIASCUNA TIPOLOGIA----------------------------------\n\n  //funzione per settare l inserzione vinta che l utente ha selezionato dall elenco\n  public setInserzioneVintaSelezionata = gestioneSelezioneInserzioni.setInserzioneVintaSelezionata;\n\n  //funzione per settare l inserzione partecipata dall elenco\n  public setInserzionePartecipataSelezionata = gestioneSelezioneInserzioni.setInserzionePartecipataSelezionata;\n\n  //funzione per settare l inserzione creata che l utente ha selezionato dall elenco\n  public setInserzioneCreataSelezionata = gestioneSelezioneInserzioni.setInserzioneCreataSelezionata;\n\n  //funzione per settare l inserzione in vendita che l utente loggato ha premuto per visualizzare i dettagli\n  public setInserzioneInVenditaSelezionata = gestioneSelezioneInserzioni.setInserzioneInVenditaSelezionata;\n\n  //funzione per settare l inserzione venduta che l utente loggato ha premuto per visualizzare i dettagli\n  public setInserzioneVendutaSelezionata = gestioneSelezioneInserzioni.setInserzioneVendutaSelezionata;\n\n  /*----------------------------------INSERIMENTO NUOVA INSERZIONE-------------------------------------*/\n\n  //funzione per inizializzare inserzione e libro in quanto ne devo inserire una nuova e devo azzerare i campi\n  public inizializzaNuovaInserzione = gestioneInserzione.inizializzaNuovaInserzione;\n\n  //funzione per inserire una nuova inserzione\n  public inserisciInserzione = gestioneInserzione.inserisciInserzione;\n\n  //funzione per eliminare un inserzione\n  public eliminaInserzione = gestioneInserzione.eliminaInserzione;\n\n  /*----------------------------------GESTIONE INVIO NUOVO MESSAGGIO-------------------------------------*/\n\n  //funzione per inviare il messaggio\n  public inviaMessaggio = gestioneInvioMessaggio.inviaMessaggio;\n\n  //funzione per impostare l id dell messaggio di riferimento prima di inviarlo\n  public setMessaggioRiferimento = gestioneInvioMessaggio.setMessaggioRiferimento;\n\n  //funzione per ottenere il messaggio di riferimento rispetto ad un messaggio dato in input\n  public getContenutoMessaggioRiferimento = gestioneInvioMessaggio.getContenutoMessaggioRiferimento;\n\n  /*----------------------------------GESTIONE LISTA UTENTI CHE L UTENTE HA CHATTATO INSIEME-------------------------------------*/\n\n  //funzione per selezionare gli utenti che l utente loggato ha chattato ordinato per date decrescenti\n  public getListaUtentiChat = gestioneListaStudentiChattato.getListaUtentiChat;\n\n  /*----------------------------------GESTIONE LAYOUT CHAT MESSAGGI-------------------------------------*/\n\n  //funzione per vedere se in un determinato messaggio l utente loggato sia il mittente\n  public isMittente = gestioneLayoutChat.isMittente;\n\n  //funzione per vedere se in un determinato messaggio l utente loggato sia il destinatario\n  public isDestinatario = gestioneLayoutChat.isDestinatario;\n\n  //funzione per ottenere l utente appartenente alla lista di quelli appartenenti alla chat tramite id\n  public getPersonaNellaChat = gestioneLayoutChat.getPersonaNellaChat;\n\n  /*----------------------------------GESTIONE LOGOUT-------------------------------------*/\n\n  //funzione per effettuare il logout e reindirizzati alla pagina di login\n  public logout = gestioneLogout.logout;\n\n  /*----------------------------------GESTIONE NUOVA OFFERTA INSERZIONE-------------------------------------*/\n\n  //funzione per fare una nuova offerta all inserzione selezionata\n  public nuovaOffertaSelezionata = nuovaOffertaInserzione.nuovaOffertaSelezionata;\n\n  /*----------------------------------GESTIONE BOTTONI CHAT PERSONA, PRIVATA E PUBBLICA-------------------------------------*/\n\n  //funzione per verificare se un utente e gia dentro alla lista\n  public isUtentePresente = gestioneTipologieChat.isUtentePresente;\n\n  //funzione per la lista dei messaggi rispetto ad una certa persona\n  public getListaMessaggiPersona = gestioneTipologieChat.getListaMessaggiPersona;\n\n  //funzione per la lista dei messaggi sulla chat privata presente nell popup dell inserzione\n  public getListaMessaggiInserzioneChatPrivata = gestioneTipologieChat.getListaMessaggiInserzioneChatPrivata;\n\n  //funzione per la lista dei messaggi sulla chat pubblica presente nell popup dell inserzione\n  public getListaMessaggiInserzioneChatPubblica = gestioneTipologieChat.getListaMessaggiInserzioneChatPubblica;\n\n  /*----------------------------------GESTIONE TIPOLOGIA CHAT SELEZIONATA-------------------------------------*/\n\n  //funzione per azzerare i flag delle chat\n  public azzeramentoFlagChat = gestioneTipologiaChatSelezionata.azzeramentoFlagChat;\n\n  //funzione per usare la chat singola persona\n  public setChatSingolaPersona = gestioneTipologiaChatSelezionata.setChatSingolaPersona;\n\n  //funzione per usare la chat privata dell inserzione\n  public setChatPrivataInserzione = gestioneTipologiaChatSelezionata.setChatPrivataInserzione;\n\n  //funzione per usare la chat pubblica dell inserzione\n  public setChatPubblicaInserzione = gestioneTipologiaChatSelezionata.setChatPubblicaInserzione;\n\n  /*----------------------------------UTILITY O MAI USATE-------------------------------------*/\n\n  //funzione per ottenre il messaggio dall id\n  public getMessaggioById = utility.getMessaggioById;\n\n  //funzione per ottenere la lista dei libri associati alle varie inserzioni\n  public getLibriAssociatiInserzioni = utility.getLibriAssociatiInserzioni;\n\n  //funzione per vedere se una data e gia scaduta\n  public isScaduta = utility.isScaduta;\n\n  //funzione per vedere se la lista di utenti è vuota\n  public isVuota = utility.isVuota;\n}\n","<div class=\"container\">\n    <div class=\"row row-cols-1 row-cols-md-3\">\n        <!--card per la creazione di inserzioni-->\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Creazione inserzione\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Vuoi inserire una nuova inserzione?\n                    <br><br><button type=\"button\" (click)=\"inizializzaNuovaInserzione()\" class=\"btn btn-block btn-secondary btn-sm\" data-dismiss=\"modal\" aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#inserimentoinserzione\">Inserisci\n                        inserzione</button>\n                </div>\n            </div>\n        </div>\n        <!--card per la lista di inserzioni create-->\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Lista inserzioni create\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\" *ngFor=\"let l of libriCreati\">\n                        <span *ngFor=\"let i of inserzioniCreate\">\n                            <span *ngIf=\"i.libro==l.idLibro\">\n                                <span class=\"align-middle text-secondary\">Libro: {{l.nome}}</span>\n                        <button type=\"button\" class=\"btn btn-secondary btn-sm float-right\" (click)=\"setInserzioneCreataSelezionata(i.idInserzione)\" data-dismiss=\"modal\" aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#visualizzazioneinserzionecreata\">Dettagli\n                                </button>\n                        </span>\n                        </span>\n\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <!--card per la lista di inserzioni in vendita-->\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Lista inserzioni in vendita\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\" *ngFor=\"let l of libriInVendita\">\n                        <span *ngFor=\"let i of inserzioniInVendita\">\n                            <span *ngIf=\"i.libro==l.idLibro\">\n                                <span class=\"align-middle text-secondary\">Libro: {{l.nome}}</span><button type=\"button\" class=\"btn btn-secondary btn-sm float-right\" (click)=\"setInserzioneInVenditaSelezionata(i.getIdInserzione())\"\n                            data-dismiss=\"modal\" aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#visualizzazioneinserzioneinvendita\">Dettagli</button>\n                        </span>\n                        </span>\n\n                    </li>\n                    <li class=\"list-group-item\">\n                        <button *ngIf=\"verificaFiltro()\" type=\"button\" class=\"btn btn-block btn-secondary btn-sm float-right\" (click)=\"filtraInserzioni()\" data-toggle=\"modal\" data-target=\"#filtrareinserzioni\">Filtra</button>\n                        <button *ngIf=\"!verificaFiltro()\" type=\"button\" class=\"btn btn-block btn-danger btn-sm float-right\" (click)=\"annullaFiltro()\">Annulla\n                            filtro</button>\n                    </li>\n                </ul>\n\n            </div>\n        </div>\n        <!--card per la lista di inserzioni dove l utente loggato ha fatto una proposta-->\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Lista proposte nelle inserzioni\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\" *ngFor=\"let l of libriOfferte\">\n                        <span *ngFor=\"let i of inserzioniOfferteFatte\">\n                            <span *ngIf=\"i.libro==l.idLibro\">\n                                <span class=\"align-middle text-secondary\">Libro {{l.nome}}</span><button type=\"button\" class=\"btn btn-sm float-right\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{i.getPrezzoAttuale()}}€&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\n                        </span>\n                        </span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <!--card per la lista di inserzioni vinte-->\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Lista inserzioni vinte\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\" *ngFor=\"let l of libriVinti\">\n                        <span *ngFor=\"let i of inserzioniVinte\">\n                            <span *ngIf=\"i.libro==l.idLibro\">\n                                <span class=\"align-middle text-secondary\">Libro: {{l.nome}}</span><button type=\"button\" class=\"btn btn-secondary btn-sm float-right\" (click)=\"setInserzioneVintaSelezionata(i.idInserzione)\" data-dismiss=\"modal\"\n                            aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#visualizzazioneinserzionevinta\">Dettagli</button>\n                        </span>\n                        </span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <!--card per la lista di inserzioni partecipate-->\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Lista inserzioni partecipate\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\" *ngFor=\"let l of libriPartecipate\">\n                        <span *ngFor=\"let i of inserzioniPartecipate\">\n                            <span *ngIf=\"i.libro==l.idLibro\">\n                                <span class=\"align-middle text-secondary\">Libro: {{l.nome}}</span><button type=\"button\" class=\"btn btn-secondary btn-sm float-right\" (click)=\"setInserzionePartecipataSelezionata(i.idInserzione)\"\n                            data-dismiss=\"modal\" aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#visualizzazioneinserzionepartecipata\">Dettagli</button>\n                        </span>\n                        </span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <!--card per la lista di inserzioni vendute-->\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Lista inserzioni vendute\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <li class=\"list-group-item\" *ngFor=\"let l of libriVenduti\">\n                        <span *ngFor=\"let i of inserzioniVendute\">\n                            <span *ngIf=\"i.libro==l.idLibro\">\n                                <span class=\"align-middle text-secondary\">Libro: {{l.nome}}</span>\n                        <button type=\"button\" class=\"btn btn-secondary btn-sm float-right\" (click)=\"setInserzioneVendutaSelezionata(i.idInserzione)\" data-dismiss=\"modal\" aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#visualizzazioneinserzionevenduta\">Dettagli\n                                </button>\n                        </span>\n                        </span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <!--card per la lista delle chat-->\n        <div class=\"col-md-4\">\n            <div class=\"card border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header text-center sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Lista chat\n                </div>\n                <ul class=\"list-group list-group-flush overflow-auto\">\n                    <div *ngIf=\"utenteMessaggioAppenaArrvato\" id=\"alertnuovomessaggio\" class=\"alert alert-secondary alert-dismissible fade show mt-3 ml-3 mr-3\" role=\"alert\">\n                        <strong>Nuovo messaggio da: </strong>{{utenteMessaggioAppenaArrvato}}<br>\n                        <strong>Contenuto: </strong>{{messaggioAppenaArrivato}}\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"utenteMessaggioAppenaArrvato=''\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <li class=\"list-group-item\" *ngFor=\"let s of studentiConChat\">\n                        <span class=\"align-middle text-secondary\">{{s.getNome()}} {{s.getCognome()}}</span><button type=\"button\" class=\"btn btn-secondary btn-sm float-right\" (click)=\"setChatSingolaPersona();getListaMessaggiPersona(s.getIdUser())\" data-dismiss=\"modal\"\n                            aria-label=\"Close\" data-toggle=\"modal\" data-target=\"#vistachat\">Chat</button>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <!--card per l aggiornamento dei dati-->\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Aggiornamento dati\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Vuoi recuperare i dati più aggiornati dal sistema?\n                    <br><br><button type=\"button\" (click)=\"recuperaDatiAggiornati()\" class=\"btn btn-block btn-secondary btn-sm\">Aggiorna dati</button>\n                </div>\n            </div>\n        </div>\n        <!--card per il logout-->\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Logout\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Sei sicuro di voler far il logout? Sarai obbligato a reinserire le credenziali\n                    <br><br><button type=\"button\" class=\"btn btn-secondary btn-sm btn-block\" (click)=\"logout();\" (submit)=\"logout();\">Effettua logout</button>\n                </div>\n            </div>\n        </div>\n        <!--card per la gestione degli errori-->\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Gestione errori\n                </div>\n                <div class=\"card-body\">\n                    <div *ngIf=\"dettagliErrore.getMessage()\" id=\"alertnuovoerrore\" class=\"alert alert-secondary alert-dismissible fade show mt-3 ml-3 mr-3\" role=\"alert\">\n                        <strong>Messaggio: </strong>{{dettagliErrore.getMessage()}}<br>\n                        <strong>Reason: </strong>{{dettagliErrore.getReason()}}\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dettagliErrore.setMessage('');dettagliErrore.setReason('')\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!--card per mantenere il layout ordinato-->\n        <div class=\"col-md-4\">\n            <div class=\"card text-center border border-secondary altezza-card mt-3\" style=\"width: 100%;\">\n                <div class=\"card-header sfondo-grigio-chiaro testo-bianco testo-grassetto\">\n                    Implementazione futura\n                </div>\n                <div class=\"card-body text-secondary\">\n                    Funzionalita extra\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br>\n\n\n\n\n<!--modal per l inserimento di una singola inserzione-->\n<div class=\"modal fade\" id=\"inserimentoinserzione\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Inserimento inserzione</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <form action=\"#\" method=\"GET\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Libro\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"libro\" type=\"text\" #inputLibro=\"ngModel\" [(ngModel)]=\"libro.nome\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"corsodistudi\" type=\"text\" #inputCorsoDiStudi=\"ngModel\" [(ngModel)]=\"libro.corsoDiStudi\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"universita\" type=\"text\" #inputUniversita=\"ngModel\" [(ngModel)]=\"libro.universita\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Autore\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"autore\" type=\"text\" #inputAutore=\"ngModel\" [(ngModel)]=\"libro.autore\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Anno di pubblicazione\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"annodipubblicazione\" type=\"number\" #inputAnnoDiPubblicazione=\"ngModel\" [(ngModel)]=\"libro.annoPubblicazione\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Edizione\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"edizione\" type=\"number\" #inputEdizione=\"ngModel\" [(ngModel)]=\"libro.edizione\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Isbn\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"isbn\" type=\"text\" #inputIsbn=\"ngModel\" [(ngModel)]=\"libro.isbn\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data inizio\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"datainizio\" type=\"date\" #inputDataInizio=\"ngModel\" [(ngModel)]=\"inserzione.dataInizio\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data fine\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"datafine\" type=\"date\" #inputDataFine=\"ngModel\" [(ngModel)]=\"inserzione.dataFine\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo iniziale\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"prezzoiniziale\" type=\"number\" #inputPrezzoIniziale=\"ngModel\" [(ngModel)]=\"inserzione.prezzoIniziale\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo riserva\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"prezzoriserva\" type=\"number\" #inputPrezzoRiserva=\"ngModel\" [(ngModel)]=\"inserzione.prezzoRiserva\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div *ngIf=\"messaggioErrore\" class=\"alert alert-danger mt-3\" role=\"alert\">\n                        {{messaggioErrore}}\n                    </div>\n                    <div *ngIf=\"messaggioConferma\" class=\"alert alert-success mt-3\" role=\"alert\">\n                        {{messaggioConferma}}\n                    </div>\n                    <div *ngIf=\"messaggio\" class=\"alert alert-primary mt-3\" role=\"alert\">\n                        {{messaggio}}\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Annulla</button>\n                    <button type=\"submit\" class=\"btn btn-success\" (click)=\"inserisciInserzione();\" (submit)=\"inserisciInserzione();\" data-dismiss=\"modal\" aria-label=\"Close\">Inserisci</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!--modal per filtrare le inserzioni-->\n<div class=\"modal fade\" id=\"filtrareinserzioni\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Filtraggio inserzione</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <form action=\"#\" method=\"GET\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Nome libro\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"libro\" type=\"text\" #inputNomeLibro=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.nomeLibro\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\" required>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"corsodistudi\" type=\"text\" #inputCorsoDiStudi=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.corsoDiStudi\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"universita\" type=\"text\" #inputUniversita=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.universita\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Area gerografica\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"areaGeografica\" type=\"text\" #inputAreaGeografica=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.areaGeografica\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Venditore\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"venditore\" type=\"text\" #inputVenditore=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.venditore\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale minimo\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"prezzoMinimo\" type=\"number\" #inputPrezzoMinimo=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.prezzoAttualeMinimo\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-3 mt-3 text-center\">\n                            <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale massimo\">\n                        </div>\n                        <div class=\"col-md-9 mt-3 text-center\">\n                            <input name=\"prezzoMassimo\" type=\"number\" #inputPrezzoMassimo=\"ngModel\" [(ngModel)]=\"filtraggioInserzioni.prezzoAttualeMassimo\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Annulla</button>\n                    <button type=\"submit\" class=\"btn btn-success\" (click)=\"filtraInserzioni();\" (submit)=\"filtraInserzioni();\" data-dismiss=\"modal\" aria-label=\"Close\">Filtra</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n<!--modal per la visualizzazione di una singola inserzione creata e quindi con tutti i dettagli visibili al creatore-->\n<div class=\"modal fade\" id=\"visualizzazioneinserzionecreata\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Visualizzazione inserzione creata</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div *ngIf=\"inserzione && utente && libro\" class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Libro\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"libro\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.nome}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"corsodistudi\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getCorsoDiStudi()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"universita\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getUniversita()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Autore\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"autore\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAutore()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Anno di pubblicazione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"annodipubblicazione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAnnoPubblicazione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Edizione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"edizione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getEdizione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Isbn\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"isbn\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getIsbn()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data inizio\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datainizio\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataInizio}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data fine\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datafine\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataFine}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo iniziale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoiniziale\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.getPrezzoIniziale()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoattuale\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.getPrezzoAttuale()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo riserva\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoriserva\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.getPrezzoRiserva()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Utente prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"utenteprezzoattuale\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{utente.getUsername()}}\" disabled>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Esci</button>\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#vistachat\" (click)=\"setChatPubblicaInserzione();getListaMessaggiInserzioneChatPubblica()\">Chat\n                    pubblica</button>\n                <button *ngIf=\"inserzione&&inserzione.isScaduta()&&!inserzione.isVintaGenerico()\" type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"eliminaInserzione()\">Elimina</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--modal per la visualizzazione di una singola inserzione venduta e quindi con tutti i dettagli visibili al creatore-->\n<div class=\"modal fade\" id=\"visualizzazioneinserzionevenduta\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Visualizzazione inserzione venduta</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div *ngIf=\"inserzione && utente && libro\" class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Libro\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"libro\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.nome}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"corsodistudi\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getCorsoDiStudi()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"universita\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getUniversita()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Autore\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"autore\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAutore()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Anno di pubblicazione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"annodipubblicazione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAnnoPubblicazione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Edizione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"edizione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getEdizione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Isbn\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"isbn\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getIsbn()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data inizio\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datainizio\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataInizio}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data fine\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datafine\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataFine}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo iniziale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoiniziale\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.getPrezzoIniziale()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoattuale\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.getPrezzoAttuale()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo riserva\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoriserva\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.getPrezzoRiserva()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Utente prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"utenteprezzoattuale\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{utente.getUsername()}}\" disabled>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Esci</button>\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#vistachat\" (click)=\"setChatPubblicaInserzione();getListaMessaggiInserzioneChatPubblica()\">Chat\n                    pubblica</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--modal per la visualizzazione di una singola inserzione in vendita e quindi non visibili tutti i parametri al cliente-->\n<div class=\"modal fade\" id=\"visualizzazioneinserzioneinvendita\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Visualizzazione inserzione in vendita</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div *ngIf=\"inserzione\" class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Utente\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"utente\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{utente.getUsername()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Libro\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"libro\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getNome()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"corsodistudi\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getCorsoDiStudi()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"universita\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getUniversita()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Autore\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"autore\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAutore()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Anno di pubblicazione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"annodipubblicazione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAnnoPubblicazione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Edizione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"edizione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getEdizione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Isbn\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"isbn\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getIsbn()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data inizio\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datainizio\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataInizio}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data fine\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datafine\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataFine}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoattuale\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.getPrezzoAttuale()}}\" disabled>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Esci</button>\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#vistachat\" (click)=\"setChatPrivataInserzione();getListaMessaggiInserzioneChatPrivata()\">Chat\n                    privata</button>\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#vistachat\" (click)=\"setChatPubblicaInserzione();getListaMessaggiInserzioneChatPubblica()\">Chat\n                    pubblica</button>\n                <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#inserimentopropostainserzione\">Proposta</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--modal per la visualizzazione di una singola inserzione partecipata e quindi non visibili tutti i parametri al cliente-->\n<div class=\"modal fade\" id=\"visualizzazioneinserzionepartecipata\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Visualizzazione inserzione partecipata</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div *ngIf=\"inserzione\" class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Utente\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"utente\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{utente.getUsername()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Libro\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"libro\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getNome()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"corsodistudi\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getCorsoDiStudi()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"universita\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getUniversita()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Autore\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"autore\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAutore()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Anno di pubblicazione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"annodipubblicazione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAnnoPubblicazione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Edizione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"edizione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getEdizione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Isbn\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"isbn\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getIsbn()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data inizio\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datainizio\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataInizio}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data fine\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datafine\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataFine}}\" disabled>\n                    </div>\n                </div>\n                <div *ngIf=\"inserzione&&inserzione.isScaduta()\" class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo di riserva\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoRiserva\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.prezzoRiserva}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoattuale\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.prezzoAttuale}}\" disabled>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" aria-label=\"Close\">Esci</button>\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#vistachat\" (click)=\"setChatPrivataInserzione();getListaMessaggiInserzioneChatPrivata()\">Chat\n                    privata</button>\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#vistachat\" (click)=\"setChatPubblicaInserzione();getListaMessaggiInserzioneChatPubblica()\">Chat\n                    pubblica</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--modal per la visualizzazione di una singola inserzione vinta e quindi non visibili tutti i parametri al cliente-->\n<div class=\"modal fade\" id=\"visualizzazioneinserzionevinta\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Visualizzazione inserzione vinta</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div *ngIf=\"inserzione\" class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Utente\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"utente\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{utente.getUsername()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Libro\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"libro\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getNome()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Corso di studi\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"corsodistudi\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getCorsoDiStudi()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Universita\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"universita\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getUniversita()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Autore\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"autore\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAutore()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Anno di pubblicazione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"annodipubblicazione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getAnnoPubblicazione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Edizione\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"edizione\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getEdizione()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Isbn\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"isbn\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{libro.getIsbn()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data inizio\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datainizio\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataInizio}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Data fine\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"datafine\" type=\"date\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.dataFine}}\" disabled>\n                    </div>\n                </div>\n                <div *ngIf=\"inserzione&&inserzione.isScaduta()\" class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo di riserva\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoRiserva\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.prezzoRiserva}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Prezzo attuale\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"prezzoattuale\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.prezzoAttuale}}\" disabled>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" aria-label=\"Close\">Esci</button>\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#vistachat\" (click)=\"setChatPrivataInserzione();getListaMessaggiInserzioneChatPrivata()\">Chat\n                    privata</button>\n                <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#vistachat\" (click)=\"setChatPubblicaInserzione();getListaMessaggiInserzioneChatPubblica()\">Chat\n                    pubblica</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--modal per l inserimento di una proposta rispetto ad una determinata inserzione-->\n<div class=\"modal fade\" id=\"inserimentopropostainserzione\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Inserimento proposta</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div *ngIf=\"inserzione\" class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Ultima proposta\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"ultimaproposta\" type=\"text\" class=\"form-control-plaintext text-center border border-secondary\" value=\"{{inserzione.getPrezzoAttuale()}}\" disabled>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-3 mt-3 text-center\">\n                        <input type=\"text\" readonly class=\"form-control-plaintext text-center border border-light\" value=\"Nuova proposta\">\n                    </div>\n                    <div class=\"col-md-9 mt-3 text-center\">\n                        <input name=\"nuovaofferta\" #inputNuovaOfferta=\"ngModel\" [(ngModel)]=\"nuovaOfferta.nuovaOfferta\" type=\"number\" class=\"form-control-plaintext text-center border border-secondary\" value=\"\">\n                    </div>\n                </div>\n                <div *ngIf=\"messaggioErrore\" class=\"alert alert-danger mt-3\" role=\"alert\">\n                    {{messaggioErrore}}\n                </div>\n                <div *ngIf=\"messaggioConferma\" class=\"alert alert-success mt-3\" role=\"alert\">\n                    {{messaggioConferma}}\n                </div>\n                <div *ngIf=\"messaggio\" class=\"alert alert-primary mt-3\" role=\"alert\">\n                    {{messaggio}}\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" onclick=\"$('#inserimentopropostainserzione').modal('hide');$('#visualizzazioneinserzioneinvendita').modal('show');\">Annulla</button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"nuovaOffertaSelezionata()\" onclick=\"$('#inserimentopropostainserzione').modal('hide');$('#visualizzazioneinserzioneinvendita').modal('hide');\">Invia\n                    proposta</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--modal per la vista delle chat-->\n<div class=\"modal fade\" id=\"vistachat\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header text-center\">\n                <h5 class=\"modal-title text\">Chat con {{destinatarioMessaggiChatSelezionata}}</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"azzeramentoFlagChat()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\" *ngFor=\"let lm of listaMessaggi\">\n                    <div *ngIf=\"isDestinatario(lm)\" class=\"col-1\"></div>\n                    <div *ngIf=\"isDestinatario(lm)\" class=\"col-7 mt-3 alert float-left alert-secondary rounded-lg border border-secondary\" role=\"alert\">\n                        <div *ngIf=\"getContenutoMessaggioRiferimento(lm)\" style=\"width: 100%;\" class=\"mt-3 alert float-left alert-light rounded-lg border border-secondary\" role=\"alert\">\n                            {{getContenutoMessaggioRiferimento(lm).getContenuto()}}\n                        </div>\n                        <br *ngIf=\"getContenutoMessaggioRiferimento(lm)\">\n                        <div *ngIf=\"getPersonaNellaChat(lm.getMittente())\">\n                            [{{lm.getDataFormatoStringa()}} {{lm.getOraFormatoStringa()}} {{getPersonaNellaChat(lm.getMittente()).getNome()}}]: {{lm.getContenuto()}}\n                        </div>\n                    </div>\n                    <div *ngIf=\"isDestinatario(lm)\" class=\"col-4 mt-3 alert float-left rounded-lg\" role=\"alert\">\n                        <div>\n                            <img onclick=\"$('#alertmessaggioriferimento').show()\" (click)=\"setMessaggioRiferimento(lm.getIdMessaggio())\" style=\"vertical-align: middle;\" src=\"./assets/img/freccia.png\" width=\"30\" height=\"40\">\n                        </div>\n                    </div>\n                    <div *ngIf=\"isMittente(lm)\" class=\"col-4 mt-3 alert text-right rounded-lg\" role=\"alert\">\n                        <div>\n                            <img onclick=\"$('#alertmessaggioriferimento').show()\" (click)=\"setMessaggioRiferimento(lm.getIdMessaggio())\" style=\"vertical-align: middle;\" src=\"./assets/img/freccia.png\" width=\"30\" height=\"40\">\n                        </div>\n                    </div>\n                    <div *ngIf=\"isMittente(lm)\" class=\"col-7 mt-3 alert float-left alert-secondary rounded-lg border border-secondary\" role=\"alert\">\n                        <div *ngIf=\"getContenutoMessaggioRiferimento(lm)\" style=\"width: 100%;\" class=\"mt-3 alert float-left alert-light rounded-lg border border-secondary\" role=\"alert\">\n                            {{getContenutoMessaggioRiferimento(lm).getContenuto()}}\n                        </div>\n                        <br *ngIf=\"getContenutoMessaggioRiferimento(lm)\">\n                        <div>\n                            [{{lm.getDataFormatoStringa()}} {{lm.getOraFormatoStringa()}} Io]: {{lm.getContenuto()}}\n                        </div>\n                    </div>\n                    <div *ngIf=\"isMittente(lm)\" class=\"col-1\"></div>\n                </div>\n                <div class=\"row mt-3\" id=\"textinviomess\">\n                    <div class=\"col-1\"></div>\n                    <div class=\"col-10\">\n                        <div class=\"row border border-secondary rounded-lg\">\n                            <div class=\"col-10\">\n                                <div id=\"alertmessaggioriferimento\" class=\"mt-3 alert float-left alert-secondary rounded-lg\" role=\"alert\" style=\"width: 100%; display: none;\">\n                                    <button type=\"button\" class=\"close\" (click)=\"setMessaggioRiferimento(0)\" onclick=\"$('#alertmessaggioriferimento').hide()\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>{{messaggioRiferimento.getContenuto()}}\n                                </div>\n                                <textarea id=\"inputMessaggio\" rows=\"4\" class=\"form-control\" style=\"width: 100%;\" #inputMessaggio=\"ngModel\" [(ngModel)]=\"messaggioDaInviare.contenuto\" placeholder=\"Inserisci il tuo messaggio...\"></textarea>\n                            </div>\n                            <div class=\"col-2\">\n                                <button type=\"button\" style=\"width: 100%;\" class=\"mt-3 btn btn-secondary\" (click)=\"inviaMessaggio();setMessaggioRiferimento(0)\" onclick=\"$('#alertmessaggioriferimento').hide(); document.getElementById('inputMessaggio').value='';\">Invia</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-1\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Inserzione } from \"src/app/classi/inserzione\";\r\n\r\n//funzione per ottenere tutte le inserzioni create e quelle dove ce una proposta e quelle vinte\r\nexport function getListaInserzioniCreateProposte(): void {\r\n    //resetto la lista delle varie inserzioni\r\n    this.inserzioniCreate = [];\r\n    this.inserzioniOfferteFatte = [];\r\n    this.inserzioniVinte = [];\r\n    //resetto la lista dei vari libri\r\n    this.libriCreati = [];\r\n    this.libriOfferte = [];\r\n    this.libriVinti = [];\r\n    //ottengo la lista delle inserzioni e poi guardo io dove metterle\r\n    this.is.getListaInserzioniCreateProposte().subscribe((data) => {\r\n        //dato che mi resistuisce le inserzioni dove l utente attuale le ha create OPPURE ha fatto un offerta le devo analizzare\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //se l inserzione attuale e stata creata dall utente attuale\r\n            if (data.inserzioni[i].utente === this.utenteLoggato.getIdUser()) {\r\n                this.inserzioniCreate.push(new Inserzione(data.inserzioni[i]));\r\n                //inserisco il libro creato nella lista relativa\r\n                this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                    this.libriCreati.push(data1.libri[0]);\r\n                }, (err) => {\r\n                    //errore estrazione libro dell inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n                });\r\n            }\r\n            //se l inserzione attuale ha la proposta del prezzo attuale dall utente loggato che e diverso dal creatore e se non e scaduta\r\n            else if (data.inserzioni[i].utente !== this.utenteLoggato.getIdUser() && data.inserzioni[i].utentePrezzoAttuale === this.utenteLoggato.getIdUser() && !(new Inserzione(data.inserzioni[i]).isScaduta())) {\r\n                this.inserzioniOfferteFatte.push(new Inserzione(data.inserzioni[i]));\r\n                //inserisco il libro con l offerta fatta nella lista relativa\r\n                this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                    this.libriOfferte.push(data1.libri[0]);\r\n                }, (err) => {\r\n                    //errore estrazione libro dell inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n                });\r\n            }\r\n            //se l inserzione attuale ha la proposta del prezzo attuale dall utente loggato che e diverso dal creatore e se e scaduta vuol dire che e stata vinta\r\n            else if (new Inserzione(data.inserzioni[i]).isVinta(this.utenteLoggato.getIdUser())) {\r\n                this.inserzioniVinte.push(new Inserzione(data.inserzioni[i]));\r\n                //inserisco il libro vinto nella lista relativa\r\n                this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                    this.libriVinti.push(data1.libri[0]);\r\n                }, (err) => {\r\n                    //errore estrazione libro dell inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n                });\r\n            }\r\n        }\r\n    }, (err) => {\r\n        //errore estrazione inserzioni\r\n        this.dettagliErrore.setMessage(\"Errore estrazione inserzioni\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore estrazione inserzioni \" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per ottenere tutte le inserzioni che l utente loggato ha partecipato\r\nexport function getListaInserzioniPartecipate(): void {\r\n    //resetto la lista delle varie inserzioni\r\n    this.inserzioniPartecipate = [];\r\n    //resetto la lista dei vari libri\r\n    this.libriPartecipate = [];\r\n    //ottengo la lista degli id delle inserzioni che ha partecipato l utente loggato\r\n    this.us.getUtenteById(this.utenteLoggato.getIdUser()).subscribe((data) => {\r\n        //estraggo gli indici delle inserzioni che ha partecipato l utente loggato\r\n        var listaIdInserzioniPartecipate = new Array();\r\n        for (let i = 0; i < data.utenti[0].astePartecipate.toString().split(',').length; ++i) {\r\n            listaIdInserzioniPartecipate.push(Number(data.utenti[0].astePartecipate.toString().split(',')[i]));\r\n        }\r\n        //ottengo la lista delle inserzioni dall id precedentemente estratto\r\n        this.is.getListaInserzioniPartecipate(listaIdInserzioniPartecipate).subscribe((data) => {\r\n            //per tutte le inserzioni le inserisco nella lista giusta\r\n            for (var i = 0; i < data.inserzioni.length; ++i) {\r\n                //inserisco l inserzione nella lista giusta\r\n                this.inserzioniPartecipate.push(new Inserzione(data.inserzioni[i]));\r\n                //inserisco il libro in vendita nella lista relativa\r\n                this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                    this.libriPartecipate.push(data1.libri[0]);\r\n                }, (err) => {\r\n                    //errore estrazione libro dell inserzione\r\n                    this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n                });\r\n            }\r\n        }, (err) => {\r\n            //errore estrazione lista inserzioni\r\n            this.dettagliErrore.setMessage(\"Errore estrazione lista inserzioni\");\r\n            this.dettagliErrore.setReason(JSON.stringify(err));\r\n            console.log(\"Errore estrazione lista inserzioni \" + JSON.stringify(err));\r\n        });\r\n    }, (err) => {\r\n        //errore estrazione lista id inserzioni partecipate\r\n        this.dettagliErrore.setMessage(\"Errore estrazione lista id inserzioni partecipate\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore estrazione lista id inserzioni partecipate \" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per ottenere tutte le inserzioni in vendita e quindi non scadute\r\nexport function getListaInserzioniInVendita(): void {\r\n    //resetto la lista delle varie inserzioni\r\n    this.inserzioniInVendita = [];\r\n    //resetto la lista dei vari libri\r\n    this.libriInVendita = [];\r\n    //ottengo la lista delle inserzioni in vendita\r\n    this.is.getListaInserzioniInVendita().subscribe((data) => {\r\n        //mi resistuisce tutte le inserzioni perche faccio tramite controllo lato client se e stata vinta oppure se e in vendita rispettando certi termini\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //se l inserzione attuale non e stata creata dall utente attuale\r\n            if (data.inserzioni[i].utente !== this.utenteLoggato.getIdUser()) {\r\n                //verifico inoltre che l utente non abbia gia fatto una proposta perche altrimenti viene fuori nella sezione proposte\r\n                if (data.inserzioni[i].utentePrezzoAttuale !== this.utenteLoggato.getIdUser()) {\r\n                    //se non e ancora scaduta\r\n                    if (!((new Inserzione(data.inserzioni[i])).isScaduta()) && new Inserzione(data.inserzioni[i]).getDataInizio() <= new Date()) {\r\n                        //inserisco l inserzione nella lista giusta\r\n                        this.inserzioniInVendita.push(new Inserzione(data.inserzioni[i]));\r\n                        //inserisco il libro in vendita nella lista relativa\r\n                        this.ls.getLibroById(data.inserzioni[i].libro).subscribe((data1) => {\r\n                            this.libriInVendita.push(data1.libri[0]);\r\n                        }, (err) => {\r\n                            //errore estrazione libro dell inserzione\r\n                            this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                            this.dettagliErrore.setReason(JSON.stringify(err));\r\n                            console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, (err) => {\r\n        //errore estrazione inserzioni in vendita\r\n        this.dettagliErrore.setMessage(\"Errore estrazione inserzioni in vendita\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore estrazione inserzioni in vendita \" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per ottenere tutte le inserzioni vendute\r\nexport function getListaInserzioniVendute(): void {\r\n    //resetto la lista delle varie inserzioni\r\n    this.inserzioniVendute = [];\r\n    //resetto la lista dei vari libri\r\n    this.libriVenduti = [];\r\n    //ottengo la lista delle inserzioni create\r\n    this.is.getListaInserzioniCreateProposte().subscribe((data) => {\r\n        //scorro le varie inserzioni\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //se l inserzione attuale è stata creata dall utente loggato\r\n            if (data.inserzioni[i].utente === this.utenteLoggato.getIdUser()) {\r\n                //variabile temporanea per creare l oggetto inserzione per sfruttare alcune funzioni\r\n                var inserzioneTemp: Inserzione = new Inserzione(data.inserzioni[i]);\r\n                //guardo se l inserzione e stata venduta\r\n                if (inserzioneTemp.IsVenduta(this.utenteLoggato.getIdUser())) {\r\n                    this.inserzioniVendute.push(inserzioneTemp);\r\n                    //inserisco il libro venduto nella lista relativa\r\n                    this.ls.getLibroById(inserzioneTemp.getLibro()).subscribe((data1) => {\r\n                        this.libriVenduti.push(data1.libri[0]);\r\n                    }, (err) => {\r\n                        //errore estrazione libro dell inserzione\r\n                        this.dettagliErrore.setMessage(\"Errore estrazione libro dell inserzione\");\r\n                        this.dettagliErrore.setReason(JSON.stringify(err));\r\n                        console.log(\"Errore estrazione libro dell inserzione \" + JSON.stringify(err));\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }, (err) => {\r\n        //errore estrazione inserzioni create\r\n        this.dettagliErrore.setMessage(\"Errore estrazione inserzioni create\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore estrazione inserzioni create \" + JSON.stringify(err));\r\n    });\r\n}","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { PersonaService } from \"../../servizi/persona.service\";\n\nimport { Utente } from \"../../classi/user\";\n\n@Component({\n  selector: \"app-passworddimenticata\",\n  templateUrl: \"./passworddimenticata.component.html\",\n  styleUrls: [\"./passworddimenticata.component.css\"]\n})\nexport class PassworddimenticataComponent implements OnInit {\n\n  //variabile per prelevare i dati dal form sfruttando oggetto utente\n  u: Utente = new Utente();\n\n  //eventuali messaggi da stampare\n  messaggioErrore = undefined;\n  messaggioConferma = undefined;\n  messaggio = undefined;\n\n  constructor(private us: PersonaService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  //funzione per resettare la password\n  public resettaPassword(): void {\n    this.us.resettaPassword(this.u).subscribe((data) => {\n      this.messaggioErrore = undefined;\n      this.messaggioConferma = \"Password resettata\";\n      this.messaggio = undefined;\n      //this.router.navigate([\"/\"]);\n    }, (err) => {\n      //errore resettare password\n      this.messaggioErrore = \"Errore resettare password \" + JSON.stringify(err.error.message);\n      this.messaggioConferma = undefined;\n      this.messaggio = undefined;\n    });\n  }\n\n}\n","<div class=\"container mt-3\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h2>\n                <p class=\"card-title paragrafo-centrato text-secondary\">Recupera password</p>\n            </h2>\n            <br>\n            <form>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"email\" name=\"email\" #inputEmail=\"ngModel\" [(ngModel)]=\"u.email\" class=\"form-control sfondo-grigio\" placeholder=\"Email\" value=\"\" required>\n                </div>\n                <div [hidden]=\"inputEmail.valid||inputEmail.pristine\" class=\"alert alert-danger\">\n                    Email non valida\n                </div>\n                <div *ngIf=\"messaggioErrore\" class=\"alert alert-danger\" role=\"alert\">\n                    {{messaggioErrore}}\n                </div>\n                <div *ngIf=\"messaggioConferma\" class=\"alert alert-success\" role=\"alert\">\n                    {{messaggioConferma}}\n                </div>\n                <div *ngIf=\"messaggio\" class=\"alert alert-primary\" role=\"alert\">\n                    {{messaggio}}\n                </div>\n                <button type=\"button\" [disabled]=\"!inputEmail.valid\" class=\" btn btn-lg btn-block\n                    sfondo-grigio-chiaro\" (click)=\"resettaPassword();\" (submit)=\"resettaPassword();\">Recupera Password</button>\n            </form><br>\n            <div class=\"paragrafo-centrato testo-grigio\">\n                Non hai ancora un account? <a routerLink=\"/registrazione\">Registrati</a><br> Hai gia un account? <a routerLink=\"/login\">Accedi</a>\n            </div>\n        </div>\n    </div>\n</div>","import { Messaggio } from \"src/app/classi/messaggio\";\r\n\r\n//funzione per inviare il messaggio\r\nexport function inviaMessaggio(): void {\r\n    //imposto i campi del nuovo messaggio\r\n    this.messaggioDaInviare.setDestinatario(this.idUtenteDestinazione);\r\n    this.messaggioDaInviare.setMittente(this.utenteLoggato.getIdUser());\r\n    this.messaggioDaInviare.setData(new Date());\r\n    this.messaggioDaInviare.setMessaggioRiferimento(this.messaggioRiferimento.getIdMessaggio());\r\n    this.messaggioDaInviare.setOggetto(\"vuoto\");\r\n    //verifico se sono sulla chat privata con una persona\r\n    if (this.chatSingolaPersona) {\r\n        this.messaggioDaInviare.setIdInserzione(this.messaggioRiferimento.getIdInserzione());\r\n    }\r\n    //verifico se e una chat privata dell inserzione\r\n    else if (this.chatPrivataInserzione) {\r\n        this.messaggioDaInviare.setIdInserzione(this.inserzione.getIdInserzione());\r\n    }\r\n    //verifico se e una chat pubblica dell inserzione\r\n    else if (this.chatPubblicaInserzione) {\r\n        this.messaggioDaInviare.setIdInserzione(this.inserzione.getIdInserzione());\r\n    }\r\n    //invio il messaggio\r\n    this.ms.inviaMessaggio(this.messaggioDaInviare).subscribe((data) => {\r\n        //inizializzazione\r\n        this.messaggioRiferimento.setIdMessaggio(0);\r\n        this.messaggioRiferimento.setContenuto(\"\");\r\n        this.messaggioRiferimento.setIdInserzione(0);\r\n    }, (err) => {\r\n        //errore invio messaggio\r\n        this.dettagliErrore.setMessage(\"Errore inviare il messaggio\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore inviare il messaggio: \" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per impostare l id dell messaggio di riferimento prima di inviarlo\r\nexport function setMessaggioRiferimento(idMessaggio: number): void {\r\n    //scorro la lista di messaggi\r\n    for (let i = 0; i < this.listaMessaggi.length; ++i) {\r\n        //se l id coincide\r\n        if (idMessaggio === this.listaMessaggi[i].getIdMessaggio()) {\r\n            //mi salvo i dati del messaggio trovato\r\n            this.messaggioRiferimento.setIdMessaggio(this.listaMessaggi[i].getIdMessaggio());\r\n            this.messaggioRiferimento.setContenuto(this.listaMessaggi[i].getContenuto());\r\n            this.messaggioRiferimento.setIdInserzione((typeof (this.listaMessaggi[i].getIdInserzione()) !== \"undefined\") ? (this.listaMessaggi[i].getIdInserzione()) : (0));\r\n            return;\r\n        }\r\n    }\r\n    //azzero i campi perche non uso il riferimento\r\n    this.messaggioRiferimento.setIdMessaggio(0);\r\n    this.messaggioRiferimento.setContenuto(\"\");\r\n    this.messaggioRiferimento.setIdInserzione(0);\r\n}\r\n\r\n//funzione per ottenere il messaggio di riferimento rispetto ad un messaggio dato in input\r\nexport function getContenutoMessaggioRiferimento(messaggio: Messaggio): Messaggio {\r\n    //controllo di avere un messaggio valido in input\r\n    if (messaggio) {\r\n        //scorro i messaggi in quanto il messaggio di riferimento fa parte della stessa tipologia di messaggi che avevo estratto precedentemente\r\n        for (let i = 0; i < this.listaMessaggi.length; ++i) {\r\n            //se l id di riferimento corrisponde\r\n            if (messaggio.getMessaggioRiferimento() === this.listaMessaggi[i].getIdMessaggio()) {\r\n                return this.listaMessaggi[i];\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}","import { Messaggio } from \"src/app/classi/messaggio\";\r\nimport { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per vedere se in un determinato messaggio l utente loggato sia il mittente\r\nexport function isMittente(messaggio: Messaggio): boolean {\r\n    //verifico che il messaggio sia valido\r\n    if (messaggio) {\r\n        //verifico che il mittente sia l utente loggato\r\n        if (messaggio.getMittente() === this.utenteLoggato.getIdUser()) {\r\n            //restituisco vero\r\n            return true;\r\n        }\r\n    }\r\n    //altrimenti errore e restituisco falso\r\n    return false;\r\n}\r\n\r\n//funzione per vedere se in un determinato messaggio l utente loggato sia il destinatario\r\nexport function isDestinatario(messaggio: Messaggio): boolean {\r\n    //verifico che il messaggio sia valido\r\n    if (messaggio) {\r\n        //verifico che il destinatario sia l utente loggato\r\n        if ((messaggio.getDestinatario() === this.utenteLoggato.getIdUser()) || (messaggio.getDestinatario() === 0 && messaggio.getMittente() !== this.utenteLoggato.getIdUser())) {\r\n            //restituisco vero\r\n            return true;\r\n        }\r\n    }\r\n    //altrimenti errore e restituisco falso\r\n    return false;\r\n}\r\n\r\n//funzione per ottenere l utente appartenente alla lista di quelli appartenenti alla chat tramite id\r\nexport function getPersonaNellaChat(idUtente: number): Utente {\r\n    //scorro tutte le persone nella chat selezionata\r\n    for (let i = 0; i < this.listaPersoneMessaggi.length; ++i) {\r\n        //verifico che l id della persona coincida con quello in input\r\n        if (this.listaPersoneMessaggi[i].getIdUser() === idUtente) {\r\n            return this.listaPersoneMessaggi[i];\r\n        }\r\n    }\r\n    return null;\r\n}","import { Injectable } from \"@angular/core\";\nimport { PersonaService } from \"./persona.service\";\nimport { Observable } from \"rxjs\";\nimport * as io from \"socket.io-client\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SocketioService {\n\n  private socket: SocketIOClient.Socket;\n\n  constructor(private us: PersonaService) { }\n\n  connect(): Observable<any> {\n    this.socket = io(this.us.getUrl());\n    return new Observable((observer) => {\n      this.socket.on(\"broadcast\", (m) => {\n        console.log(\"Messaggio ricevuto: \" + JSON.stringify(m));\n        observer.next(m);\n      });\n      this.socket.on(\"error\", (err) => {\n        console.log(\"Errore socket: \" + err);\n        observer.error(err);\n      });\n      return () => {\n        this.socket.disconnect();\n      }\n    });\n\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { LoginComponent } from \"./componenti/login/login.component\";\nimport { RegistrazioneComponent } from \"./componenti/registrazione/registrazione.component\";\nimport { PassworddimenticataComponent } from \"./componenti/passworddimenticata/passworddimenticata.component\";\nimport { ModificapasswordComponent } from \"./componenti/modificapassword/modificapassword.component\";\nimport { HomepagemoderatoreComponent } from \"./componenti/homepagemoderatore/homepagemoderatore.component\";\nimport { HomepagestudenteComponent } from \"./componenti/homepagestudente/homepagestudente.component\";\nimport { HomepagenonloggatoComponent } from \"./componenti/homepagenonloggato/homepagenonloggato.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"registrazione\", component: RegistrazioneComponent },\n  { path: \"passworddimenticata\", component: PassworddimenticataComponent },\n  { path: \"modificapassword\", component: ModificapasswordComponent },\n  { path: \"homepagemoderatore\", component: HomepagemoderatoreComponent },\n  { path: \"homepagestudente\", component: HomepagestudenteComponent },\n  { path: \"homepagenonloggato\", component: HomepagenonloggatoComponent }\n];\n\n@NgModule( {\n  imports: [ RouterModule.forRoot( routes ) ],\n  exports: [ RouterModule ]\n} )\nexport class AppRoutingModule { }\n","import { Utente } from \"src/app/classi/user\";\r\n\r\n//funzione per estrarre la lista di utenti\r\nexport function getListaStudenti(): void {\r\n    //estraggo la lista di studenti\r\n    this.us.getListaStudenti().subscribe((data) => {\r\n        //per ciascun studente trovato\r\n        for (var i = 0; i < data.utenti.length; ++i) {\r\n            //lo inserisco nella lista di studenti \r\n            this.utenti.push(new Utente(data.utenti[i]));\r\n        }\r\n    }, (err) => {\r\n        //errore estrazione lista studenti\r\n        this.dettagliErrore.setMessage(\"Errore estrazione lista studenti\");\r\n        this.dettagliErrore.setReason(JSON.stringify(err));\r\n        console.log(\"Errore estrazione lista studenti \" + JSON.stringify(err));\r\n    });\r\n}\r\n\r\n//funzione per eliminare uno studente\r\nexport function eliminaStudente(idStudente: number): void {\r\n    //mi creo la lista di indici delle inserzioni da eliminare\r\n    var listaIndiciInserzioni: number[] = new Array();\r\n    //mi creo la lista di indici dei libri collegati alle inserzioni da eliminare\r\n    var listaIndiciLibriInserzioni: number[] = new Array();\r\n    //estraggo tutte le inserzioni\r\n    this.is.getListaInserzioni().subscribe((data) => {\r\n        //per ciascuna inserzione estratta\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //controllo che l utente che voglio eliminare non abbia ultime offerte nelle inserzioni altrimenti errore\r\n            if (data.inserzioni[i].utentePrezzoAttuale === idStudente) {\r\n                //controllo che creatore dell inserzione e dell ultima offerta non coindano \r\n                if (data.inserzioni[i].utentePrezzoAttuale !== data.inserzioni[i].utente) {\r\n                    //errore eliminazione studente perche ha delle ultime offerte\r\n                    this.dettagliErrore.setMessage(\"Errore eliminazione studente perche ha ultime offerte nelle inserzioni\");\r\n                    this.dettagliErrore.setReason(\"\");\r\n                    console.log(\"Errore eliminazione studente perche ha ultime offerte nelle inserzioni\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        //per ciascuna inserzioni\r\n        for (var i = 0; i < data.inserzioni.length; ++i) {\r\n            //controllo che l inserzione sia stata creata dallo studente da eliminare\r\n            if (data.inserzioni[i].utente === idStudente) {\r\n                //inserisco l indice dell inserzione nella lista di id\r\n                listaIndiciInserzioni.push(data.inserzioni[i].idInserzione);\r\n                //inserisco l id del libro nella lista degli indici da eliminare\r\n                listaIndiciLibriInserzioni.push(data.inserzioni[i].libro);\r\n            }\r\n        }\r\n        //controllo se ha delle inserzioni \r\n        if (listaIndiciInserzioni.length !== 0) {\r\n            //elimino le inserzioni\r\n            this.is.eliminaInserzione(listaIndiciInserzioni).subscribe((data) => {\r\n                //elimino i libri\r\n                this.ls.eliminaLibro(listaIndiciLibriInserzioni).subscribe((data) => {\r\n                    //elimino lo studente\r\n                    this.us.eliminaStudente(idStudente).subscribe((data) => {\r\n                        //aggiorno i dati\r\n                        this.aggiornaDati();\r\n                    }, (err) => {\r\n                        //errore eliminazione studente\r\n                        this.dettagliErrore.setMessage(\"Errore eliminazione studente\");\r\n                        this.dettagliErrore.setReason(JSON.stringify(err));\r\n                        console.log(\"Errore eliminazione studente \" + JSON.stringify(err));\r\n                    });\r\n                }, (err) => {\r\n                    //errore eliminazione libro\r\n                    this.dettagliErrore.setMessage(\"Errore eliminazione libri\");\r\n                    this.dettagliErrore.setReason(JSON.stringify(err));\r\n                    console.log(\"Errore eliminazione libri \" + JSON.stringify(err));\r\n                });\r\n            }, (err) => {\r\n                //errore eliminazione inserzione\r\n                this.dettagliErrore.setMessage(\"Errore eliminazione inserzioni\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore eliminazione inserzioni \" + JSON.stringify(err));\r\n            });\r\n        }\r\n        //se invece l utente non ha inserzioni\r\n        else {\r\n            //elimino lo studente\r\n            this.us.eliminaStudente(idStudente).subscribe((data) => {\r\n                //aggiorno i dati\r\n                this.aggiornaDati();\r\n            }, (err) => {\r\n                //errore eliminazione studente\r\n                this.dettagliErrore.setMessage(\"Errore eliminazione studente\");\r\n                this.dettagliErrore.setReason(JSON.stringify(err));\r\n                console.log(\"Errore eliminazione studente \" + JSON.stringify(err));\r\n            });\r\n        }\r\n    });\r\n}","//classe per la gestione del libro\r\nexport class Libro {\r\n    idLibro?: number;\r\n    nome?: string;\r\n    corsoDiStudi?: string;\r\n    universita?: string;\r\n    autore?: number;\r\n    annoPubblicazione?: number;\r\n    edizione?: number;\r\n    isbn?: string;\r\n\r\n    constructor(libro?: Libro) {\r\n        if (libro) {\r\n            if (libro.idLibro) this.setIdLibro(libro.idLibro);\r\n            if (libro.nome) this.setNome(libro.nome);\r\n            if (libro.corsoDiStudi) this.setCorsoDiStudi(libro.corsoDiStudi);\r\n            if (libro.universita) this.setUniversita(libro.universita);\r\n            if (libro.autore) this.setAutore(libro.autore);\r\n            if (libro.annoPubblicazione) this.setAnnoPubblicazione(libro.annoPubblicazione);\r\n            if (libro.edizione) this.setEdizione(libro.edizione);\r\n            if (libro.isbn) this.setIsbn(libro.isbn);\r\n        }\r\n    }\r\n\r\n    public getIdLibro(): number {\r\n        return this.idLibro;\r\n    }\r\n\r\n    public setIdLibro(idLibro): void {\r\n        this.idLibro = idLibro;\r\n    }\r\n\r\n    public getNome(): string {\r\n        return this.nome;\r\n    }\r\n\r\n    public setNome(nome): void {\r\n        this.nome = nome;\r\n    }\r\n\r\n    public getCorsoDiStudi(): string {\r\n        return this.corsoDiStudi;\r\n    }\r\n\r\n    public setCorsoDiStudi(corsoDiStudi): void {\r\n        this.corsoDiStudi = corsoDiStudi;\r\n    }\r\n\r\n    public getUniversita(): string {\r\n        return this.universita;\r\n    }\r\n\r\n    public setUniversita(universita): void {\r\n        this.universita = universita;\r\n    }\r\n\r\n    public getAutore(): number {\r\n        return this.autore;\r\n    }\r\n\r\n    public setAutore(autore): void {\r\n        this.autore = autore;\r\n    }\r\n\r\n    public getAnnoPubblicazione(): number {\r\n        return this.annoPubblicazione;\r\n    }\r\n\r\n    public setAnnoPubblicazione(annoPubblicazione): void {\r\n        this.annoPubblicazione = annoPubblicazione;\r\n    }\r\n\r\n    public getEdizione(): number {\r\n        return this.edizione;\r\n    }\r\n\r\n    public setEdizione(edizione): void {\r\n        this.edizione = edizione;\r\n    }\r\n\r\n    public getIsbn(): string {\r\n        return this.isbn;\r\n    }\r\n\r\n    public setIsbn(isbn): void {\r\n        this.isbn = isbn;\r\n    }\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\ndocument.addEventListener(\"deviceready\", () => {//aggiunto\n\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n\n}, false);//aggiunto\n\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}